{"version":3,"sources":["webpack:///./node_modules/datatables/media/js/jquery.dataTables.js","webpack:///./node_modules/jquery/dist/jquery.js"],"names":["__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","__webpack_require__","undefined","$","window","document","_ext","_Api","_api_register","_api_registerPlural","DataTable","options","this","sSelector","oOpts","api","_","rows","data","traditional","_fnSettingsFromNode","iApiIndex","fnAddData","redraw","isArray","isPlainObject","add","row","draw","flatten","toArray","fnAdjustColumnSizing","bRedraw","columns","adjust","settings","scroll","oScroll","sX","sY","_fnScrollDraw","fnClearTable","clear","fnClose","nTr","child","hide","fnDeleteRow","target","callback","aoData","remove","call","fnDestroy","destroy","fnDraw","complete","fnFilter","sInput","iColumn","bRegex","bSmart","bShowGlobal","bCaseInsensitive","search","column","fnGetData","src","col","type","nodeName","toLowerCase","cell","fnGetNodes","iRow","node","nodes","fnGetPosition","toUpperCase","index","columnVisible","fnIsOpen","isShown","fnOpen","mHtml","sClass","show","fnPageChange","mAction","page","fnSetColumnVis","iCol","bShow","visible","fnSettings","fnSort","aaSort","order","fnSortListener","nNode","fnCallback","listener","fnUpdate","mData","mRow","bAction","fnVersionCheck","_that","emptyInit","len","length","fn","oApi","internal","ext","_fnExternApiFunc","each","iLen","oInit","_fnExtend","i","sId","getAttribute","bInitHandedOff","defaults","$this","_fnCompatOpts","_fnCompatCols","_fnCamelToHungarian","extend","allSettings","s","nTable","nTHead","parentNode","nTFoot","bRetrieve","bDestroy","oInstance","_fnLog","sTableId","id","splice","_unique","oSettings","models","sDestroyWidth","style","width","sInstance","push","dataTable","_fnLanguageCompat","oLanguage","aLengthMenu","iDisplayLength","_fnMap","oFeatures","_fnCallbackReg","fnDrawCallback","fnServerParams","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","rowIdFn","_fnGetObjectDataFn","rowId","_fnBrowserDetect","oClasses","classes","addClass","sTable","iInitDisplayStart","iDisplayStart","_iDisplayStart","iDeferLoading","bDeferLoading","tmp","_iRecordsDisplay","_iRecordsTotal","sUrl","ajax","dataType","url","success","json","_fnInitialise","error","asStripeClasses","sStripeOdd","sStripeEven","stripeClasses","rowOne","children","find","eq","inArray","map","el","hasClass","removeClass","join","asDestroyStripes","slice","aoColumnsInit","anThs","nThead","getElementsByTagName","_fnDetectHeader","aoHeader","_fnGetUniqueThs","aoColumns","_fnAddColumn","_fnApplyColumnDefs","aoColumnDefs","oDef","_fnColumnOptions","a","name","sort","filter","features","loadedInit","aaSorting","sorting","asSorting","_fnSortingClasses","bSort","bSorted","aSort","_fnSortFlatten","sortedColumns","val","dir","_fnCallbackFire","_fnSortAria","_fnDataSource","bDeferRender","captions","_captionSide","css","thead","appendTo","tbody","nTBody","tfoot","sNoFooter","aoFooter","aaData","_fnAddData","_fnAddTr","aiDisplay","aiDisplayMaster","bInitialised","bStateSave","_fnSaveState","_fnLoadState","_re_dic","_re_new_lines","_re_html","_re_date","_re_escape_regex","RegExp","_re_formatted_numeric","_empty","d","_intVal","integer","parseInt","isNaN","isFinite","_numToDecimal","num","decimalPoint","_fnEscapeRegex","replace","_isNumber","formatted","strType","parseFloat","_htmlNumeric","html","_isHtml","_stripHtml","_pluck","prop","prop2","out","ien","_pluck_order","_range","start","end","_removeEmpty","sorted","last","_areAllUnique","j","k","again","_fnHungarianMap","o","match","newKey","key","indexOf","_hungarianMap","user","force","hungarianKey","charAt","lang","defaultDecimal","sDecimal","_addNumericSort","zeroRecords","sZeroRecords","sEmptyTable","sLoadingRecords","sInfoThousands","sThousands","decimal","util","throttle","freq","timer","frequency","that","now","Date","args","arguments","clearTimeout","setTimeout","apply","escapeRegex","_fnCompatMap","knew","old","init","sScrollX","scrollX","searchCols","aoSearchCols","oSearch","dataSort","aDataSort","__browser","browser","n","position","top","left","scrollLeft","height","overflow","append","outer","inner","barWidth","offsetWidth","clientWidth","bScrollOversize","bScrollbarLeft","Math","round","offset","bBounding","getBoundingClientRect","oBrowser","iBarWidth","_fnReduce","inc","value","isSet","hasOwnProperty","nTh","oDefaults","oCol","oColumn","createElement","sTitle","innerHTML","idx","aoPreSearchCols","oOptions","th","sWidthOrig","attr","t","mDataProp","sType","_sManualType","className","iDataSort","mDataSrc","mRender","attrTest","_bAttrSrc","_setter","rowData","meta","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","bSortable","sSortableNone","bAsc","bDesc","sSortingClass","sSortableAsc","sSortingClassJUI","sSortJUIAscAllowed","sSortableDesc","sSortJUIDescAllowed","sSortable","sSortJUI","_fnAdjustColumnSizing","bAutoWidth","_fnCalculateColumnWidths","sWidth","_fnVisibleToColumnIndex","iMatch","aiVis","_fnGetColumns","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","vis","bVisible","sParam","_fnColumnTypes","jen","ken","detectedType","cache","types","detect","_fnGetCellData","aoColDefs","aoCols","jLen","kLen","def","aTargets","targets","aDataIn","anTds","oData","oRow","_aData","aIds","_fnCreateTr","trs","_fnGetRowElements","cells","rowIdx","colIdx","iDraw","defaultContent","sDefaultContent","cellData","iDrawError","_fnSetCellData","__reArray","__reFn","_fnSplitObjNotation","str","mSource","fetchData","arrayNotation","funcNotation","innerSrc","substring","setData","b","aLast","_fnGetDataMaster","_fnClearTable","_fnDeleteIndex","iTarget","iTargetIndex","_fnInvalidate","cellWrite","childNodes","removeChild","firstChild","anCells","_aSortData","_aFilterData","cols","_fnRowAttributes","contents","tds","td","objectRead","setter","cellProcess","trim","nextSibling","rowNode","nTrIn","nTd","_DT_RowIndex","sCellType","_DT_CellIndex","appendChild","fnCreatedCell","setAttribute","tr","DT_RowClass","split","__rowc","concat","DT_RowAttr","DT_RowData","_fnBuildHead","createHeader","iTabIndex","_fnSortAttachListener","_fnRenderer","sHeaderTH","sFooterTH","nTf","_fnDrawHead","aoSource","bIncludeHidden","nLocalTr","iRowspan","iColspan","aoLocal","aApplied","iColumns","_fnDraw","aPreDraw","anRows","iRowCount","iStripes","oLang","aoOpenRows","bServerSide","bDrawing","fnRecordsDisplay","iDisplayEnd","fnDisplayEnd","_fnProcessingDisplay","bDestroying","_fnAjaxUpdate","iStart","iEnd","iDataIndex","nRow","sStripe","_sRowStripe","sZero","fnRecordsTotal","class","valign","colSpan","sRowEmpty","body","detach","bFiltered","_fnReDraw","holdPosition","bFilter","_fnSort","_fnFilterComplete","oPreviousSearch","_drawHold","_fnAddOptionsHtml","table","holding","insertBefore","insert","sWrapper","nHolding","nTableWrapper","nTableReinsertBefore","featureNode","cOption","nNewNode","cNext","sAttr","aDom","sDom","sJUIHeader","sJUIFooter","aSplit","substr","parent","bPaginate","bLengthChange","_fnFeatureHtmlLength","_fnFeatureHtmlFilter","bProcessing","_fnFeatureHtmlProcessing","_fnFeatureHtmlTable","bInfo","_fnFeatureHtmlInfo","_fnFeatureHtmlPaginate","feature","aoFeatures","cFeature","fnInit","aanFeatures","replaceWith","aLayout","nCell","l","iColShifted","bUnique","nTrs","fnShiftCol","unique","nHeader","aReturn","bSortCellsTop","_fnBuildAjax","rbracket","ajaxData","instance","jqXHR","newData","baseAjax","sError","sServerMethod","xhr","thrown","ret","readyState","oAjaxData","fnServerData","sAjaxSource","bAjaxDataGet","_fnAjaxParameters","_fnAjaxUpdateDraw","dataProp","columnSearch","columnCount","preSearch","preColSearch","displayStart","displayLength","_iDisplayLength","param","sSearch","regex","sName","searchable","bSearchable","orderable","legacy","compat","modern","_fnAjaxDataSrc","recordsTotal","recordsFiltered","_bInitComplete","_fnInitComplete","dataSrc","sAjaxDataProp","tableId","language","previousSearch","input","sFilterInput","f","sFilter","searchFn","searchDelay","jqFilter","sSearchPlaceholder","on","_fnThrottle","e","keyCode","ev","activeElement","oInput","iForce","oPrevSearch","aoPrevSearch","fnSaveFilter","oFilter","fnRegex","bEscapeRegex","_fnFilter","_fnFilterColumn","_fnFilterCustom","filters","displayRows","merge","searchStr","smart","caseInsensitive","display","rpSearch","_fnFilterCreateSearch","test","invalidated","prevSearch","displayMaster","filtered","_fnFilterData","_sFilterRow","word","m","__filter_div","__filter_div_textContent","textContent","filterData","fomatters","wasInvalidated","toString","innerText","_fnSearchToCamel","obj","_fnSearchToHung","tid","sInfo","aoDrawCallback","_fnUpdateInfo","max","total","sInfoEmpty","sInfoFiltered","sInfoPostFix","_fnInfoMacros","fnInfoCallback","formatter","fnFormatNumber","all","ceil","iAjaxStart","deferLoading","_fnStringToCss","aData","_fnLengthChange","_fnLengthOverflow","menu","d2","lengths","select","aria-controls","sLengthSelect","Option","div","sLength","sLengthMenu","outerHTML","sPaginationType","plugin","pager","sPaging","p","visRecords","pages","buttons","_fnPageChange","action","records","floor","changed","r","sProcessing","scrollY","caption","captionSide","headerClone","cloneNode","footerClone","footer","_div","size","scroller","sScrollWrapper","sScrollHead","border","sScrollHeadInner","box-sizing","sXInner","removeAttr","sScrollBody","sScrollFoot","sScrollFootInner","scrollHead","scrollBody","scrollFoot","bCollapse","nScrollHead","nScrollBody","nScrollFoot","headerTrgEls","footerTrgEls","headerSrcEls","footerSrcEls","headerCopy","footerCopy","correction","sanityWidth","scrollXInner","divHeader","divHeaderStyle","divHeaderInner","divHeaderInnerStyle","divHeaderTable","divBodyEl","divBody","divBodyStyle","divFooter","divFooterInner","divFooterTable","header","tableEl","tableStyle","ie67","dtHeaderCells","headerWidths","footerWidths","headerContent","footerContent","zeroOut","nSizer","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","scrollBarVis","scrollHeight","clientHeight","clone","prependTo","_fnApplyToChildren","outerWidth","offsetHeight","nToSize","iOuterWidth","bScrolling","padding","scrollTop","an1","an2","nNode1","nNode2","nodeType","__re_html_remove","columnIdx","visibleColumns","headerCells","tableWidthAttr","tableContainer","userInputs","styleWidth","_fnConvertToWidth","tmpTable","margin","_fnGetWidestNode","sContentPadding","holder","right","bounding","_reszEvt","bindResize","_fnGetMaxLenString","maxIdx","srcCol","fixed","aaSortingFixed","fixedObj","nestedSort","pre","post","_idx","sortCol","aiOrig","oExtSort","formatters","_fnSortData","x","y","dataA","dataB","label","nextSort","oAria","removeAttribute","sSortAscending","sSortDescending","_fnSortListener","nextSortIdx","next","bSortMulti","sortIdx","attachTo","_fnBindAction","shiftKey","oldSort","aLastSort","sortClass","sSortColumn","bSortClasses","customData","customSort","sSortDataType","state","time","oSavedState","fnStateSaveCallback","loaded","abStateLoad","duration","iStateDuration","oLoadedState","fnStateLoadCallback","level","msg","tn","console","log","sErrMode","errMode","alert","Error","mappedName","extender","breakRefs","blur","which","preventDefault","sStore","callbackArr","eventName","reverse","Event","trigger","result","renderer","host","__apiStruct","__arrayProto","Array","prototype","context","ctxSettings","mixed","jq","tables","_toSettings","selector","opts","Api","any","count","ctx","iterator","alwaysNew","items","item","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","pop","reduce","reduceRight","shift","to$","toJQuery","unshift","scope","__dt_wrapper","struct","methodScoping","struc","methodExt","propExt","register","method","heir","registerPlural","pluralName","singularName","__table_selector","paging","info","recordsDisplay","serverSide","__reload","one","abort","resetPaging","_selector_run","selectFn","res","selectorType","_selector_opts","_selector_first","inst","displayFiltered","displayFilteredMap","sel","selInt","cellIdx","closest","rowObj","__row_selector","hash","thatIdx","loopRow","loopCells","newRows","modRows","__details_remove","_details","_detailsShow","__details_display","insertAfter","__details_events","off","drawEvent","_child_obj","klass","addRow","created","__details_add","_child_mth","__re_column_selector","__columnData","r1","r2","names","visColumns","jqResult","__column_selector","calc","__setColumnVis","rowSelector","columnSelector","allCells","fnSelector","__cell_selector","set","caseInsen","versionCheck","version","iThis","iThat","aThis","aThat","isDataTable","fnIsDataTable","get","is","head","foot","fnTables","camelToHungarian","jqRows","orig","jqTable","jqTbody","jqWrapper","removedMethod","arg1","arg2","arg3","arg4","token","plural","resolved","bScrollCollapse","toFormat","JSON","parse","sessionStorage","localStorage","getItem","location","pathname","setItem","stringify","oPaginate","sFirst","sLast","sNext","sPrevious","sScrollXInner","sScrollY","aoRowCallback","aoHeaderCallback","aoFooterCallback","aoRowCreatedCallback","aoPreDrawCallback","aoInitComplete","aoStateSaveParams","aoStateLoadParams","aoStateLoaded","aoStateSave","aoStateLoad","aoServerParams","aoDestroyCallback","paginate","min","oPlugins","builder","pageButton","oJUIClasses","sVersion","afnFiltering","aTypes","ofnSearch","oSort","afnSortData","oStdClasses","oPagination","sPageButton","sPageButtonActive","sPageButtonDisabled","sSortAsc","sSortDesc","sSortJUIAsc","sSortJUIDesc","sSortJUIWrapper","sSortIcon","extPagination","_numbers","numbers","numbers_length","half","DT_el","simple","full","simple_numbers","full_numbers","first_last_numbers","btnDisplay","btnClass","activeEl","aria","counter","attach","container","button","clickHandler","aria-label","data-dt-idx","tabindex","empty","focus","parsed","string","__numericReplace","decimalPlace","re1","re2","Infinity","num-fmt","html-num","html-num-fmt","date-pre","ts","html-pre","string-pre","string-asc","string-desc","jqueryui","__htmlEscapeEntities","render","number","thousands","precision","prefix","postfix","negative","flo","toFixed","abs","intPart","floatPart","text","_fnNodeToDataIndex","_fnNodeToColumnIndex","_fnCalculateEnd","dataTableSettings","dataTableExt","exports","module","global","w","noGlobal","arr","getProto","Object","getPrototypeOf","class2type","hasOwn","fnToString","ObjectFunctionString","support","isFunction","isWindow","preservedScriptAttributes","noModule","DOMEval","code","doc","script","toType","jQuery","rtrim","isArrayLike","jquery","constructor","pushStack","elems","prevObject","elem","first","copy","copyIsArray","deep","expando","random","isReady","noop","proto","Ctor","isEmptyObject","globalEval","makeArray","results","second","grep","invert","matches","callbackExpect","arg","guid","Symbol","Sizzle","Expr","getText","isXML","tokenize","compile","outermostContext","sortInput","hasDuplicate","setDocument","docElem","documentIsHTML","rbuggyQSA","rbuggyMatches","contains","preferredDoc","dirruns","done","classCache","createCache","tokenCache","compilerCache","sortOrder","push_native","list","booleans","whitespace","identifier","attributes","pseudos","rwhitespace","rcomma","rcombinators","rattributeQuotes","rpseudo","ridentifier","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rinputs","rheader","rnative","rquickExpr","rsibling","runescape","funescape","escaped","escapedWhitespace","high","String","fromCharCode","rcssescape","fcssescape","ch","asCodePoint","charCodeAt","unloadHandler","disabledAncestor","addCombinator","disabled","els","seed","nid","groups","newSelector","newContext","ownerDocument","exec","getElementById","getElementsByClassName","qsa","toSelector","testContext","querySelectorAll","qsaError","keys","cacheLength","markFunction","assert","addHandle","attrs","handler","attrHandle","siblingCheck","cur","diff","sourceIndex","createInputPseudo","createButtonPseudo","createDisabledPseudo","isDisabled","createPositionalPseudo","argument","matchIndexes","documentElement","hasCompare","subWindow","defaultView","addEventListener","attachEvent","createComment","getById","getElementsByName","attrId","getAttributeNode","tag","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","expr","elements","specified","escape","uniqueSort","duplicates","detectDuplicates","sortStable","nodeValue","selectors","createPseudo","relative",">"," ","+","~","preFilter","excess","unquoted","nodeNameSelector","pattern","operator","check","what","forward","ofType","xml","uniqueCache","outerCache","nodeIndex","useCache","lastChild","uniqueID","pseudo","setFilters","matched","not","matcher","unmatched","has","elemLang","root","hasFocus","href","tabIndex","enabled","checked","selected","selectedIndex","even","odd","lt","gt","radio","checkbox","file","password","image","submit","reset","tokens","combinator","base","skip","checkNonElements","doneName","oldCache","newCache","elementMatcher","matchers","condense","newUnmatched","mapped","setMatcher","postFilter","postFinder","postSelector","temp","preMap","postMap","preexisting","contexts","multipleContexts","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","implicitRelative","matchContext","matchAnyContext","parseOnly","soFar","preFilters","cached","setMatchers","elementMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","dirrunsUnique","matcherFromGroupMatchers","compiled","defaultValue","isXMLDoc","escapeSelector","until","truncate","siblings","rneedsContext","rsingleTag","winnow","qualifier","self","rootjQuery","parseHTML","ready","rparentsprev","guaranteedUnique","prev","sibling","prevAll","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","contentDocument","content","rnothtmlwhite","Identity","v","Thrower","ex","adoptValue","resolve","reject","noValue","promise","fail","then","Callbacks","object","flag","createOptions","firing","memory","fired","locked","queue","firingIndex","fire","once","stopOnFalse","disable","lock","fireWith","Deferred","func","tuples","always","deferred","catch","pipe","fns","newDefer","tuple","returned","progress","notify","onFulfilled","onRejected","onProgress","maxDepth","depth","special","mightThrow","TypeError","notifyWith","resolveWith","process","exceptionHook","stackTrace","rejectWith","getStackHook","stateString","when","singleValue","remaining","resolveContexts","resolveValues","master","updateFunc","rerrorNames","stack","warn","message","readyException","readyList","completed","removeEventListener","readyWait","wait","doScroll","access","chainable","emptyGet","raw","bulk","rmsPrefix","rdashAlpha","fcamelCase","letter","camelCase","acceptData","owner","Data","uid","defineProperty","configurable","hasData","dataPriv","dataUser","rbrace","rmultiDash","dataAttr","getData","removeData","_data","_removeData","dequeue","startLength","hooks","_queueHooks","stop","clearQueue","defer","pnum","source","rcssNum","cssExpand","isHiddenWithinTree","swap","adjustCSS","valueParts","tween","adjusted","scale","maxIterations","currentValue","initial","unit","cssNumber","initialInUnit","defaultDisplayMap","getDefaultDisplay","showHide","values","toggle","rcheckableType","rtagName","rscriptType","wrapMap","option","_default","getAll","setGlobalEval","refElements","optgroup","colgroup","rhtml","buildFragment","scripts","selection","ignored","wrap","fragment","createDocumentFragment","htmlPrefilter","createTextNode","checkClone","noCloneChecked","rkeyEvent","rmouseEvent","rtypenamespace","returnTrue","returnFalse","safeActiveElement","err","origFn","event","handleObjIn","eventHandle","events","handleObj","handlers","namespaces","origType","elemData","handle","triggered","dispatch","delegateType","bindType","namespace","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","nativeEvent","handlerQueue","fix","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","stopPropagation","postDispatch","matchedHandlers","matchedSelectors","addProp","hook","enumerable","originalEvent","writable","load","noBubble","click","beforeunload","returnValue","props","isDefaultPrevented","defaultPrevented","relatedTarget","timeStamp","isSimulated","stopImmediatePropagation","altKey","bubbles","cancelable","changedTouches","ctrlKey","detail","eventPhase","metaKey","pageX","pageY","view","char","charCode","clientX","clientY","offsetX","offsetY","pointerId","pointerType","screenX","screenY","targetTouches","toElement","touches","mouseenter","mouseleave","pointerenter","pointerleave","related","rxhtmlTag","rnoInnerhtml","rchecked","rcleanScript","manipulationTarget","disableScript","restoreScript","cloneCopyEvent","dest","pdataOld","pdataCur","udataOld","udataCur","fixInput","domManip","collection","hasScripts","iNoClone","valueIsFunction","_evalUrl","keepData","cleanData","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","prepend","before","after","replaceChild","replaceAll","original","rnumnonpx","getStyles","opener","getComputedStyle","rboxStyle","curCSS","computed","minWidth","maxWidth","getPropertyValue","pixelBoxStyles","addGetHookIf","conditionFn","hookFn","computeStyleTests","cssText","divStyle","pixelPositionVal","reliableMarginLeftVal","roundPixelMeasures","marginLeft","pixelBoxStylesVal","boxSizingReliableVal","scrollboxSizeVal","measure","backgroundClip","clearCloneStyle","boxSizingReliable","pixelPosition","reliableMarginLeft","scrollboxSize","rdisplayswap","rcustomProp","cssShow","visibility","cssNormalTransform","letterSpacing","fontWeight","cssPrefixes","emptyStyle","finalPropName","cssProps","capName","vendorPropName","setPositiveNumber","subtract","boxModelAdjustment","dimension","box","isBorderBox","styles","computedVal","extra","delta","getWidthOrHeight","valueIsBorderBox","Tween","easing","cssHooks","opacity","animationIterationCount","fillOpacity","flexGrow","flexShrink","lineHeight","orphans","widows","zIndex","zoom","origName","isCustomProp","setProperty","getClientRects","suffix","expand","expanded","parts","propHooks","run","percent","eased","pos","step","fx","linear","swing","cos","PI","fxNow","inProgress","rfxtypes","rrun","schedule","hidden","requestAnimationFrame","interval","tick","createFxNow","genFx","includeWidth","createTween","animation","Animation","tweeners","properties","stopped","prefilters","currentTime","startTime","tweens","specialEasing","originalProperties","originalOptions","gotoEnd","propFilter","bind","anim","*","tweener","oldfire","propTween","restoreDisplay","isBox","dataShow","unqueued","overflowX","overflowY","prefilter","speed","opt","speeds","fadeTo","to","animate","optall","doAnimation","finish","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","slow","fast","delay","timeout","checkOn","optSelected","radioValue","boolHook","nType","attrHooks","attrNames","getter","lowercaseName","rfocusable","rclickable","stripAndCollapse","getClass","classesToArray","removeProp","propFix","for","curValue","clazz","finalValue","toggleClass","stateVal","isValidValue","classNames","rreturn","valHooks","optionSet","focusin","rfocusMorph","stopPropagationCallback","onlyHandlers","bubbleType","ontype","lastElement","eventPath","isTrigger","parentWindow","simulate","triggerHandler","attaches","nonce","rquery","parseXML","DOMParser","parseFromString","rCRLF","rsubmitterTypes","rsubmittable","buildParams","valueOrFunction","encodeURIComponent","serialize","serializeArray","r20","rhash","rantiCache","rheaders","rnoContent","rprotocol","transports","allTypes","originAnchor","addToPrefiltersOrTransports","structure","dataTypeExpression","dataTypes","inspectPrefiltersOrTransports","inspected","seekingTransport","inspect","prefilterOrFactory","dataTypeOrTransport","ajaxExtend","flatOptions","ajaxSettings","active","lastModified","etag","isLocal","protocol","processData","async","contentType","accepts","responseFields","converters","* text","text html","text json","text xml","ajaxSetup","ajaxPrefilter","ajaxTransport","transport","cacheURL","responseHeadersString","responseHeaders","timeoutTimer","urlAnchor","fireGlobals","uncached","callbackContext","globalEventContext","completeDeferred","statusCode","requestHeaders","requestHeadersNames","strAbort","getResponseHeader","getAllResponseHeaders","setRequestHeader","overrideMimeType","mimeType","status","statusText","finalText","crossDomain","hasContent","ifModified","headers","beforeSend","send","nativeStatusText","responses","isSuccess","response","modified","ct","finalDataType","firstDataType","ajaxHandleResponses","conv2","current","conv","dataFilter","throws","ajaxConvert","getJSON","getScript","wrapAll","firstElementChild","wrapInner","htmlIsFunction","unwrap","XMLHttpRequest","xhrSuccessStatus","0","1223","xhrSupported","cors","errorCallback","open","username","xhrFields","onload","onerror","onabort","ontimeout","onreadystatechange","responseType","responseText","binary","text script","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","createHTMLDocument","implementation","keepScripts","params","animated","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","curElem","using","rect","win","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollTo","Height","Width","","defaultExtra","funcName","hover","fnOver","fnOut","unbind","delegate","undelegate","proxy","holdReady","hold","parseJSON","isNumeric","_jQuery","_$","noConflict"],"mappings":";;;;;;;;;2EAAA,IAAAA,EAAAC;;;;;;;CA0BA,SAAAC,GACA,aAIAF,GAAAG,EAAA,SAEGC,KAFHH,EAAA,SAAAI,GACA,OA0BA,SAAAA,EAAAC,EAAAC,EAAAH,GAmCA,IAqtCAI,EACAC,EACAC,EACAC,EAxtCAC,EAAA,SAAAC,GAsCAC,KAAAT,EAAA,SAAAU,EAAAC,GAEA,OAAAF,KAAAG,KAAA,GAAAZ,EAAAU,EAAAC,IAoDAF,KAAAI,EAAA,SAAAH,EAAAC,GAEA,OAAAF,KAAAG,KAAA,GAAAE,KAAAJ,EAAAC,GAAAI,QAaAN,KAAAG,IAAA,SAAAI,GAEA,OACA,IAAAZ,EADAY,EAEAC,GAAAR,KAAAN,EAAAe,YAEAT,OA0CAA,KAAAU,UAAA,SAAAJ,EAAAK,GAEA,IAAAR,EAAAH,KAAAG,KAAA,GAGAE,EAAAd,EAAAqB,QAAAN,KAAAf,EAAAqB,QAAAN,EAAA,KAAAf,EAAAsB,cAAAP,EAAA,KACAH,EAAAE,KAAAS,IAAAR,GACAH,EAAAY,IAAAD,IAAAR,GAMA,OAJAK,IAAArB,GAAAqB,IACAR,EAAAa,OAGAX,EAAAY,UAAAC,WAyBAlB,KAAAmB,qBAAA,SAAAC,GAEA,IAAAjB,EAAAH,KAAAG,KAAA,GAAAkB,QAAAC,SACAC,EAAApB,EAAAoB,WAAA,GACAC,EAAAD,EAAAE,QAEAL,IAAA9B,GAAA8B,EACAjB,EAAAa,MAAA,GAEA,KAAAQ,EAAAE,IAAA,KAAAF,EAAAG,IAEAC,GAAAL,IAmBAvB,KAAA6B,aAAA,SAAAT,GAEA,IAAAjB,EAAAH,KAAAG,KAAA,GAAA2B,SAEAV,IAAA9B,GAAA8B,IACAjB,EAAAa,QA6BAhB,KAAA+B,QAAA,SAAAC,GAEAhC,KAAAG,KAAA,GAAAY,IAAAiB,GAAAC,MAAAC,QAsBAlC,KAAAmC,YAAA,SAAAC,EAAAC,EAAA1B,GAEA,IAAAR,EAAAH,KAAAG,KAAA,GACAE,EAAAF,EAAAE,KAAA+B,GACAb,EAAAlB,EAAAkB,WAAA,GACAjB,EAAAiB,EAAAe,OAAAjC,EAAA,OAYA,OAVAA,EAAAkC,SAEAF,GACAA,EAAAG,KAAAxC,KAAAuB,EAAAjB,IAGAK,IAAArB,GAAAqB,IACAR,EAAAa,OAGAV,GAkBAN,KAAAyC,UAAA,SAAAF,GAEAvC,KAAAG,KAAA,GAAAuC,QAAAH,IAkBAvC,KAAA2C,OAAA,SAAAC,GAIA5C,KAAAG,KAAA,GAAAa,KAAA4B,IAuBA5C,KAAA6C,SAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,IAAAhD,EAAAH,KAAAG,KAAA,GAEA,OAAA4C,OAAAzD,EACAa,EAAAiD,OAAAN,EAAAE,EAAAC,EAAAE,GAGAhD,EAAAkD,OAAAN,GAAAK,OAAAN,EAAAE,EAAAC,EAAAE,GAGAhD,EAAAa,QAyCAhB,KAAAsD,UAAA,SAAAC,EAAAC,GAEA,IAAArD,EAAAH,KAAAG,KAAA,GAEA,GAAAoD,IAAAjE,EAAA,CACA,IAAAmE,EAAAF,EAAAG,SAAAH,EAAAG,SAAAC,cAAA,GAEA,OAAAH,IAAAlE,GAAA,MAAAmE,GAAA,MAAAA,EACAtD,EAAAyD,KAAAL,EAAAC,GAAAlD,OACAH,EAAAY,IAAAwC,GAAAjD,QAAA,KAGA,OAAAH,EAAAG,OAAAY,WAsBAlB,KAAA6D,WAAA,SAAAC,GAEA,IAAA3D,EAAAH,KAAAG,KAAA,GAEA,OAAA2D,IAAAxE,EACAa,EAAAY,IAAA+C,GAAAC,OACA5D,EAAAE,OAAA2D,QAAA/C,UAAAC,WAgCAlB,KAAAiE,cAAA,SAAAF,GAEA,IAAA5D,EAAAH,KAAAG,KAAA,GACAuD,EAAAK,EAAAL,SAAAQ,cAEA,SAAAR,EACA,OAAAvD,EAAAY,IAAAgD,GAAAI,QAEA,SAAAT,GAAA,MAAAA,EAAA,CACA,IAAAE,EAAAzD,EAAAyD,KAAAG,GAAAI,QAEA,OACAP,EAAA7C,IACA6C,EAAAQ,cACAR,EAAAP,QAGA,aA2BArD,KAAAqE,SAAA,SAAArC,GAEA,OAAAhC,KAAAG,KAAA,GAAAY,IAAAiB,GAAAC,MAAAqC,WAkCAtE,KAAAuE,OAAA,SAAAvC,EAAAwC,EAAAC,GAEA,OAAAzE,KAAAG,KAAA,GACAY,IAAAiB,GACAC,MAAAuC,EAAAC,GACAC,OACAzC,QAAA,IAoBAjC,KAAA2E,aAAA,SAAAC,EAAAxD,GAEA,IAAAjB,EAAAH,KAAAG,KAAA,GAAA0E,KAAAD,IAEAxD,IAAA9B,GAAA8B,IACAjB,EAAAa,MAAA,IAqBAhB,KAAA8E,eAAA,SAAAC,EAAAC,EAAA5D,GAEA,IAAAjB,EAAAH,KAAAG,KAAA,GAAAkD,OAAA0B,GAAAE,QAAAD,IAEA5D,IAAA9B,GAAA8B,IACAjB,EAAAkB,QAAAC,SAAAN,QAqBAhB,KAAAkF,WAAA,WAEA,OAAA1E,GAAAR,KAAAN,EAAAe,aAmBAT,KAAAmF,OAAA,SAAAC,GAEApF,KAAAG,KAAA,GAAAkF,MAAAD,GAAApE,QAoBAhB,KAAAsF,eAAA,SAAAC,EAAAxC,EAAAyC,GAEAxF,KAAAG,KAAA,GAAAkF,MAAAI,SAAAF,EAAAxC,EAAAyC,IA0BAxF,KAAA0F,SAAA,SAAAC,EAAAC,EAAA7C,EAAA3B,EAAAyE,GAEA,IAAA1F,EAAAH,KAAAG,KAAA,GAgBA,OAdA4C,IAAAzD,GAAA,OAAAyD,EACA5C,EAAAY,IAAA6E,GAAAtF,KAAAqF,GAGAxF,EAAAyD,KAAAgC,EAAA7C,GAAAzC,KAAAqF,IAGAE,IAAAvG,GAAAuG,IACA1F,EAAAkB,QAAAC,UAGAF,IAAA9B,GAAA8B,IACAjB,EAAAa,OAEA,GAqBAhB,KAAA8F,eAAApG,EAAAoG,eAGA,IAAAC,EAAA/F,KACAgG,EAAAjG,IAAAT,EACA2G,EAAAjG,KAAAkG,OASA,QAAAC,KAPAH,IACAjG,MAGAC,KAAAoG,KAAApG,KAAAqG,SAAA3G,EAAA2G,SAGAvG,EAAAwG,IAAAD,SACAF,IACAnG,KAAAmG,GAAAI,GAAAJ,IA8bA,OA1bAnG,KAAAwG,KAAA,WAGA,IAMAC,EALAC,EAAAT,EAAA,EACAU,MAAA5G,GAAA,GACAA,EAGA6G,EAAA,EACAC,EAAA7G,KAAA8G,aAAA,MACAC,GAAA,EACAC,EAAAlH,EAAAkH,SACAC,EAAA1H,EAAAS,MAIA,YAAAA,KAAA0D,SAAAC,cAAA,CAOAuD,EAAAF,GACAG,EAAAH,EAAA3D,QAGA+D,EAAAJ,KAAA,GACAI,EAAAJ,EAAA3D,OAAA2D,EAAA3D,QAAA,GAGA+D,EAAAJ,EAAAzH,EAAA8H,OAAAX,EAAAO,EAAA3G,SAKA,IAAAgH,EAAAxH,EAAAyB,SACA,IAAAqF,EAAA,EAAAH,EAAAa,EAAApB,OAAuCU,EAAAH,EAASG,IAChD,CACA,IAAAW,EAAAD,EAAAV,GAGA,GACAW,EAAAC,QAAAxH,MACAuH,EAAAE,QAAAF,EAAAE,OAAAC,YAAA1H,MACAuH,EAAAI,QAAAJ,EAAAI,OAAAD,YAAA1H,KACA,CACA,IAAA4H,EAAAlB,EAAAkB,YAAAtI,EAAAoH,EAAAkB,UAAAZ,EAAAY,UACAC,EAAAnB,EAAAmB,WAAAvI,EAAAoH,EAAAmB,SAAAb,EAAAa,SAEA,GAAA7B,GAAA4B,EAEA,OAAAL,EAAAO,UAEA,GAAAD,EACA,CACAN,EAAAO,UAAArF,YACA,MAKA,YADAsF,GAAAR,EAAA,qCAUA,GAAAA,EAAAS,UAAAhI,KAAAiI,GACA,CACAX,EAAAY,OAAAtB,EAAA,GACA,OAKA,OAAAC,GAAA,KAAAA,IAEAA,EAAA,oBAAA/G,EAAAwG,IAAA6B,UACAnI,KAAAiI,GAAApB,GAIA,IAAAuB,EAAA7I,EAAA8H,QAAA,KAAqCvH,EAAAuI,OAAAD,WACrCE,cAAArB,EAAA,GAAAsB,MAAAC,MACAC,UAAA5B,EACAmB,SAAAnB,IAEAuB,EAAAZ,OAAAxH,KACAoI,EAAAhC,KAAAL,EAAAM,SACA+B,EAAA1B,QAEAY,EAAAoB,KAAAN,GAIAA,EAAAN,UAAA,IAAA/B,EAAAG,OAAAH,EAAAkB,EAAA0B,YAGAzB,EAAAR,GACAkC,EAAAlC,EAAAmC,WAGAnC,EAAAoC,cAAApC,EAAAqC,iBAEArC,EAAAqC,eAAAxJ,EAAAqB,QAAA8F,EAAAoC,YAAA,IACApC,EAAAoC,YAAA,MAAApC,EAAAoC,YAAA,IAKApC,EAAAC,GAAApH,EAAA8H,QAAA,KAAwCL,GAAAN,GAIxCsC,GAAAZ,EAAAa,UAAAvC,GACA,YACA,gBACA,UACA,QACA,aACA,QACA,cACA,aACA,eACA,cACA,iBAEAsC,GAAAZ,EAAA1B,GACA,kBACA,OACA,eACA,iBACA,gBACA,YACA,iBACA,cACA,kBACA,cACA,gBACA,iBACA,OACA,gBACA,YACA,sBACA,sBACA,WACA,cACA,SACA,qCACA,8BACA,mCACA,sCAEAsC,GAAAZ,EAAA3G,QAAAiF,IACA,kBACA,4BACA,kBACA,iCAEAsC,GAAAZ,EAAAS,UAAAnC,EAAA,kBAGAwC,GAAAd,EAAA,iBAAA1B,EAAAyC,eAAA,QACAD,GAAAd,EAAA,iBAAA1B,EAAA0C,eAAA,QACAF,GAAAd,EAAA,oBAAA1B,EAAA2C,kBAAA,QACAH,GAAAd,EAAA,oBAAA1B,EAAA4C,kBAAA,QACAJ,GAAAd,EAAA,gBAAA1B,EAAA6C,cAAA,QACAL,GAAAd,EAAA,gBAAA1B,EAAA8C,cAAA,QACAN,GAAAd,EAAA,uBAAA1B,EAAA+C,aAAA,QACAP,GAAAd,EAAA,mBAAA1B,EAAAgD,iBAAA,QACAR,GAAAd,EAAA,mBAAA1B,EAAAiD,iBAAA,QACAT,GAAAd,EAAA,iBAAA1B,EAAAkD,eAAA,QACAV,GAAAd,EAAA,oBAAA1B,EAAAmD,kBAAA,QAEAzB,EAAA0B,QAAAC,EAAArD,EAAAsD,OAGAC,EAAA7B,GAEA,IAAA8B,EAAA9B,EAAA8B,SAaA,GAXA3K,EAAA8H,OAAA6C,EAAApK,EAAAwG,IAAA6D,QAAAzD,EAAAwD,UACAjD,EAAAmD,SAAAF,EAAAG,QAGAjC,EAAAkC,oBAAAhL,IAGA8I,EAAAkC,kBAAA5D,EAAA6D,cACAnC,EAAAoC,eAAA9D,EAAA6D,eAGA,OAAA7D,EAAA+D,cACA,CACArC,EAAAsC,eAAA,EACA,IAAAC,EAAApL,EAAAqB,QAAA8F,EAAA+D,eACArC,EAAAwC,iBAAAD,EAAAjE,EAAA+D,cAAA,GAAA/D,EAAA+D,cACArC,EAAAyC,eAAAF,EAAAjE,EAAA+D,cAAA,GAAA/D,EAAA+D,cAIA,IAAA5B,EAAAT,EAAAS,UACAtJ,EAAA8H,QAAA,EAAAwB,EAAAnC,EAAAmC,WAEAA,EAAAiC,OAMAvL,EAAAwL,MACAC,SAAA,OACAC,IAAApC,EAAAiC,KACAI,QAAA,SAAAC,GACAvC,EAAAuC,GACA/D,EAAAJ,EAAA6B,UAAAsC,GACA5L,EAAA8H,QAAA,EAAAwB,EAAAsC,GACAC,GAAAhD,IAEAiD,MAAA,WAEAD,GAAAhD,MAGArB,GAAA,GAMA,OAAAL,EAAA4E,kBAEAlD,EAAAkD,iBACApB,EAAAqB,WACArB,EAAAsB,cAKA,IAAAC,EAAArD,EAAAkD,gBACAI,EAAAzE,EAAA0E,SAAA,SAAAC,KAAA,MAAAC,GAAA,IAGI,IAFJtM,EAAAuM,SAAA,EAAAvM,EAAAwM,IAAAN,EAAA,SAAAO,EAAApF,GACA,OAAA8E,EAAAO,SAAAD,QAEAzM,EAAA,WAAAS,MAAAkM,YAAAT,EAAAU,KAAA,MACA/D,EAAAgE,iBAAAX,EAAAY,SAOA,IACAC,EADAC,KAEAC,EAAAxM,KAAAyM,qBAAA,SAQA,GAPA,IAAAD,EAAAtG,SAEAwG,GAAAtE,EAAAuE,SAAAH,EAAA,IACAD,EAAAK,GAAAxE,IAIA,OAAA1B,EAAAmG,UAGA,IADAP,KACA1F,EAAA,EAAAH,EAAA8F,EAAArG,OAAkCU,EAAAH,EAASG,IAE3C0F,EAAA5D,KAAA,WAKA4D,EAAA5F,EAAAmG,UAIA,IAAAjG,EAAA,EAAAH,EAAA6F,EAAApG,OAAyCU,EAAAH,EAASG,IAElDkG,EAAA1E,EAAAmE,IAAA3F,GAAA,MAWA,GAPAmG,EAAA3E,EAAA1B,EAAAsG,aAAAV,EAAA,SAAAvH,EAAAkI,GACAC,EAAA9E,EAAArD,EAAAkI,KAMAvB,EAAAxF,OAAA,CACA,IAAAiH,EAAA,SAAAvJ,EAAAwJ,GACA,cAAAxJ,EAAAkD,aAAA,QAAAsG,KAAA,MAGA7N,EAAAmM,EAAA,IAAAC,SAAA,UAAAnF,KAAA,SAAAI,EAAAhD,GACA,IAAAJ,EAAA4E,EAAAyE,UAAAjG,GAEA,GAAApD,EAAAmC,QAAAiB,EAAA,CACA,IAAAyG,EAAAF,EAAAvJ,EAAA,SAAAuJ,EAAAvJ,EAAA,SACA0J,EAAAH,EAAAvJ,EAAA,WAAAuJ,EAAAvJ,EAAA,UAEA,OAAAyJ,GAAA,OAAAC,IACA9J,EAAAmC,OACAvF,EAAAwG,EAAA,WACAyG,KAAA,OAAAA,EAAAzG,EAAA,UAAAyG,EAAA/N,EACAmE,KAAA,OAAA4J,EAAAzG,EAAA,UAAAyG,EAAA/N,EACAgO,OAAA,OAAAA,EAAA1G,EAAA,UAAA0G,EAAAhO,GAGA4N,EAAA9E,EAAAxB,OAMA,IAAA2G,EAAAnF,EAAAa,UACAuE,EAAA,WAQA,GAAA9G,EAAA+G,YAAAnO,EAAA,CACA,IAAAoO,EAAAtF,EAAAqF,UACA,IAAA7G,EAAA,EAAAH,EAAAiH,EAAAxH,OAAqCU,EAAAH,EAASG,IAC9C8G,EAAA9G,GAAA,GAAAwB,EAAAyE,UAAAjG,GAAA+G,UAAA,GAOAC,GAAAxF,GAEAmF,EAAAM,OACA3E,GAAAd,EAAA,4BACA,GAAAA,EAAA0F,QAAA,CACA,IAAAC,EAAAC,GAAA5F,GACA6F,KAEA1O,EAAAiH,KAAAuH,EAAA,SAAAnH,EAAAsH,GACAD,EAAAC,EAAA3K,KAAA2K,EAAAC,MAGAC,GAAAhG,EAAA,cAAAA,EAAA2F,EAAAE,IACAI,GAAAjG,MAKAc,GAAAd,EAAA,6BACAA,EAAA0F,SAAA,QAAAQ,GAAAlG,IAAAmF,EAAAgB,eACAX,GAAAxF,IAEK,MASL,IAAAoG,EAAAvH,EAAA0E,SAAA,WAAAnF,KAAA,WACAxG,KAAAyO,aAAAlP,EAAAS,MAAA0O,IAAA,kBAGAC,EAAA1H,EAAA0E,SAAA,SACA,IAAAgD,EAAAzI,SACAyI,EAAApP,EAAA,YAAAqP,SAAA3H,IAEAmB,EAAAX,OAAAkH,EAAA,GAEA,IAAAE,EAAA5H,EAAA0E,SAAA,SACA,IAAAkD,EAAA3I,SACA2I,EAAAtP,EAAA,YAAAqP,SAAA3H,IAEAmB,EAAA0G,OAAAD,EAAA,GAEA,IAAAE,EAAA9H,EAAA0E,SAAA,SAgBA,GAfA,IAAAoD,EAAA7I,QAAAsI,EAAAtI,OAAA,SAAAkC,EAAA3G,QAAAC,IAAA,KAAA0G,EAAA3G,QAAAE,MAGAoN,EAAAxP,EAAA,YAAAqP,SAAA3H,IAGA,IAAA8H,EAAA7I,QAAA,IAAA6I,EAAApD,WAAAzF,OACAe,EAAAmD,SAAAF,EAAA8E,WAEAD,EAAA7I,OAAA,IACAkC,EAAAT,OAAAoH,EAAA,GACArC,GAAAtE,EAAA6G,SAAA7G,EAAAT,SAIAjB,EAAAwI,OACA,IAAAtI,EAAA,EAAgBA,EAAAF,EAAAwI,OAAAhJ,OAAwBU,IACxCuI,EAAA/G,EAAA1B,EAAAwI,OAAAtI,SAGAwB,EAAAsC,eAAA,OAAA4D,GAAAlG,KAKAgH,EAAAhH,EAAA7I,EAAA6I,EAAA0G,QAAAnD,SAAA,OAIAvD,EAAAiH,UAAAjH,EAAAkH,gBAAAjD,QAGAjE,EAAAmH,cAAA,GAKA,IAAAxI,GACAqE,GAAAhD,IAKA1B,EAAA8I,YAEAjC,EAAAiC,YAAA,EACAtG,GAAAd,EAAA,iBAAAqH,GAAA,cACAC,GAAAtH,EAAA1B,EAAA8G,IAGAA,SAlaAzF,GAAA,yCAAA/H,KAAA0D,SAAA,SAsaAqC,EAAA,KACA/F,MAyBA2P,KACAC,EAAA,UACAC,EAAA,SAIAC,EAAA,kFAGAC,EAAA,IAAAC,OAAA,mDAAkG,IAAK,kBAAA7D,KAAA,gBAcvG8D,EAAA,iDAGAC,EAAA,SAAAC,GACA,OAAAA,IAAA,IAAAA,GAAA,MAAAA,GAIAC,EAAA,SAAA7I,GACA,IAAA8I,EAAAC,SAAA/I,EAAA,IACA,OAAAgJ,MAAAF,IAAAG,SAAAjJ,GAAA8I,EAAA,MAKAI,EAAA,SAAAC,EAAAC,GAKA,OAHAhB,EAAAgB,KACAhB,EAAAgB,GAAA,IAAAX,OAAAY,GAAAD,GAAA,MAEA,iBAAAD,GAAA,MAAAC,EACAD,EAAAG,QAAA,UAAAA,QAAAlB,EAAAgB,GAAA,KACAD,GAIAI,EAAA,SAAAX,EAAAQ,EAAAI,GACA,IAAAC,EAAA,iBAAAb,EAKA,QAAAD,EAAAC,KAIAQ,GAAAK,IACAb,EAAAM,EAAAN,EAAAQ,IAGAI,GAAAC,IACAb,IAAAU,QAAAZ,EAAA,MAGAM,MAAAU,WAAAd,KAAAK,SAAAL,KAUAe,EAAA,SAAAf,EAAAQ,EAAAI,GACA,GAAAb,EAAAC,GACA,SAGA,IAAAgB,EAVA,SAAAhB,GACA,OAAAD,EAAAC,IAAA,iBAAAA,EASAiB,CAAAjB,GACA,OAAAgB,KAEAL,EAAAO,EAAAlB,GAAAQ,EAAAI,IADA,MAOAO,EAAA,SAAAnE,EAAAoE,EAAAC,GACA,IAAAC,KACA7K,EAAA,EAAA8K,EAAAvE,EAAAjH,OAIA,GAAAsL,IAAAlS,EACA,KAAUsH,EAAA8K,EAAQ9K,IAClBuG,EAAAvG,IAAAuG,EAAAvG,GAAA2K,IACAE,EAAA/I,KAAAyE,EAAAvG,GAAA2K,GAAAC,SAKA,KAAU5K,EAAA8K,EAAQ9K,IAClBuG,EAAAvG,IACA6K,EAAA/I,KAAAyE,EAAAvG,GAAA2K,IAKA,OAAAE,GAMAE,EAAA,SAAAxE,EAAA9H,EAAAkM,EAAAC,GAEA,IAAAC,KACA7K,EAAA,EAAA8K,EAAArM,EAAAa,OAIA,GAAAsL,IAAAlS,EACA,KAAUsH,EAAA8K,EAAQ9K,IAClBuG,EAAA9H,EAAAuB,IAAA2K,IACAE,EAAA/I,KAAAyE,EAAA9H,EAAAuB,IAAA2K,GAAAC,SAKA,KAAU5K,EAAA8K,EAAQ9K,IAClB6K,EAAA/I,KAAAyE,EAAA9H,EAAAuB,IAAA2K,IAIA,OAAAE,GAIAG,EAAA,SAAA3L,EAAA4L,GAEA,IACAC,EADAL,KAGAI,IAAAvS,GACAuS,EAAA,EACAC,EAAA7L,IAGA6L,EAAAD,EACAA,EAAA5L,GAGA,QAAAW,EAAAiL,EAAqBjL,EAAAkL,EAAQlL,IAC7B6K,EAAA/I,KAAA9B,GAGA,OAAA6K,GAIAM,EAAA,SAAA5E,GAIA,IAFA,IAAAsE,KAEA7K,EAAA,EAAA8K,EAAAvE,EAAAjH,OAA+BU,EAAA8K,EAAQ9K,IACvCuG,EAAAvG,IACA6K,EAAA/I,KAAAyE,EAAAvG,IAIA,OAAA6K,GAIAJ,EAAA,SAAAlB,GACA,OAAAA,EAAAU,QAAAhB,EAAA,KAwCA1H,EAAA,SAAA5E,GAEA,GA7BA,SAAAA,GACA,GAAAA,EAAA2C,OAAA,EACA,SAMA,IAHA,IAAA8L,EAAAzO,EAAA8I,QAAAgB,OACA4E,EAAAD,EAAA,GAEApL,EAAA,EAAA8K,EAAAM,EAAA9L,OAAoCU,EAAA8K,EAAQ9K,IAAA,CAC5C,GAAAoL,EAAApL,KAAAqL,EACA,SAGAA,EAAAD,EAAApL,GAGA,SAaAsL,CAAA3O,GACA,OAAAA,EAAA8I,QAOA,IAEA6B,EACAtH,EACAuL,EAHAV,KAEAC,EAAAnO,EAAA2C,OACAkM,EAAA,EAEAC,EAAA,IAAAzL,EAAA,EAAoBA,EAAA8K,EAAQ9K,IAAA,CAG5B,IAFAsH,EAAA3K,EAAAqD,GAEAuL,EAAA,EAAcA,EAAAC,EAAMD,IACpB,GAAAV,EAAAU,KAAAjE,EACA,SAAAmE,EAIAZ,EAAA/I,KAAAwF,GACAkE,IAGA,OAAAX,GAuEA,SAAAa,EAAAC,GAEA,IAEAC,EACAC,EACA1G,KAEAxM,EAAAiH,KAAA+L,EAAA,SAAAG,EAAAxE,IACAsE,EAAAE,EAAAF,MAAA,yBAEA,IARA,8BAQAG,QAAAH,EAAA,UAEAC,EAAAC,EAAA7B,QAAA2B,EAAA,GAAAA,EAAA,GAAA7O,eACAoI,EAAA0G,GAAAC,EAEA,MAAAF,EAAA,IAEAF,EAAAC,EAAAG,OAKAH,EAAAK,cAAA7G,EAeA,SAAA3E,EAAA7D,EAAAsP,EAAAC,GAMA,IAAAC,EAJAxP,EAAAqP,eACAN,EAAA/O,GAKAhE,EAAAiH,KAAAqM,EAAA,SAAAH,EAAAxE,IACA6E,EAAAxP,EAAAqP,cAAAF,MAEApT,IAAAwT,GAAAD,EAAAE,KAAAzT,IAGA,MAAAyT,EAAAC,OAAA,IAGAH,EAAAE,KACAF,EAAAE,OAEAxT,EAAA8H,QAAA,EAAAwL,EAAAE,GAAAF,EAAAH,IAEAtL,EAAA7D,EAAAwP,GAAAF,EAAAE,GAAAD,IAGAD,EAAAE,GAAAF,EAAAH,MAcA,SAAA9J,EAAAqK,GAIA,IAAAjM,EAAAlH,EAAAkH,SAAA6B,UAGAqK,EAAAlM,EAAAmM,SAKA,GAJAD,GACAE,GAAAF,GAGAD,EAAA,CACA,IAAAI,EAAAJ,EAAAK,cAIAL,EAAAM,aAAAF,GACA,+BAAArM,EAAAuM,aAEAvK,GAAAiK,IAAA,+BAIAA,EAAAO,iBAAAH,GACA,eAAArM,EAAAwM,iBAEAxK,GAAAiK,IAAA,kCAIAA,EAAAQ,iBACAR,EAAAS,WAAAT,EAAAQ,gBAGA,IAAAE,EAAAV,EAAAE,SACAQ,GAAAT,IAAAS,GACAP,GAAAO,IA3KA7T,EAAA8T,MASAC,SAAA,SAAA1N,EAAA2N,GACA,IAEA7B,EACA8B,EAFAC,EAAAF,IAAAxU,EAAAwU,EAAA,IAIA,kBACA,IACAG,EAAAjU,KACAkU,GAAA,IAAAC,KACAC,EAAAC,UAEApC,GAAAiC,EAAAjC,EAAA+B,GACAM,aAAAP,GAEAA,EAAAQ,WAAA,WACAtC,EAAA3S,EACA6G,EAAAqO,MAAAP,EAAAG,IACMJ,KAGN/B,EAAAiC,EACA/N,EAAAqO,MAAAP,EAAAG,MAYAK,YAAA,SAAAvG,GACA,OAAAA,EAAA2C,QAAAd,EAAA,UA2IA,IAAA2E,EAAA,SAAAnC,EAAAoC,EAAAC,GACArC,EAAAoC,KAAArV,IACAiT,EAAAqC,GAAArC,EAAAoC,KAWA,SAAAzN,EAAA2N,GAEAH,EAAAG,EAAA,oBACAH,EAAAG,EAAA,2BACAH,EAAAG,EAAA,+BACAH,EAAAG,EAAA,iCACAH,EAAAG,EAAA,qBACAH,EAAAG,EAAA,+BACAH,EAAAG,EAAA,sBACAH,EAAAG,EAAA,gCACAH,EAAAG,EAAA,+BACAH,EAAAG,EAAA,uBAGA,kBAAAA,EAAAC,WACAD,EAAAC,SAAAD,EAAAC,SAAA,WAEA,kBAAAD,EAAAE,UACAF,EAAAE,QAAAF,EAAAE,QAAA,WAKA,IAAAC,EAAAH,EAAAI,aAEA,GAAAD,EACA,QAAApO,EAAA,EAAA8K,EAAAsD,EAAA9O,OAAyCU,EAAA8K,EAAQ9K,IACjDoO,EAAApO,IACAQ,EAAAtH,EAAAuI,OAAA6M,QAAAF,EAAApO,IAaA,SAAAO,EAAA0N,GAEAH,EAAAG,EAAA,yBACAH,EAAAG,EAAA,yBACAH,EAAAG,EAAA,6BACAH,EAAAG,EAAA,gCAGA,IAAAM,EAAAN,EAAAO,UACA,iBAAAD,GAAA5V,EAAAqB,QAAAuU,KACAN,EAAAO,WAAAD,IAUA,SAAAlL,EAAA1I,GAKA,IAAAzB,EAAAuV,UAAA,CACA,IAAAC,KACAxV,EAAAuV,UAAAC,EAGA,IAAAC,EAAAhW,EAAA,UACAmP,KACA8G,SAAA,QACAC,IAAA,EACAC,MAAA,EAAAnW,EAAAC,GAAAmW,aACAC,OAAA,EACApN,MAAA,EACAqN,SAAA,WAEAC,OACAvW,EAAA,UACAmP,KACA8G,SAAA,WACAC,IAAA,EACAC,KAAA,EACAlN,MAAA,IACAqN,SAAA,WAEAC,OACAvW,EAAA,UACAmP,KACAlG,MAAA,OACAoN,OAAA,OAIAhH,SAAA,QAEAmH,EAAAR,EAAA5J,WACAqK,EAAAD,EAAApK,WAaA2J,EAAAW,SAAAF,EAAA,GAAAG,YAAAH,EAAA,GAAAI,YAKAb,EAAAc,gBAAA,MAAAJ,EAAA,GAAAE,aAAA,MAAAH,EAAA,GAAAI,YAIAb,EAAAe,eAAA,IAAAC,KAAAC,MAAAP,EAAAQ,SAAAd,MAGAJ,EAAAmB,YAAAlB,EAAA,GAAAmB,wBAAAlO,MAEA+M,EAAAhT,SAGAhD,EAAA8H,OAAA9F,EAAAoV,SAAA7W,EAAAuV,WACA9T,EAAAE,QAAAmV,UAAA9W,EAAAuV,UAAAY,SAUA,SAAAY,EAAA5C,EAAA9N,EAAA0O,EAAAhD,EAAAC,EAAAgF,GAEA,IAEAC,EADAnQ,EAAAiL,EAEAmF,GAAA,EAOA,IALAnC,IAAAvV,IACAyX,EAAAlC,EACAmC,GAAA,GAGApQ,IAAAkL,GACAmC,EAAAgD,eAAArQ,KAIAmQ,EAAAC,EACA7Q,EAAA4Q,EAAA9C,EAAArN,KAAAqN,GACAA,EAAArN,GAEAoQ,GAAA,EACApQ,GAAAkQ,GAGA,OAAAC,EASA,SAAAjK,EAAA1E,EAAA8O,GAGA,IAAAC,EAAArX,EAAAkH,SAAA3D,OACA0B,EAAAqD,EAAAyE,UAAA3G,OACAkR,EAAA7X,EAAA8H,UAAyBvH,EAAAuI,OAAAgP,QAAAF,GACzBD,OAAAzX,EAAA6X,cAAA,MACAC,OAAAJ,EAAAI,OAAAJ,EAAAI,OAAAL,IAAAM,UAAA,GACApC,UAAA+B,EAAA/B,UAAA+B,EAAA/B,WAAArQ,GACAY,MAAAwR,EAAAxR,MAAAwR,EAAAxR,MAAAZ,EACA0S,IAAA1S,IAEAqD,EAAAyE,UAAAnE,KAAA0O,GAKA,IAAApC,EAAA5M,EAAAsP,gBACA1C,EAAAjQ,GAAAxF,EAAA8H,UAAmCvH,EAAAuI,OAAA6M,QAAAF,EAAAjQ,IAGnCmI,EAAA9E,EAAArD,EAAAxF,EAAA2X,GAAA5W,QAWA,SAAA4M,EAAA9E,EAAArD,EAAA4S,GAEA,IAAAP,EAAAhP,EAAAyE,UAAA9H,GACAmF,EAAA9B,EAAA8B,SACA0N,EAAArY,EAAA6X,EAAAF,KAIA,IAAAE,EAAAS,WAAA,CAEAT,EAAAS,WAAAD,EAAAE,KAAA,eAGA,IAAAC,GAAAH,EAAAE,KAAA,cAAAtF,MAAA,0BACAuF,IACAX,EAAAS,WAAAE,EAAA,IAKAJ,IAAArY,GAAA,OAAAqY,IAGAxQ,EAAAwQ,GAGAvQ,EAAAtH,EAAAkH,SAAA3D,OAAAsU,GAGAA,EAAAK,YAAA1Y,GAAAqY,EAAAhS,QAEAgS,EAAAhS,MAAAgS,EAAAK,WAGAL,EAAAM,QAEAb,EAAAc,aAAAP,EAAAM,OAKAN,EAAAQ,YAAAR,EAAAlT,SAEAkT,EAAAlT,OAAAkT,EAAAQ,WAEAR,EAAAlT,QACAmT,EAAAxN,SAAAuN,EAAAlT,QAGAlF,EAAA8H,OAAA+P,EAAAO,GACA3O,GAAAoO,EAAAO,EAAA,uBAKAA,EAAAS,YAAA9Y,IAEA8X,EAAAhC,WAAAuC,EAAAS,YAEApP,GAAAoO,EAAAO,EAAA,cAIA,IAAAU,EAAAjB,EAAAzR,MACAA,EAAAoE,EAAAsO,GACAC,EAAAlB,EAAAkB,QAAAvO,EAAAqN,EAAAkB,SAAA,KAEAC,EAAA,SAAAhV,GACA,uBAAAA,IAAA,IAAAA,EAAAoP,QAAA,MAEAyE,EAAAoB,UAAAjZ,EAAAsB,cAAAwX,KACAE,EAAAF,EAAAhL,OAAAkL,EAAAF,EAAA5U,OAAA8U,EAAAF,EAAA/K,SAEA8J,EAAAqB,QAAA,KAEArB,EAAA9T,UAAA,SAAAoV,EAAAjV,EAAAkV,GACA,IAAAC,EAAAjT,EAAA+S,EAAAjV,EAAAnE,EAAAqZ,GAEA,OAAAL,GAAA7U,EACA6U,EAAAM,EAAAnV,EAAAiV,EAAAC,GACAC,GAEAxB,EAAAyB,UAAA,SAAAH,EAAAxK,EAAAyK,GACA,OAAAG,EAAAT,EAAAS,CAAAJ,EAAAxK,EAAAyK,IAKA,iBAAAN,IACAjQ,EAAA2Q,gBAAA,GAIA3Q,EAAAa,UAAA4E,QAEAuJ,EAAA4B,WAAA,EACApB,EAAAxN,SAAAF,EAAA+O,gBAIA,IAAAC,GAAA,IAAA3Z,EAAAuM,QAAA,MAAAsL,EAAAzJ,WACAwL,GAAA,IAAA5Z,EAAAuM,QAAA,OAAAsL,EAAAzJ,WACAyJ,EAAA4B,YAAAE,GAAAC,GAKAD,IAAAC,GAEA/B,EAAAgC,cAAAlP,EAAAmP,aACAjC,EAAAkC,iBAAApP,EAAAqP,qBAEAL,GAAAC,GAEA/B,EAAAgC,cAAAlP,EAAAsP,cACApC,EAAAkC,iBAAApP,EAAAuP,sBAIArC,EAAAgC,cAAAlP,EAAAwP,UACAtC,EAAAkC,iBAAApP,EAAAyP,WAhBAvC,EAAAgC,cAAAlP,EAAA+O,cACA7B,EAAAkC,iBAAA,IA0BA,SAAAM,EAAArY,GAGA,QAAAA,EAAA0H,UAAA4Q,WACA,CACA,IAAAxY,EAAAE,EAAAsL,UAEAiN,GAAAvY,GACA,QAAAqF,EAAA,EAAAH,EAAApF,EAAA6E,OAAwCU,EAAAH,EAASG,IAEjDvF,EAAAuF,GAAAsQ,IAAA3O,MAAAC,MAAAnH,EAAAuF,GAAAmT,OAIA,IAAAvY,EAAAD,EAAAE,QACA,KAAAD,EAAAG,IAAA,KAAAH,EAAAE,IAEAE,GAAAL,GAGA6M,GAAA7M,EAAA,sBAAAA,IAYA,SAAAyY,EAAA5R,EAAA6R,GAEA,IAAAC,EAAAC,EAAA/R,EAAA,YAEA,uBAAA8R,EAAAD,GACAC,EAAAD,GACA,KAYA,SAAAG,EAAAhS,EAAA6R,GAEA,IAAAC,EAAAC,EAAA/R,EAAA,YACAiS,EAAA9a,EAAAuM,QAAAmO,EAAAC,GAEA,WAAAG,IAAA,KAUA,SAAAC,EAAAlS,GAEA,IAAAmS,EAAA,EASA,OANAhb,EAAAiH,KAAA4B,EAAAyE,UAAA,SAAAjG,EAAApD,GACAA,EAAAgX,UAAA,SAAAjb,EAAAiE,EAAA0T,KAAAxI,IAAA,YACA6L,MAIAA,EAYA,SAAAJ,EAAA/R,EAAAqS,GAEA,IAAAtN,KAQA,OANA5N,EAAAwM,IAAA3D,EAAAyE,UAAA,SAAAqB,EAAAtH,GACAsH,EAAAuM,IACAtN,EAAAzE,KAAA9B,KAIAuG,EASA,SAAAuN,EAAAnZ,GAEA,IAGAqF,EAAA8K,EAAAS,EAAAwI,EAAAvI,EAAAwI,EACApX,EAAAqX,EAAAC,EAJAzZ,EAAAE,EAAAsL,UACAvM,EAAAiB,EAAAe,OACAyY,EAAAjb,EAAAwG,IAAA7C,KAAAuX,OAKA,IAAApU,EAAA,EAAA8K,EAAArQ,EAAA6E,OAAiCU,EAAA8K,EAAQ9K,IAIzC,GAHApD,EAAAnC,EAAAuF,GACAkU,MAEAtX,EAAAyU,OAAAzU,EAAA0U,aACA1U,EAAAyU,MAAAzU,EAAA0U,kBAEA,IAAA1U,EAAAyU,MAAA,CACA,IAAA9F,EAAA,EAAAwI,EAAAI,EAAA7U,OAAiCiM,EAAAwI,EAAQxI,IAAA,CACzC,IAAAC,EAAA,EAAAwI,EAAAta,EAAA4F,OAAiCkM,EAAAwI,IAGjCE,EAAA1I,KAAA9S,IACAwb,EAAA1I,GAAA6I,EAAA1Z,EAAA6Q,EAAAxL,EAAA,UAGAiU,EAAAE,EAAA5I,GAAA2I,EAAA1I,GAAA7Q,KAOA4Q,IAAA4I,EAAA7U,OAAA,IAMA,SAAA2U,EApByCzI,KA2BzC,GAAAyI,EAAA,CACArX,EAAAyU,MAAA4C,EACA,OAKArX,EAAAyU,QACAzU,EAAAyU,MAAA,WAkBA,SAAAlL,EAAA3E,EAAA8S,EAAAC,EAAAhV,GAEA,IAAAS,EAAAH,EAAA0L,EAAAiJ,EAAAhJ,EAAAiJ,EAAAC,EACAja,EAAA+G,EAAAyE,UAGA,GAAAqO,EAGA,IAAAtU,EAAAsU,EAAAhV,OAAA,EAA+BU,GAAA,EAAOA,IACtC,CAIA,IAAA2U,GAHAD,EAAAJ,EAAAtU,IAGA4U,UAAAlc,EACAgc,EAAAE,QACAF,EAAAC,SAOA,IALAhc,EAAAqB,QAAA2a,KAEAA,OAGApJ,EAAA,EAAAiJ,EAAAG,EAAArV,OAAqCiM,EAAAiJ,EAASjJ,IAE9C,oBAAAoJ,EAAApJ,IAAAoJ,EAAApJ,IAAA,EACA,CAEA,KAAA9Q,EAAA6E,QAAAqV,EAAApJ,IAEArF,EAAA1E,GAIAjC,EAAAoV,EAAApJ,GAAAmJ,QAEA,oBAAAC,EAAApJ,IAAAoJ,EAAApJ,GAAA,EAGAhM,EAAA9E,EAAA6E,OAAAqV,EAAApJ,GAAAmJ,QAEA,oBAAAC,EAAApJ,GAGA,IAAAC,EAAA,EAAAiJ,EAAAha,EAAA6E,OAAsCkM,EAAAiJ,EAASjJ,KAE/C,QAAAmJ,EAAApJ,IACA5S,EAAA8B,EAAA+Q,GAAA8E,KAAAjL,SAAAsP,EAAApJ,MAEAhM,EAAAiM,EAAAkJ,GASA,GAAAH,EAEA,IAAAvU,EAAA,EAAAH,EAAA0U,EAAAjV,OAAkCU,EAAAH,EAASG,IAE3CT,EAAAS,EAAAuU,EAAAvU,IAkBA,SAAAuI,EAAA/G,EAAAqT,EAAAzZ,EAAA0Z,GAGA,IAAA5X,EAAAsE,EAAA9F,OAAA4D,OACAyV,EAAApc,EAAA8H,QAAA,KAAgCvH,EAAAuI,OAAAuT,MAChCrY,IAAAvB,EAAA,aACAyV,IAAA3T,IAGA6X,EAAAE,OAAAJ,EACArT,EAAA9F,OAAAoG,KAAAiT,GAOA,IAHA,IAAAta,EAAA+G,EAAAyE,UAGAjG,EAAA,EAAAH,EAAApF,EAAA6E,OAAsCU,EAAAH,EAASG,IAE/CvF,EAAAuF,GAAAqR,MAAA,KAIA7P,EAAAkH,gBAAA5G,KAAA5E,GAEA,IAAAmE,EAAAG,EAAA0B,QAAA2R,GAWA,OAVAxT,IAAA3I,IACA8I,EAAA0T,KAAA7T,GAAA0T,IAIA3Z,GAAAoG,EAAAa,UAAAsF,cAEAwN,GAAA3T,EAAAtE,EAAA9B,EAAA0Z,GAGA5X,EAcA,SAAAsL,EAAA7N,EAAAya,GAEA,IAAAjb,EAOA,OAJAib,aAAAzc,IACAyc,EAAAzc,EAAAyc,IAGAA,EAAAjQ,IAAA,SAAAnF,EAAAoF,GAEA,OADAjL,EAAAkb,GAAA1a,EAAAyK,GACAmD,EAAA5N,EAAAR,EAAAT,KAAA0L,EAAAjL,EAAAmb,SAyCA,SAAAjB,EAAA1Z,EAAA4a,EAAAC,EAAA3Y,GAEA,IAAAzC,EAAAO,EAAA8a,MACA7Y,EAAAjC,EAAAsL,UAAAuP,GACA1D,EAAAnX,EAAAe,OAAA6Z,GAAAN,OACAS,EAAA9Y,EAAA+Y,gBACAC,EAAAhZ,EAAAF,UAAAoV,EAAAjV,GACAlC,WACAR,IAAAob,EACA3Y,IAAA4Y,IAGA,GAAAI,IAAAld,EAOA,OANAiC,EAAAkb,YAAAzb,GAAA,OAAAsb,IACAvU,GAAAxG,EAAA,kCACA,mBAAAiC,EAAAmC,MAAA,aAAgD,IAAAnC,EAAAmC,MAAA,KAChD,YAAAwW,EAAA,YAAAC,EAAA,GACA7a,EAAAkb,WAAAzb,GAEAsb,EAKA,GAAAE,IAAA9D,GAAA,OAAA8D,GAAA,OAAAF,GAAA7Y,IAAAnE,GAGA,sBAAAkd,EAGA,OAAAA,EAAAha,KAAAkW,QALA8D,EAAAF,EAQA,cAAAE,GAAA,WAAA/Y,EACA,GAEA+Y,EAYA,SAAAE,EAAAnb,EAAA4a,EAAAC,EAAAlO,GAEA,IAAA1K,EAAAjC,EAAAsL,UAAAuP,GACA1D,EAAAnX,EAAAe,OAAA6Z,GAAAN,OAEArY,EAAAqV,UAAAH,EAAAxK,GACA3M,WACAR,IAAAob,EACA3Y,IAAA4Y,IAMA,IAAAO,EAAA,WACAC,EAAA,QAOA,SAAAC,EAAAC,GAEA,OAAAvd,EAAAwM,IAAA+Q,EAAAtK,MAAA,gCAAAjL,GACA,OAAAA,EAAAsJ,QAAA,eAYA,SAAA9G,EAAAgT,GAEA,GAAAxd,EAAAsB,cAAAkc,GACA,CAEA,IAAAxK,KAOA,OANAhT,EAAAiH,KAAAuW,EAAA,SAAArK,EAAAxE,GACAA,IACAqE,EAAAG,GAAA3I,EAAAmE,MAIA,SAAA5N,EAAAmD,EAAA1C,EAAA4X,GACA,IAAAZ,EAAAxF,EAAA9O,IAAA8O,EAAAnS,EACA,OAAA2X,IAAAzY,EACAyY,EAAAzX,EAAAmD,EAAA1C,EAAA4X,GACArY,GAGA,UAAAyc,EAGA,gBAAAzc,GACA,OAAAA,GAGA,sBAAAyc,EAEA,gBAAAzc,EAAAmD,EAAA1C,EAAA4X,GACA,OAAAoE,EAAAzc,EAAAmD,EAAA1C,EAAA4X,IAGA,oBAAAoE,IAAA,IAAAA,EAAApK,QAAA,OACA,IAAAoK,EAAApK,QAAA,WAAAoK,EAAApK,QAAA,KA8EA,gBAAArS,EAAAmD,GACA,OAAAnD,EAAAyc,IAvEA,IAAAC,EAAA,SAAA1c,EAAAmD,EAAAF,GACA,IAAA0Z,EAAAC,EAAAzL,EAAA0L,EAEA,QAAA5Z,EAIA,IAFA,IAAA4J,EAAA0P,EAAAtZ,GAEAqD,EAAA,EAAAH,EAAA0G,EAAAjH,OAAmCU,EAAAH,EAASG,IAC5C,CAKA,GAHAqW,EAAA9P,EAAAvG,GAAA4L,MAAAmK,GACAO,EAAA/P,EAAAvG,GAAA4L,MAAAoK,GAEAK,EACA,CAeA,GAbA9P,EAAAvG,GAAAuG,EAAAvG,GAAAiK,QAAA8L,EAAA,IAGA,KAAAxP,EAAAvG,KACAtG,IAAA6M,EAAAvG,KAEA6K,KAGAtE,EAAAjF,OAAA,EAAAtB,EAAA,GACAuW,EAAAhQ,EAAAhB,KAAA,KAGA5M,EAAAqB,QAAAN,GACA,QAAA6R,EAAA,EAAAiJ,EAAA9a,EAAA4F,OAAyCiM,EAAAiJ,EAASjJ,IAClDV,EAAA/I,KAAAsU,EAAA1c,EAAA6R,GAAA1O,EAAA0Z,IAMA,IAAAhR,EAAA8Q,EAAA,GAAAG,UAAA,EAAAH,EAAA,GAAA/W,OAAA,GACA5F,EAAA,KAAA6L,EAAAsF,IAAAtF,QAIA,MAEA,GAAA+Q,EAGA/P,EAAAvG,GAAAuG,EAAAvG,GAAAiK,QAAA+L,EAAA,IACAtc,IAAA6M,EAAAvG,UAJA,CAQA,UAAAtG,KAAA6M,EAAAvG,MAAAtH,EAEA,OAAAA,EAEAgB,IAAA6M,EAAAvG,KAIA,OAAAtG,GAGA,gBAAAA,EAAAmD,GACA,OAAAuZ,EAAA1c,EAAAmD,EAAAsZ,IAoBA,SAAAjE,EAAAiE,GAEA,GAAAxd,EAAAsB,cAAAkc,GAOA,OAAAjE,EAAAiE,EAAA3c,GAEA,UAAA2c,EAGA,oBAEA,sBAAAA,EAEA,gBAAAzc,EAAA4N,EAAAyK,GACAoE,EAAAzc,EAAA,MAAA4N,EAAAyK,IAGA,oBAAAoE,IAAA,IAAAA,EAAApK,QAAA,OACA,IAAAoK,EAAApK,QAAA,WAAAoK,EAAApK,QAAA,KAmFA,gBAAArS,EAAA4N,GACA5N,EAAAyc,GAAA7O,GAjFA,IAAAmP,EAAA,SAAA/c,EAAA4N,EAAA3K,GAKA,IAJA,IAAA+Z,EAEAL,EAAAC,EAAA3K,EAAA4K,EAFAhQ,EAAA0P,EAAAtZ,GACAga,EAAApQ,IAAAjH,OAAA,GAGAU,EAAA,EAAAH,EAAA0G,EAAAjH,OAAA,EAAoCU,EAAAH,EAASG,IAC7C,CAKA,GAHAqW,EAAA9P,EAAAvG,GAAA4L,MAAAmK,GACAO,EAAA/P,EAAAvG,GAAA4L,MAAAoK,GAEAK,EACA,CAUA,GATA9P,EAAAvG,GAAAuG,EAAAvG,GAAAiK,QAAA8L,EAAA,IACArc,EAAA6M,EAAAvG,QAGA0W,EAAAnQ,EAAAd,SACAnE,OAAA,EAAAtB,EAAA,GACAuW,EAAAG,EAAAnR,KAAA,KAGA5M,EAAAqB,QAAAsN,GAEA,QAAAiE,EAAA,EAAAiJ,EAAAlN,EAAAhI,OAAuCiM,EAAAiJ,EAASjJ,IAGhDkL,EADA9K,KACArE,EAAAiE,GAAAgL,GACA7c,EAAA6M,EAAAvG,IAAA8B,KAAA6J,QAQAjS,EAAA6M,EAAAvG,IAAAsH,EAKA,OAEAgP,IAGA/P,EAAAvG,GAAAuG,EAAAvG,GAAAiK,QAAA+L,EAAA,IACAtc,IAAA6M,EAAAvG,IAAAsH,IAKA,OAAA5N,EAAA6M,EAAAvG,KAAAtG,EAAA6M,EAAAvG,MAAAtH,IAEAgB,EAAA6M,EAAAvG,QAEAtG,IAAA6M,EAAAvG,IAIA2W,EAAA/K,MAAAoK,GAGAtc,IAAAid,EAAA1M,QAAA+L,EAAA,KAAA1O,GAMA5N,EAAAid,EAAA1M,QAAA8L,EAAA,KAAAzO,GAIA,gBAAA5N,EAAA4N,GACA,OAAAmP,EAAA/c,EAAA4N,EAAA6O,IAmBA,SAAAS,EAAAjc,GAEA,OAAA+P,EAAA/P,EAAAe,OAAA,UASA,SAAAmb,EAAAlc,GAEAA,EAAAe,OAAA4D,OAAA,EACA3E,EAAA+N,gBAAApJ,OAAA,EACA3E,EAAA8N,UAAAnJ,OAAA,EACA3E,EAAAua,QAWA,SAAA4B,GAAAvQ,EAAAwQ,EAAAzV,GAIA,IAFA,IAAA0V,GAAA,EAEAhX,EAAA,EAAAH,EAAA0G,EAAAjH,OAAgCU,EAAAH,EAASG,IAEzCuG,EAAAvG,IAAA+W,EAEAC,EAAAhX,EAEAuG,EAAAvG,GAAA+W,GAEAxQ,EAAAvG,MAIA,GAAAgX,GAAA1V,IAAA5I,GAEA6N,EAAAjF,OAAA0V,EAAA,GAqBA,SAAAC,GAAAtc,EAAA4a,EAAA5Y,EAAA6Y,GAEA,IACAxV,EAAA8K,EADA3Q,EAAAQ,EAAAe,OAAA6Z,GAEA2B,EAAA,SAAAla,EAAAJ,GAIA,KAAAI,EAAAma,WAAA7X,QACAtC,EAAAoa,YAAApa,EAAAqa,YAGAra,EAAA4T,UAAAyD,EAAA1Z,EAAA4a,EAAA3Y,EAAA,YAIA,WAAAD,OAAA,SAAAA,GAAA,QAAAxC,EAAAwC,KAOA,CAEA,IAAA2Y,EAAAnb,EAAAmd,QAEA,GAAAhC,EACA,GAAAE,IAAA9c,EACAwe,EAAA5B,EAAAE,WAGA,IAAAxV,EAAA,EAAA8K,EAAAwK,EAAAhW,OAAkCU,EAAA8K,EAAQ9K,IAC1CkX,EAAA5B,EAAAtV,WAfA7F,EAAA8a,OAAAI,GACA1a,EAAAR,EAAAqb,MAAA9c,IAAAyB,EAAA8a,QAEAvb,KAoBAS,EAAAod,WAAA,KACApd,EAAAqd,aAAA,KAIA,IAAAC,EAAA9c,EAAAsL,UACA,GAAAuP,IAAA9c,EACA+e,EAAAjC,GAAAnE,MAAA,SAEA,CACA,IAAArR,EAAA,EAAA8K,EAAA2M,EAAAnY,OAA+BU,EAAA8K,EAAQ9K,IACvCyX,EAAAzX,GAAAqR,MAAA,KAIAqG,GAAA/c,EAAAR,IAsBA,SAAAkb,GAAA1a,EAAAR,EAAAqb,EAAAjM,GAEA,IAGA/C,EAAA5J,EAAA+a,EAFAC,KACAC,EAAA1d,EAAAkd,WACArX,EAAA,EACAvF,EAAAE,EAAAsL,UACA6R,EAAAnd,EAAAwX,eAGA5I,MAAA7Q,EACA6Q,EACAuO,QAIA,IAAA5G,EAAA,SAAAgF,EAAA2B,GACA,oBAAA3B,EAAA,CACA,IAAArF,EAAAqF,EAAAnK,QAAA,KAEA,QAAA8E,EAAA,CACA,IAAAK,EAAAgF,EAAAM,UAAA3F,EAAA,GACAkH,EAAA7F,EAAAgE,GACA6B,EAAAxO,EAAAsO,EAAA3X,aAAAgR,OAMA8G,EAAA,SAAAhb,GACA,GAAAwY,IAAA9c,GAAA8c,IAAAxV,EAIA,GAHApD,EAAAnC,EAAAuF,GACA2X,EAAAhf,EAAAsf,KAAAjb,EAAA4T,WAEAhU,KAAAgV,UAAA,CACA,IAAAmG,EAAA7F,EAAAtV,EAAAmC,MAAAvF,GACAue,EAAAxO,EAAAoO,GAEAzG,EAAAtU,EAAAmC,MAAA0H,KAAAzJ,GACAkU,EAAAtU,EAAAmC,MAAAlC,KAAAG,GACAkU,EAAAtU,EAAAmC,MAAA2H,OAAA1J,QAKA8a,GACAlb,EAAAiV,UAEAjV,EAAAiV,QAAAK,EAAAtV,EAAAmC,QAEAnC,EAAAiV,QAAAtI,EAAAoO,IAGApO,EAAAvJ,GAAA2X,EAKA3X,KAGA,GAAA6X,EAEA,KAAAA,GAGA,OAFArR,EAAAqR,EAAA/a,SAAAQ,gBAEA,MAAAkJ,IACAwR,EAAAH,GACAD,EAAA9V,KAAA+V,IAGAA,IAAAK,iBAOA,QAAA3M,EAAA,EAAAwI,GAFA6D,EAAAzd,EAAAmd,SAEAhY,OAAkCiM,EAAAwI,EAAQxI,IAC1CyM,EAAAJ,EAAArM,IAKA,IAAA4M,EAAAhe,EAAAkd,WAAAld,IAAAiB,IAEA,GAAA+c,EAAA,CACA,IAAA9W,EAAA8W,EAAAjY,aAAA,MAEAmB,GACA6Q,EAAAvX,EAAAyI,MAAA8O,CAAA3I,EAAAlI,GAIA,OACA3H,KAAA6P,EACA+L,MAAAsC,GAaA,SAAAzC,GAAA3T,EAAAtE,EAAAkb,EAAAtD,GAEA,IAIA1Z,EAAAid,EAAA7H,EACAxQ,EAAAH,EAJA1F,EAAAqH,EAAA9F,OAAAwB,GACA4U,EAAA3X,EAAA8a,OACAK,KAIA,UAAAnb,EAAAiB,IACA,CAeA,IAdAA,EAAAgd,GAAAvf,EAAA6X,cAAA,MAEAvW,EAAAiB,MACAjB,EAAAmd,QAAAhC,EAKAla,EAAAkd,aAAApb,EAGAwa,GAAAlW,EAAArH,GAGA6F,EAAA,EAAAH,EAAA2B,EAAAyE,UAAA3G,OAA+CU,EAAAH,EAASG,IAExDwQ,EAAAhP,EAAAyE,UAAAjG,IAEAqY,EAAAD,EAAAtD,EAAA9U,GAAAnH,EAAA6X,cAAAF,EAAA+H,YACAC,eACAre,IAAA+C,EACAT,OAAAuD,GAGAsV,EAAAxT,KAAAuW,GAGAD,IAAA5H,EAAAkB,SAAAlB,EAAAzR,QAAAiB,GACArH,EAAAsB,cAAAuW,EAAAzR,QAAAyR,EAAAzR,MAAAvF,IAAAwG,EAAA,aAEAqY,EAAAzH,UAAAyD,EAAA7S,EAAAtE,EAAA8C,EAAA,YAIAwQ,EAAA3S,SAEAwa,EAAA9G,WAAA,IAAAf,EAAA3S,QAIA2S,EAAAoD,WAAAwE,EAEAhd,EAAAqd,YAAAJ,IAEA7H,EAAAoD,UAAAwE,GAEAC,EAAAvX,WAAAsW,YAAAiB,GAGA7H,EAAAkI,eAEAlI,EAAAkI,cAAA9c,KAAA4F,EAAAN,UACAmX,EAAAhE,EAAA7S,EAAAtE,EAAA8C,GAAA8R,EAAA5U,EAAA8C,GAKAwH,GAAAhG,EAAA,6BAAApG,EAAA0W,EAAA5U,EAAAoY,IAKAnb,EAAAiB,IAAAud,aAAA,cAWA,SAAAjB,GAAA/c,EAAAR,GAEA,IAAAye,EAAAze,EAAAiB,IACA1B,EAAAS,EAAA8a,OAEA,GAAA2D,EAAA,CACA,IAAAvX,EAAA1G,EAAAuI,QAAAxJ,GAMA,GAJA2H,IACAuX,EAAAvX,MAGA3H,EAAAmf,YAAA,CAEA,IAAAtS,EAAA7M,EAAAmf,YAAAC,MAAA,KACA3e,EAAA4e,OAAA5e,EAAA4e,OACAxX,EAAApH,EAAA4e,OAAAC,OAAAzS,IACAA,EAEA5N,EAAAigB,GACAtT,YAAAnL,EAAA4e,OAAAxT,KAAA,MACA/B,SAAA9J,EAAAmf,aAGAnf,EAAAuf,YACAtgB,EAAAigB,GAAA1H,KAAAxX,EAAAuf,YAGAvf,EAAAwf,YACAvgB,EAAAigB,GAAAlf,OAAAwf,aAWA,SAAAC,GAAA3X,GAEA,IAAAxB,EAAA8K,EAAA9N,EAAA7C,EAAAsC,EACAsL,EAAAvG,EAAAX,OACAsH,EAAA3G,EAAAT,OACAqY,EAAA,IAAAzgB,EAAA,SAAAoP,GAAAzI,OACAiE,EAAA/B,EAAA8B,SACA7I,EAAA+G,EAAAyE,UAMA,IAJAmT,IACAjf,EAAAxB,EAAA,SAAAqP,SAAAD,IAGA/H,EAAA,EAAA8K,EAAArQ,EAAA6E,OAAiCU,EAAA8K,EAAQ9K,IACzCvD,EAAAhC,EAAAuF,GACAhD,EAAArE,EAAA8D,EAAA6T,KAAA9M,SAAA/G,EAAAoB,QAEAub,GACApc,EAAAgL,SAAA7N,GAIAqH,EAAAa,UAAA4E,QACAjK,EAAAwG,SAAA/G,EAAA+V,gBAEA,IAAA/V,EAAA2V,YACApV,EACAkU,KAAA,WAAA1P,EAAA6X,WACAnI,KAAA,gBAAA1P,EAAAJ,UAEAkY,GAAA9X,EAAA/E,EAAA6T,IAAAtQ,KAIAvD,EAAAkU,QAAA3T,EAAA,GAAA4T,WACA5T,EAAAuN,KAAA9N,EAAAkU,QAGA4I,GAAA/X,EAAA,SAAA+X,CACA/X,EAAAxE,EAAAP,EAAA8G,GAmBA,GAfA6V,GACAtT,GAAAtE,EAAAuE,SAAAgC,GAIApP,EAAAoP,GAAA/C,KAAA,OAAAkM,KAAA,cAGAvY,EAAAoP,GAAA/C,KAAA,kBAAAxB,SAAAD,EAAAiW,WACA7gB,EAAAwP,GAAAnD,KAAA,kBAAAxB,SAAAD,EAAAkW,WAMA,OAAAtR,EAAA,CACA,IAAAmN,EAAA9T,EAAA6G,SAAA,GAEA,IAAArI,EAAA,EAAA8K,EAAAwK,EAAAhW,OAAgCU,EAAA8K,EAAQ9K,KACxCvD,EAAAhC,EAAAuF,IACA0Z,IAAApE,EAAAtV,GAAAhD,KAEAP,EAAAoB,QACAlF,EAAA8D,EAAAid,KAAAlW,SAAA/G,EAAAoB,SAoBA,SAAA8b,GAAAnY,EAAAoY,EAAAC,GAEA,IAAA7Z,EAAAH,EAAA0L,EAAAiJ,EAAAhJ,EAAAmD,EAAAmL,EAIAC,EAAAC,EAHAC,KACAC,KACAC,EAAA3Y,EAAAyE,UAAA3G,OAGA,GAAAsa,EAAA,CAWA,IANAC,IAAAnhB,IAEAmhB,GAAA,GAIA7Z,EAAA,EAAAH,EAAA+Z,EAAAta,OAAmCU,EAAAH,EAASG,IAC5C,CAKA,IAJAia,EAAAja,GAAA4Z,EAAA5Z,GAAAyF,QACAwU,EAAAja,GAAA5E,IAAAwe,EAAA5Z,GAAA5E,IAGAmQ,EAAA4O,EAAA,EAAuB5O,GAAA,EAAOA,IAE9B/J,EAAAyE,UAAAsF,GAAAqI,UAAAiG,GAEAI,EAAAja,GAAAsB,OAAAiK,EAAA,GAKA2O,EAAApY,SAGA,IAAA9B,EAAA,EAAAH,EAAAoa,EAAA3a,OAAkCU,EAAAH,EAASG,IAC3C,CAIA,GAHA8Z,EAAAG,EAAAja,GAAA5E,IAKA,KAAAuT,EAAAmL,EAAAzC,YAEAyC,EAAA1C,YAAAzI,GAIA,IAAApD,EAAA,EAAAiJ,EAAAyF,EAAAja,GAAAV,OAAsCiM,EAAAiJ,EAASjJ,IAQ/C,GANAwO,EAAA,EACAC,EAAA,EAKAE,EAAAla,GAAAuL,KAAA7S,EACA,CAKA,IAJAohB,EAAArB,YAAAwB,EAAAja,GAAAuL,GAAAvO,MACAkd,EAAAla,GAAAuL,GAAA,EAGA0O,EAAAja,EAAA+Z,KAAArhB,GACAuhB,EAAAja,GAAAuL,GAAAvO,MAAAid,EAAAja,EAAA+Z,GAAAxO,GAAAvO,MAEAkd,EAAAla,EAAA+Z,GAAAxO,GAAA,EACAwO,IAIA,KAAAE,EAAAja,GAAAuL,EAAAyO,KAAAthB,GACAuhB,EAAAja,GAAAuL,GAAAvO,MAAAid,EAAAja,GAAAuL,EAAAyO,GAAAhd,MACA,CAEA,IAAAwO,EAAA,EAAiBA,EAAAuO,EAAavO,IAE9B0O,EAAAla,EAAAwL,GAAAD,EAAAyO,GAAA,EAEAA,IAIArhB,EAAAshB,EAAAja,GAAAuL,GAAAvO,MACAkU,KAAA,UAAA6I,GACA7I,KAAA,UAAA8I,MAYA,SAAAI,GAAA5Y,GAGA,IAAA6Y,EAAA7S,GAAAhG,EAAA,+BAAAA,IACA,QAAA7I,EAAAuM,SAAA,EAAAmV,GAAA,CAMA,IACAC,KACAC,EAAA,EACA7V,EAAAlD,EAAAkD,gBACA8V,EAAA9V,EAAApF,OAEAmb,GADAjZ,EAAAkZ,WAAApb,OACAkC,EAAAS,WACAyB,EAAAlC,EAAAkC,kBACAiX,EAAA,OAAAjT,GAAAlG,GACAiH,EAAAjH,EAAAiH,UAEAjH,EAAAoZ,UAAA,EAGAlX,IAAAhL,IAAA,IAAAgL,IAEAlC,EAAAoC,eAAA+W,EACAjX,EACAA,GAAAlC,EAAAqZ,mBACA,EACAnX,EAEAlC,EAAAkC,mBAAA,GAGA,IAAAC,EAAAnC,EAAAoC,eACAkX,EAAAtZ,EAAAuZ,eAGA,GAAAvZ,EAAAsC,cAEAtC,EAAAsC,eAAA,EACAtC,EAAAiU,QACAuF,GAAAxZ,GAAA,QAEA,GAAAmZ,GAIA,IAAAnZ,EAAAyZ,cAAAC,GAAA1Z,GAEA,YAJAA,EAAAiU,QAOA,OAAAhN,EAAAnJ,OAKA,IAHA,IAAA6b,EAAAR,EAAA,EAAAhX,EACAyX,EAAAT,EAAAnZ,EAAA9F,OAAA4D,OAAAwb,EAEAvP,EAAA4P,EAAuB5P,EAAA6P,EAAS7P,IAChC,CACA,IAAA8P,EAAA5S,EAAA8C,GACA7P,EAAA8F,EAAA9F,OAAA2f,GACA,OAAA3f,EAAAN,KAEA+Z,GAAA3T,EAAA6Z,GAGA,IAAAC,EAAA5f,EAAAN,IAGA,OAAAof,EACA,CACA,IAAAe,EAAA7W,EAAA6V,EAAAC,GACA9e,EAAA8f,aAAAD,IAEA5iB,EAAA2iB,GAAAhW,YAAA5J,EAAA8f,aAAAhY,SAAA+X,GACA7f,EAAA8f,YAAAD,GAOA/T,GAAAhG,EAAA,sBACA8Z,EAAA5f,EAAAuZ,OAAAsF,EAAAhP,EAAA8P,IAEAf,EAAAxY,KAAAwZ,GACAf,QAIA,CAEA,IAAAkB,EAAAhB,EAAA/N,aACA,GAAAlL,EAAAiU,OAAA,QAAA/N,GAAAlG,GAEAia,EAAAhB,EAAA7N,gBAEA6N,EAAA9N,aAAA,IAAAnL,EAAAka,mBAEAD,EAAAhB,EAAA9N,aAGA2N,EAAA,GAAA3hB,EAAA,SAA8BgjB,MAAAnB,EAAA9V,EAAA,QAC9BwK,OAAAvW,EAAA,UACAijB,OAAA,MACAC,QAAAnI,EAAAlS,GACAma,MAAAna,EAAA8B,SAAAwY,YACKvR,KAAAkR,IAAA,GAILjU,GAAAhG,EAAA,6BAAA7I,EAAA6I,EAAAX,QAAAkE,SAAA,SACA6R,EAAApV,GAAAmC,EAAAmX,EAAArS,IAEAjB,GAAAhG,EAAA,6BAAA7I,EAAA6I,EAAAT,QAAAgE,SAAA,SACA6R,EAAApV,GAAAmC,EAAAmX,EAAArS,IAEA,IAAAsT,EAAApjB,EAAA6I,EAAA0G,QAEA6T,EAAAhX,WAAAiX,SACAD,EAAA7M,OAAAvW,EAAA2hB,IAGA9S,GAAAhG,EAAA,yBAAAA,IAGAA,EAAA0F,SAAA,EACA1F,EAAAya,WAAA,EACAza,EAAAoZ,UAAA,OA5HAI,GAAAxZ,GAAA,GAuIA,SAAA0a,GAAAvhB,EAAAwhB,GAEA,IACAxV,EAAAhM,EAAA0H,UACAoE,EAAAE,EAAAM,MACAP,EAAAC,EAAAyV,QAEA3V,GACA4V,GAAA1hB,GAGA+L,EACA4V,GAAA3hB,IAAA4hB,iBAIA5hB,EAAA8N,UAAA9N,EAAA+N,gBAAAjD,SAGA,IAAA0W,IACAxhB,EAAAiJ,eAAA,GAKAjJ,EAAA6hB,UAAAL,EAEA/B,GAAAzf,GAEAA,EAAA6hB,WAAA,EASA,SAAAC,GAAAjb,GAEA,IAAA+B,EAAA/B,EAAA8B,SACAoZ,EAAA/jB,EAAA6I,EAAAZ,QACA+b,EAAAhkB,EAAA,UAAAikB,aAAAF,GACA/V,EAAAnF,EAAAa,UAGAwa,EAAAlkB,EAAA,UACA0I,GAAAG,EAAAJ,SAAA,WACAua,MAAApY,EAAAuZ,UAAAtb,EAAAT,OAAA,OAAAwC,EAAA6E,aAGA5G,EAAAub,SAAAJ,EAAA,GACAnb,EAAAwb,cAAAH,EAAA,GACArb,EAAAyb,qBAAAzb,EAAAZ,OAAAsX,YAKA,IAFA,IACAgF,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/R,EADAgS,EAAA/b,EAAAgc,KAAA1E,MAAA,IAEA9Y,EAAA,EAAiBA,EAAAud,EAAAje,OAAgBU,IACjC,CAIA,GAHAkd,EAAA,KAGA,MAFAC,EAAAI,EAAAvd,IAGA,CAMA,GAJAod,EAAAzkB,EAAA,aAIA,MADA0kB,EAAAE,EAAAvd,EAAA,KACA,KAAAqd,EACA,CAGA,IAFAC,EAAA,GACA/R,EAAA,EACAgS,EAAAvd,EAAAuL,IAAA8R,GAEAC,GAAAC,EAAAvd,EAAAuL,GACAA,IAgBA,GAZA,KAAA+R,EAEAA,EAAA/Z,EAAAka,WAEA,KAAAH,IAEAA,EAAA/Z,EAAAma,aAMA,GAAAJ,EAAAvR,QAAA,KACA,CACA,IAAA4R,EAAAL,EAAAxE,MAAA,KACAsE,EAAA/b,GAAAsc,EAAA,GAAAC,OAAA,EAAAD,EAAA,GAAAre,OAAA,GACA8d,EAAA7L,UAAAoM,EAAA,OAEA,KAAAL,EAAAlR,OAAA,GAEAgR,EAAA/b,GAAAic,EAAAM,OAAA,EAAAN,EAAAhe,OAAA,GAIA8d,EAAA7L,UAAA+L,EAGAtd,GAAAuL,EAGAsR,EAAA3N,OAAAkO,GACAP,EAAAlkB,EAAAykB,QAEA,QAAAD,EAGAN,IAAAgB,cAGA,QAAAV,GAAAxW,EAAAmX,WAAAnX,EAAAoX,cAGAb,EAAAc,GAAAxc,QAEA,QAAA2b,GAAAxW,EAAAyV,QAGAc,EAAAe,GAAAzc,QAEA,QAAA2b,GAAAxW,EAAAuX,YAGAhB,EAAAiB,GAAA3c,QAEA,QAAA2b,EAGAD,EAAAkB,GAAA5c,QAEA,QAAA2b,GAAAxW,EAAA0X,MAGAnB,EAAAoB,GAAA9c,QAEA,QAAA2b,GAAAxW,EAAAmX,UAGAZ,EAAAqB,GAAA/c,QAEA,OAAAtI,EAAAwG,IAAA8e,QAAAlf,OAIA,IADA,IAAAmf,EAAAvlB,EAAAwG,IAAA8e,QACAhT,EAAA,EAAAiJ,EAAAgK,EAAAnf,OAA2CkM,EAAAiJ,EAASjJ,IAEpD,GAAA2R,GAAAsB,EAAAjT,GAAAkT,SACA,CACAxB,EAAAuB,EAAAjT,GAAAmT,OAAAnd,GACA,MAMA,GAAA0b,EACA,CACA,IAAA0B,EAAApd,EAAAod,YAEAA,EAAAzB,KAEAyB,EAAAzB,OAGAyB,EAAAzB,GAAArb,KAAAob,GACAL,EAAA3N,OAAAgO,IAKAP,EAAAkC,YAAAhC,GACArb,EAAAub,SAAA,KAaA,SAAAjX,GAAAgZ,EAAAlZ,GAEA,IACAxK,EAAA2jB,EACA/e,EAAAwL,EAAAwT,EAAAnf,EAAAof,EAAA9iB,EAAA6d,EAAAD,EACAmF,EAHAC,EAAAxmB,EAAAiN,GAAAb,SAAA,MAIAqa,EAAA,SAAA7Y,EAAAvG,EAAAuL,GAEA,IADA,IAAAC,EAAAjF,EAAAvG,GACAwL,EAAAD,IACAA,IAEA,OAAAA,GAMA,IAHAuT,EAAAxd,OAAA,EAAAwd,EAAAxf,QAGAU,EAAA,EAAAH,EAAAsf,EAAA7f,OAA+BU,EAAAH,EAASG,IAExC8e,EAAAhd,SAIA,IAAA9B,EAAA,EAAAH,EAAAsf,EAAA7f,OAA+BU,EAAAH,EAASG,IAOxC,IALA5E,EAAA+jB,EAAAnf,GACA7D,EAAA,EAGA4iB,EAAA3jB,EAAAic,WACA0H,GAAA,CACA,SAAAA,EAAAjiB,SAAAQ,eACA,MAAAyhB,EAAAjiB,SAAAQ,cAiBA,IAdA0c,EAAA,EAAA+E,EAAA7e,aAAA,WACA6Z,EAAA,EAAAgF,EAAA7e,aAAA,WACA8Z,KAAA,IAAAA,GAAA,IAAAA,IAAA,EACAD,KAAA,IAAAA,GAAA,IAAAA,IAAA,EAKAkF,EAAAG,EAAAN,EAAA9e,EAAA7D,GAGA+iB,EAAA,IAAAlF,EAGAgF,EAAA,EAAgBA,EAAAhF,EAAagF,IAE7B,IAAAxT,EAAA,EAAiBA,EAAAuO,EAAavO,IAE9BsT,EAAA9e,EAAAwL,GAAAyT,EAAAD,IACAhiB,KAAA+hB,EACAM,OAAAH,GAEAJ,EAAA9e,EAAAwL,GAAApQ,MAIA2jB,IAAA7G,aAcA,SAAAlS,GAAAxE,EAAA8d,EAAAR,GAEA,IAAAS,KACAT,IAEAA,EAAAtd,EAAAuE,SACAuZ,GAGAxZ,GADAgZ,KACAQ,IAIA,QAAAtf,EAAA,EAAAH,EAAAif,EAAAxf,OAAsCU,EAAAH,EAASG,IAE/C,QAAAuL,EAAA,EAAAiJ,EAAAsK,EAAA9e,GAAAV,OAA0CiM,EAAAiJ,EAASjJ,KAEnDuT,EAAA9e,GAAAuL,GAAA8T,QACAE,EAAAhU,IAAA/J,EAAAge,gBAEAD,EAAAhU,GAAAuT,EAAA9e,GAAAuL,GAAAvO,MAKA,OAAAuiB,EAYA,SAAAE,GAAAje,EAAA9H,EAAA6F,GAOA,GAJAiI,GAAAhG,EAAA,iCAAA9H,IAIAA,GAAAf,EAAAqB,QAAAN,GAAA,CACA,IAAAqK,KACA2b,EAAA,aAEA/mB,EAAAiH,KAAAlG,EAAA,SAAAoS,EAAAxE,GACA,IAAAsE,EAAAtE,EAAAd,KAAAoF,MAAA8T,GAEA,GAAA9T,EAAA,CAEA,IAAApF,EAAAoF,EAAA,GAEA7H,EAAAyC,KACAzC,EAAAyC,OAEAzC,EAAAyC,GAAA1E,KAAAwF,EAAA6I,YAGApM,EAAAuD,EAAAd,MAAAc,EAAA6I,QAGAzW,EAAAqK,EAGA,IAAA4b,EACAxb,EAAA3C,EAAA2C,KACAyb,EAAApe,EAAAN,UACAzF,EAAA,SAAA8I,GACAiD,GAAAhG,EAAA,YAAAA,EAAA+C,EAAA/C,EAAAqe,QACAtgB,EAAAgF,IAGA,GAAA5L,EAAAsB,cAAAkK,MAAAzK,KACA,CAGA,IAAAomB,EAAA,mBAFAH,EAAAxb,EAAAzK,MAGAimB,EAAAjmB,EAAA8H,GACAme,EAGAjmB,EAAA,mBAAAimB,GAAAG,EACAA,EACAnnB,EAAA8H,QAAA,EAAA/G,EAAAomB,UAIA3b,EAAAzK,KAGA,IAAAqmB,GACArmB,OACA4K,QAAA,SAAAC,GACA,IAAAE,EAAAF,EAAAE,OAAAF,EAAAyb,OACAvb,GACAtD,GAAAK,EAAA,EAAAiD,GAGAjD,EAAA+C,OACA9I,EAAA8I,IAEAH,SAAA,OACA8P,OAAA,EACArX,KAAA2E,EAAAye,cACAxb,MAAA,SAAAyb,EAAAzb,EAAA0b,GACA,IAAAC,EAAA5Y,GAAAhG,EAAA,YAAAA,EAAA,KAAAA,EAAAqe,SAEA,IAAAlnB,EAAAuM,SAAA,EAAAkb,KACA,eAAA3b,EACAtD,GAAAK,EAAA,6BAEA,IAAA0e,EAAAG,YACAlf,GAAAK,EAAA,mBAIAwZ,GAAAxZ,GAAA,KAKAA,EAAA8e,UAAA5mB,EAGA8N,GAAAhG,EAAA,eAAAA,EAAA9H,IAEA8H,EAAA+e,aAGA/e,EAAA+e,aAAA3kB,KAAAgkB,EACApe,EAAAgf,YACA7nB,EAAAwM,IAAAzL,EAAA,SAAA4N,EAAAwE,GACA,OAAatF,KAAAsF,EAAAqE,MAAA7I,KAEb7L,EACA+F,GAGAA,EAAAgf,aAAA,iBAAArc,EAGA3C,EAAAqe,MAAAlnB,EAAAwL,KAAAxL,EAAA8H,OAAAsf,GACA1b,IAAAF,GAAA3C,EAAAgf,eAGA,mBAAArc,EAGA3C,EAAAqe,MAAA1b,EAAAvI,KAAAgkB,EAAAlmB,EAAA+B,EAAA+F,IAKAA,EAAAqe,MAAAlnB,EAAAwL,KAAAxL,EAAA8H,OAAAsf,EAAA5b,IAGAA,EAAAzK,KAAAimB,GAWA,SAAAzE,GAAAvgB,GAEA,OAAAA,EAAA8lB,eACA9lB,EAAA8a,QACAuF,GAAArgB,GAAA,GAEA8kB,GACA9kB,EACA+lB,GAAA/lB,GACA,SAAA4J,GACAoc,GAAAhmB,EAAA4J,MAIA,GAiBA,SAAAmc,GAAA/lB,GAEA,IAMAqF,EAAA4gB,EAAAnkB,EAAAokB,EALApmB,EAAAE,EAAAsL,UACA6a,EAAArmB,EAAA6E,OACAqH,EAAAhM,EAAA0H,UACA0e,EAAApmB,EAAA4hB,gBACAyE,EAAArmB,EAAAmW,gBACApX,KACA+M,EAAAW,GAAAzM,GACAsmB,EAAAtmB,EAAAiJ,eACAsd,GAAA,IAAAva,EAAAmX,UACAnjB,EAAAwmB,iBACA,EAEAC,EAAA,SAAA5a,EAAA2J,GACAzW,EAAAoI,MAAe0E,OAAA2J,WAIfiR,EAAA,QAAAzmB,EAAA8a,OACA2L,EAAA,WAAAN,GACAM,EAAA,WAAA1W,EAAAjQ,EAAA,SAAA8K,KAAA,MACA6b,EAAA,gBAAAH,GACAG,EAAA,iBAAAF,GAGA,IAAA3X,GACAnP,KAAAO,EAAA8a,MACAhb,WACAgE,SACAwM,MAAAgW,EACA3hB,OAAA4hB,EACA1kB,QACA2T,MAAA4Q,EAAAM,QACAC,MAAAP,EAAA3kB,SAIA,IAAA4D,EAAA,EAAaA,EAAA8gB,EAAgB9gB,IAC7BvD,EAAAhC,EAAAuF,GACA6gB,EAAAG,EAAAhhB,GACA4gB,EAAA,mBAAAnkB,EAAAsC,MAAA,WAAAtC,EAAAsC,MAEAwK,EAAA9O,QAAAqH,MACApI,KAAAknB,EACApa,KAAA/J,EAAA8kB,MACAC,WAAA/kB,EAAAglB,YACAC,UAAAjlB,EAAA2V,UACA5V,QACA2T,MAAA0Q,EAAAQ,QACAC,MAAAT,EAAAzkB,UAIAglB,EAAA,aAAAphB,EAAA4gB,GAEAja,EAAAyV,UACAgF,EAAA,WAAAphB,EAAA6gB,EAAAQ,SACAD,EAAA,UAAAphB,EAAA6gB,EAAAzkB,QACAglB,EAAA,eAAAphB,EAAAvD,EAAAglB,cAGA9a,EAAAM,OACAma,EAAA,aAAAphB,EAAAvD,EAAA2V,WAIAzL,EAAAyV,UACAgF,EAAA,UAAAL,EAAAM,SACAD,EAAA,SAAAL,EAAA3kB,SAGAuK,EAAAM,QACAtO,EAAAiH,KAAA6G,EAAA,SAAAzG,EAAAsH,GACAiC,EAAA9K,MAAAqD,MAAmBrF,OAAA6K,EAAA1K,IAAA2K,IAAAD,EAAAC,MAEnB6Z,EAAA,YAAAphB,EAAAsH,EAAA1K,KACAwkB,EAAA,YAAAphB,EAAAsH,EAAAC,OAGA6Z,EAAA,eAAA3a,EAAAnH,SAKA,IAAAqiB,EAAAzoB,EAAAwG,IAAAiiB,OAAAxd,KACA,cAAAwd,EACAhnB,EAAA6lB,YAAA9mB,EAAA6P,EAKAoY,EAAAjoB,EAAA6P,EAeA,SAAAoX,GAAAhmB,EAAA4J,GAIA,IAAAqd,EAAA,SAAA5T,EAAA6T,GACA,OAAAtd,EAAAyJ,KAAAtV,EAAA6L,EAAAyJ,GAAAzJ,EAAAsd,IAGAnoB,EAAAooB,GAAAnnB,EAAA4J,GACAnK,EAAAwnB,EAAA,gBACAG,EAAAH,EAAA,gCACAI,EAAAJ,EAAA,0CAEA,GAAAxnB,EAAA,CAEA,KAAAA,EAAAO,EAAA8a,MACA,OAEA9a,EAAA8a,MAAA,EAAArb,EAGAyc,EAAAlc,GACAA,EAAAsJ,eAAAyF,SAAAqY,EAAA,IACApnB,EAAAqJ,iBAAA0F,SAAAsY,EAAA,IAEA,QAAAhiB,EAAA,EAAA8K,EAAApR,EAAA4F,OAAkCU,EAAA8K,EAAQ9K,IAC1CuI,EAAA5N,EAAAjB,EAAAsG,IAEArF,EAAA8N,UAAA9N,EAAA+N,gBAAAjD,QAEA9K,EAAA8lB,cAAA,EACArG,GAAAzf,GAEAA,EAAAsnB,gBACAC,GAAAvnB,EAAA4J,GAGA5J,EAAA8lB,cAAA,EACAzF,GAAArgB,GAAA,GAYA,SAAAmnB,GAAAtgB,EAAA+C,GAEA,IAAA4d,EAAAxpB,EAAAsB,cAAAuH,EAAA2C,OAAA3C,EAAA2C,KAAAge,UAAAzpB,EACA8I,EAAA2C,KAAAge,QACA3gB,EAAA4gB,cAIA,eAAAD,EACA5d,EAAA+D,QAAA/D,EAAA4d,GAGA,KAAAA,EACAhf,EAAAgf,EAAAhf,CAAAoB,GACAA,EASA,SAAA0Z,GAAAtjB,GAEA,IAAA4I,EAAA5I,EAAA2I,SACA+e,EAAA1nB,EAAAyG,SACAkhB,EAAA3nB,EAAAsH,UACAsgB,EAAA5nB,EAAA4hB,gBACA5V,EAAAhM,EAAAikB,YACA4D,EAAA,+BAAAjf,EAAAkf,aAAA,MAEAvM,EAAAoM,EAAAjB,QACAnL,IAAAtK,MAAA,WACAsK,EAAAjM,QAAA,UAAAuY,GACAtM,EAAAsM,EAEA,IAAA9b,EAAA/N,EAAA,UACA0I,GAAAsF,EAAA+b,EAAA,KAAAL,EAAA,UACA1G,MAAApY,EAAAof,UAEAzT,OAAAvW,EAAA,YAAAuW,OAAAgH,IAEA0M,EAAA,WAEAjc,EAAA+b,EAAA,IACApb,EAAAlO,KAAA+W,MAAA/W,KAAA+W,MAAA,GAGA7I,GAAAib,EAAAlB,UACA/E,GAAA3hB,GACA0mB,QAAA/Z,EACAlL,OAAAmmB,EAAAnmB,OACAC,OAAAkmB,EAAAlmB,OACAE,iBAAAgmB,EAAAhmB,mBAIA5B,EAAAiJ,eAAA,EACAwW,GAAAzf,KAIAkoB,EAAA,OAAAloB,EAAAkoB,YACAloB,EAAAkoB,YACA,QAAAnb,GAAA/M,GACA,IACA,EAEAmoB,EAAAnqB,EAAA,QAAA+N,GACAY,IAAAib,EAAAlB,SACAnQ,KAAA,cAAAoR,EAAAS,oBACAC,GACA,8CACAH,EACAI,GAAAL,EAAAC,GACAD,GAEAI,GAAA,uBAAAE,GAEA,OAAAA,EAAAC,QACA,WAGAjS,KAAA,gBAAAmR,GAgBA,OAbA1pB,EAAAgC,EAAAiG,QAAAoiB,GAAA,wBAAAI,EAAAziB,GACA,GAAAhG,IAAAgG,EAGA,IACAmiB,EAAA,KAAAjqB,EAAAwqB,eACAP,EAAAxb,IAAAib,EAAAlB,SAGA,MAAA6B,OAIAxc,EAAA,GAWA,SAAA4V,GAAA9a,EAAA8hB,EAAAC,GAEA,IAAAC,EAAAhiB,EAAA+a,gBACAkH,EAAAjiB,EAAAsP,gBACA4S,EAAA,SAAAC,GAEAH,EAAAnC,QAAAsC,EAAAtC,QACAmC,EAAApnB,OAAAunB,EAAAvnB,OACAonB,EAAAnnB,OAAAsnB,EAAAtnB,OACAmnB,EAAAjnB,iBAAAonB,EAAApnB,kBAEAqnB,EAAA,SAAAjY,GAEA,OAAAA,EAAAkY,eAAAnrB,GAAAiT,EAAAkY,aAAAlY,EAAAvP,QAQA,GAHA0X,EAAAtS,GAGA,OAAAkG,GAAAlG,GACA,CAEAsiB,GAAAtiB,EAAA8hB,EAAAjC,QAAAkC,EAAAK,EAAAN,KAAAjnB,OAAAinB,EAAA/mB,kBACAmnB,EAAAJ,GAGA,QAAAtjB,EAAA,EAAkBA,EAAAyjB,EAAAnkB,OAAwBU,IAE1C+jB,GAAAviB,EAAAiiB,EAAAzjB,GAAAqhB,QAAArhB,EAAA4jB,EAAAH,EAAAzjB,IACAyjB,EAAAzjB,GAAA3D,OAAAonB,EAAAzjB,GAAAzD,kBAIAynB,GAAAxiB,QAIAkiB,EAAAJ,GAIA9hB,EAAAya,WAAA,EACAzU,GAAAhG,EAAA,eAAAA,IASA,SAAAwiB,GAAArpB,GAMA,IAJA,IAEAR,EAAAob,EAFA0O,EAAA/qB,EAAAwG,IAAAlD,OACA0nB,EAAAvpB,EAAA8N,UAGAzI,EAAA,EAAA8K,EAAAmZ,EAAA3kB,OAAqCU,EAAA8K,EAAQ9K,IAAA,CAI7C,IAHA,IAAAvG,KAGA8R,EAAA,EAAAwI,EAAAmQ,EAAA5kB,OAA0CiM,EAAAwI,EAAQxI,IAClDgK,EAAA2O,EAAA3Y,GACApR,EAAAQ,EAAAe,OAAA6Z,GAEA0O,EAAAjkB,GAAArF,EAAAR,EAAAqd,aAAAjC,EAAApb,EAAA8a,OAAA1J,IACA9R,EAAAqI,KAAAyT,GAMA2O,EAAA5kB,OAAA,EACA3G,EAAAwrB,MAAAD,EAAAzqB,IAeA,SAAAsqB,GAAAppB,EAAAypB,EAAA5O,EAAA8L,EAAA+C,EAAAC,GAEA,QAAAF,EAAA,CASA,IALA,IAAA1qB,EACAmR,KACA0Z,EAAA5pB,EAAA8N,UACA+b,EAAAC,GAAAL,EAAA9C,EAAA+C,EAAAC,GAEAtkB,EAAA,EAAiBA,EAAAukB,EAAAjlB,OAAmBU,IACpCtG,EAAAiB,EAAAe,OAAA6oB,EAAAvkB,IAAAwX,aAAAhC,GAEAgP,EAAAE,KAAAhrB,IACAmR,EAAA/I,KAAAyiB,EAAAvkB,IAIArF,EAAA8N,UAAAoC,GAcA,SAAAiZ,GAAAnpB,EAAA6nB,EAAAtW,EAAAoV,EAAA+C,EAAAC,GAEA,IAGAC,EAAAI,EAAA3kB,EAHAwkB,EAAAC,GAAAjC,EAAAlB,EAAA+C,EAAAC,GACAM,EAAAjqB,EAAA4hB,gBAAA8E,QACAwD,EAAAlqB,EAAA+N,gBAEAoc,KAWA,GARA,IAAA5rB,EAAAwG,IAAAlD,OAAA8C,SACA4M,GAAA,GAIAyY,EAAAI,GAAApqB,GAGA6nB,EAAAljB,QAAA,EACA3E,EAAA8N,UAAAoc,EAAApf,YAEA,CAeA,KAbAkf,GACAzY,GACA0Y,EAAAtlB,OAAAkjB,EAAAljB,QACA,IAAAkjB,EAAAzW,QAAA6Y,IACAjqB,EAAAuM,WAGAvM,EAAA8N,UAAAoc,EAAApf,SAIA8e,EAAA5pB,EAAA8N,UAEAzI,EAAA,EAAcA,EAAAukB,EAAAjlB,OAAmBU,IACjCwkB,EAAAE,KAAA/pB,EAAAe,OAAA6oB,EAAAvkB,IAAAglB,cACAF,EAAAhjB,KAAAyiB,EAAAvkB,IAIArF,EAAA8N,UAAAqc,GAcA,SAAAL,GAAAjoB,EAAA8kB,EAAA+C,EAAAC,GAMA,GAJA9nB,EAAA8kB,EACA9kB,EACAwN,GAAAxN,GAEA6nB,EAAA,CAQA,IAAA9d,EAAA5N,EAAAwM,IAAA3I,EAAAoP,MAAA,iCAAAqZ,GACA,SAAAA,EAAA7Y,OAAA,IACA,IAAA8Y,EAAAD,EAAArZ,MAAA,YACAqZ,EAAAC,IAAA,GAAAD,EAGA,OAAAA,EAAAhb,QAAA,UAGAzN,EAAA,UAAA+J,EAAAhB,KAAA,kBAGA,WAAA6D,OAAA5M,EAAA8nB,EAAA,QAUA,IAAAta,GAAA9Q,EAAA8T,KAAAa,YAEAsX,GAAAxsB,EAAA,YACAysB,GAAAD,GAAAE,cAAA3sB,EAGA,SAAAqsB,GAAApqB,GAEA,IACA8B,EACAuD,EAAAuL,EAAAT,EAAAiJ,EAAAuR,EAAA1P,EAAAzb,EAFAM,EAAAE,EAAAsL,UAGAsf,EAAArsB,EAAAwG,IAAA7C,KAAAL,OACAgpB,GAAA,EAEA,IAAAxlB,EAAA,EAAA8K,EAAAnQ,EAAAe,OAAA4D,OAAyCU,EAAA8K,EAAQ9K,IAGjD,KAFA7F,EAAAQ,EAAAe,OAAAsE,IAEAwX,aAAA,CAGA,IAFA8N,KAEA/Z,EAAA,EAAAwI,EAAAtZ,EAAA6E,OAAmCiM,EAAAwI,EAAQxI,KAC3C9O,EAAAhC,EAAA8Q,IAEAkW,aACA7L,EAAAvB,EAAA1Z,EAAAqF,EAAAuL,EAAA,UAEAga,EAAA9oB,EAAA4U,SACAuE,EAAA2P,EAAA9oB,EAAA4U,OAAAuE,IAKA,OAAAA,IACAA,EAAA,IAGA,iBAAAA,KAAA6P,WACA7P,IAAA6P,aAIA7P,EAAA,GAOAA,EAAA7J,UAAA,IAAA6J,EAAA7J,QAAA,OACAoZ,GAAAvU,UAAAgF,EACAA,EAAAwP,GACAD,GAAAE,YACAF,GAAAO,WAGA9P,EAAA3L,UACA2L,IAAA3L,QAAA,eAGAqb,EAAAxjB,KAAA8T,GAGAzb,EAAAqd,aAAA8N,EACAnrB,EAAA6qB,YAAAM,EAAA/f,KAAA,MACAigB,GAAA,EAIA,OAAAA,EAWA,SAAAG,GAAAC,GAEA,OACAppB,OAAAopB,EAAAvE,QACAgD,MAAAuB,EAAAvpB,OACAilB,MAAAsE,EAAAxpB,OACAkoB,gBAAAsB,EAAArpB,kBAaA,SAAAspB,GAAAD,GAEA,OACAvE,QAAAuE,EAAAppB,OACAH,OAAAupB,EAAAvB,MACAjoB,OAAAwpB,EAAAtE,MACA/kB,iBAAAqpB,EAAAtB,iBAUA,SAAAhG,GAAA3jB,GAEA,IACAmrB,EAAAnrB,EAAAyG,SACAhE,EAAAzC,EAAAikB,YAAA5e,EACA2O,EAAAhW,EAAA,UACAgjB,MAAAhhB,EAAA2I,SAAAyiB,MACA1kB,GAAAjE,EAAA,KAAA0oB,EAAA,UAkBA,OAfA1oB,IAEAzC,EAAAqrB,eAAAlkB,MACAvC,GAAA0mB,GACA1E,MAAA,gBAGA5S,EACAuC,KAAA,iBACAA,KAAA,sBAGAvY,EAAAgC,EAAAiG,QAAAsQ,KAAA,mBAAA4U,EAAA,UAGAnX,EAAA,GASA,SAAAsX,GAAAtrB,GAGA,IAAAyC,EAAAzC,EAAAikB,YAAA5e,EACA,OAAA5C,EAAAkC,OAAA,CAIA,IACA+M,EAAA1R,EAAAsH,UACAgJ,EAAAtQ,EAAAiJ,eAAA,EACAsH,EAAAvQ,EAAAogB,eACAmL,EAAAvrB,EAAA+gB,iBACAyK,EAAAxrB,EAAAkgB,mBACAhQ,EAAAsb,EACA9Z,EAAA0Z,MACA1Z,EAAA+Z,WAEAD,IAAAD,IAEArb,GAAA,IAAAwB,EAAAga,eAIAxb,GAAAwB,EAAAia,aACAzb,EAAA0b,GAAA5rB,EAAAkQ,GAEA,IAAApP,EAAA4Q,EAAAma,eACA,OAAA/qB,IACAoP,EAAApP,EAAAG,KAAAjB,EAAAuG,UACAvG,EAAAsQ,EAAAC,EAAAgb,EAAAC,EAAAtb,IAIAlS,EAAAyE,GAAAmN,KAAAM,IAIA,SAAA0b,GAAA5rB,EAAAub,GAIA,IACAuQ,EAAA9rB,EAAA+rB,eACAzb,EAAAtQ,EAAAiJ,eAAA,EACAvE,EAAA1E,EAAAwmB,gBACAxN,EAAAhZ,EAAAkgB,mBACA8L,GAAA,IAAAtnB,EAEA,OAAA6W,EACAjM,QAAA,WAAAwc,EAAA7qB,KAAAjB,EAAAsQ,IACAhB,QAAA,SAAAwc,EAAA7qB,KAAAjB,IAAAogB,iBACA9Q,QAAA,SAAAwc,EAAA7qB,KAAAjB,IAAA+gB,mBACAzR,QAAA,WAAAwc,EAAA7qB,KAAAjB,EAAAgZ,IACA1J,QAAA,UAAAwc,EAAA7qB,KAAAjB,EAAAgsB,EAAA,EAAAjX,KAAAkX,KAAA3b,EAAA5L,KACA4K,QAAA,WAAAwc,EAAA7qB,KAAAjB,EAAAgsB,EAAA,EAAAjX,KAAAkX,KAAAjT,EAAAtU,KAUA,SAAAmF,GAAA7J,GAEA,IAAAqF,EAAAH,EACApD,EADAoqB,EAAAlsB,EAAA+I,kBACAjJ,EAAAE,EAAAsL,UACAU,EAAAhM,EAAA0H,UACAykB,EAAAnsB,EAAAmJ,cAGA,GAAAnJ,EAAAgO,aAAA,CAqBA,IAfA8T,GAAA9hB,GAGAwe,GAAAxe,GACAgf,GAAAhf,IAAAoL,UACA4T,GAAAhf,IAAA0N,UAGA2S,GAAArgB,GAAA,GAGAgM,EAAAsM,YACAC,GAAAvY,GAGAqF,EAAA,EAAAH,EAAApF,EAAA6E,OAAkCU,EAAAH,EAASG,KAC3CvD,EAAAhC,EAAAuF,IAEAmT,SACA1W,EAAA6T,IAAA3O,MAAAC,MAAAmlB,GAAAtqB,EAAA0W,SAIA3L,GAAA7M,EAAA,gBAAAA,IAMAuhB,GAAAvhB,GAGA,IAAAwnB,EAAAza,GAAA/M,IACA,OAAAwnB,GAAA2E,KAEA,QAAA3E,EACA1C,GAAA9kB,KAAA,SAAA4J,GACA,IAAAyiB,EAAAlF,GAAAnnB,EAAA4J,GAGA,IAAAvE,EAAA,EAAgBA,EAAAgnB,EAAA1nB,OAAiBU,IACjCuI,EAAA5N,EAAAqsB,EAAAhnB,IAMArF,EAAA+I,kBAAAmjB,EAEA3K,GAAAvhB,GAEAqgB,GAAArgB,GAAA,GACAunB,GAAAvnB,EAAA4J,MAIAyW,GAAArgB,GAAA,GACAunB,GAAAvnB,UA9DAgT,WAAA,WAA0BnJ,GAAA7J,IAA6B,KA2EvD,SAAAunB,GAAAvnB,EAAA4J,GAEA5J,EAAAsnB,gBAAA,GAIA1d,GAAA5J,EAAAmF,MAAAwI,SACA0K,EAAArY,GAGA6M,GAAA7M,EAAA,oBAAAA,EAAA4J,IACAiD,GAAA7M,EAAA,yBAAAA,EAAA4J,IAIA,SAAA0iB,GAAAtsB,EAAA2M,GAEA,IAAAjI,EAAAqK,SAAApC,EAAA,IACA3M,EAAAwmB,gBAAA9hB,EAEA6nB,GAAAvsB,GAGA6M,GAAA7M,EAAA,eAAAA,EAAA0E,IAUA,SAAA2e,GAAArjB,GAgBA,IAdA,IACA4I,EAAA5I,EAAA2I,SACA+e,EAAA1nB,EAAAyG,SACA+lB,EAAAxsB,EAAAuH,YACAklB,EAAAzuB,EAAAqB,QAAAmtB,EAAA,IACAE,EAAAD,EAAAD,EAAA,GAAAA,EACA7E,EAAA8E,EAAAD,EAAA,GAAAA,EAEAG,EAAA3uB,EAAA,aACA6N,KAAA6b,EAAA,UACAkF,gBAAAlF,EACA1G,MAAApY,EAAAikB,gBAGAxnB,EAAA,EAAA8K,EAAAuc,EAAA/nB,OAAqCU,EAAA8K,EAAQ9K,IAC7CsnB,EAAA,GAAAtnB,GAAA,IAAAynB,OACA,iBAAAnF,EAAAtiB,GACArF,EAAA+rB,eAAApE,EAAAtiB,IACAsiB,EAAAtiB,GACAqnB,EAAArnB,IAIA,IAAA0nB,EAAA/uB,EAAA,uBAAA6K,SAAAD,EAAAokB,SAyBA,OAxBAhtB,EAAAikB,YAAAI,IACA0I,EAAA,GAAArmB,GAAAghB,EAAA,WAGAqF,EAAA3iB,WAAAmK,OACAvU,EAAAsH,UAAA2lB,YAAA3d,QAAA,SAAAqd,EAAA,GAAAO,YAKAlvB,EAAA,SAAA+uB,GACApgB,IAAA3M,EAAAwmB,iBACA6B,GAAA,qBAAAE,GACA+D,GAAAtsB,EAAAhC,EAAAS,MAAAkO,OACA8S,GAAAzf,KAIAhC,EAAAgC,EAAAiG,QAAAoiB,GAAA,wBAAAE,EAAAviB,EAAAtB,GACA1E,IAAAgG,GACAhI,EAAA,SAAA+uB,GAAApgB,IAAAjI,KAIAqoB,EAAA,GAgBA,SAAAnJ,GAAA5jB,GAEA,IACAkC,EAAAlC,EAAAmtB,gBACAC,EAAA7uB,EAAAwG,IAAAsoB,MAAAnrB,GACAglB,EAAA,mBAAAkG,EACAhuB,EAAA,SAAAY,GACAyf,GAAAzf,IAEAwC,EAAAxE,EAAA,UAAA6K,SAAA7I,EAAA2I,SAAA2kB,QAAAprB,GAAA,GACA8J,EAAAhM,EAAAikB,YAsCA,OApCAiD,GACAkG,EAAApJ,OAAAhkB,EAAAwC,EAAApD,GAIA4M,EAAAuhB,IAEA/qB,EAAAkE,GAAA1G,EAAAyG,SAAA,YAEAzG,EAAAqrB,eAAAlkB,MACAvC,GAAA,SAAA5E,GACA,GAAAknB,EAAA,CACA,IAQA7hB,EAAA8K,EAPAG,EAAAtQ,EAAAiJ,eACAvE,EAAA1E,EAAAwmB,gBACAgH,EAAAxtB,EAAAkgB,mBACA8L,GAAA,IAAAtnB,EACApB,EAAA0oB,EAAA,EAAAjX,KAAAkX,KAAA3b,EAAA5L,GACA+oB,EAAAzB,EAAA,EAAAjX,KAAAkX,KAAAuB,EAAA9oB,GACAgpB,EAAAN,EAAA9pB,EAAAmqB,GAGA,IAAApoB,EAAA,EAAA8K,EAAAnE,EAAAuhB,EAAA5oB,OAAwCU,EAAA8K,EAAQ9K,IAChDuZ,GAAA5e,EAAA,aAAA4e,CACA5e,EAAAgM,EAAAuhB,EAAAloB,KAAAqoB,EAAApqB,EAAAmqB,QAKAL,EAAAjpB,SAAAnE,EAAAZ,IAGAwnB,MAAA,gBAIApkB,EAaA,SAAAmrB,GAAA3tB,EAAA4tB,EAAAxuB,GAEA,IACAkR,EAAAtQ,EAAAiJ,eACAvE,EAAA1E,EAAAwmB,gBACAqH,EAAA7tB,EAAAkgB,mBAEA,IAAA2N,IAAA,IAAAnpB,EAEA4L,EAAA,EAEA,iBAAAsd,GAEAtd,EAAAsd,EAAAlpB,GAEAmpB,IAEAvd,EAAA,GAGA,SAAAsd,EAEAtd,EAAA,EAEA,YAAAsd,GAEAtd,EAAA5L,GAAA,EACA4L,EAAA5L,EACA,GAEA,IAEA4L,EAAA,GAGA,QAAAsd,EAEAtd,EAAA5L,EAAAmpB,IAEAvd,GAAA5L,GAGA,QAAAkpB,EAEAtd,EAAAyE,KAAA+Y,OAAAD,EAAA,GAAAnpB,KAIA8B,GAAAxG,EAAA,4BAAA4tB,EAAA,GAGA,IAAAG,EAAA/tB,EAAAiJ,iBAAAqH,EAWA,OAVAtQ,EAAAiJ,eAAAqH,EAEAyd,IACAlhB,GAAA7M,EAAA,aAAAA,IAEAZ,GACAqgB,GAAAzf,IAIA+tB,EAWA,SAAAvK,GAAAxjB,GAEA,OAAAhC,EAAA,UACA0I,GAAA1G,EAAAikB,YAAA+J,EAAA,KAAAhuB,EAAAyG,SAAA,cACAua,MAAAhhB,EAAA2I,SAAAslB,cAEAre,KAAA5P,EAAAsH,UAAA2mB,aACAhM,aAAAjiB,EAAAiG,QAAA,GAUA,SAAAoa,GAAArgB,EAAAmD,GAEAnD,EAAA0H,UAAA6b,aACAvlB,EAAAgC,EAAAikB,YAAA+J,GAAA7gB,IAAA,UAAAhK,EAAA,gBAGA0J,GAAA7M,EAAA,mBAAAA,EAAAmD,IASA,SAAAsgB,GAAAzjB,GAEA,IAAA+hB,EAAA/jB,EAAAgC,EAAAiG,QAGA8b,EAAAxL,KAAA,eAGA,IAAAtW,EAAAD,EAAAE,QAEA,QAAAD,EAAAE,IAAA,KAAAF,EAAAG,GACA,OAAAJ,EAAAiG,OAGA,IAAAuN,EAAAvT,EAAAE,GACA+tB,EAAAjuB,EAAAG,GACAwI,EAAA5I,EAAA2I,SACAwlB,EAAApM,EAAA3X,SAAA,WACAgkB,EAAAD,EAAAxpB,OAAAwpB,EAAA,GAAAjhB,aAAA,KACAmhB,EAAArwB,EAAA+jB,EAAA,GAAAuM,WAAA,IACAC,EAAAvwB,EAAA+jB,EAAA,GAAAuM,WAAA,IACAE,EAAAzM,EAAA3X,SAAA,SACAqkB,EAAA,SACAC,EAAA,SAAA1oB,GACA,OAAAA,EAAAomB,GAAApmB,GAAA,MAGAwoB,EAAA7pB,SACA6pB,EAAA,MAmBA,IAAAG,EAAA3wB,EAAAywB,GAA2BzN,MAAApY,EAAAgmB,iBAC3Bra,OACAvW,EAAAywB,GAAazN,MAAApY,EAAAimB,cACb1hB,KACAmH,SAAA,SACAL,SAAA,WACA6a,OAAA,EACA7nB,MAAAuM,EAAAkb,EAAAlb,GAAA,SAEAe,OACAvW,EAAAywB,GAAezN,MAAApY,EAAAmmB,mBACf5hB,KACA6hB,aAAA,cACA/nB,MAAAhH,EAAAgvB,SAAA,SAEA1a,OACA8Z,EACAa,WAAA,MACA/hB,IAAA,iBACAoH,OAAA,QAAA6Z,EAAAD,EAAA,MACA5Z,OACAwN,EAAA3X,SAAA,aAKAmK,OACAvW,EAAAywB,GAAazN,MAAApY,EAAAumB,cACbhiB,KACA8G,SAAA,WACAK,SAAA,OACArN,MAAAynB,EAAAlb,KAEAe,OAAAwN,IAGAyM,GACAG,EAAApa,OACAvW,EAAAywB,GAAazN,MAAApY,EAAAwmB,cACbjiB,KACAmH,SAAA,SACAwa,OAAA,EACA7nB,MAAAuM,EAAAkb,EAAAlb,GAAA,SAEAe,OACAvW,EAAAywB,GAAezN,MAAApY,EAAAymB,mBACf9a,OACAga,EACAW,WAAA,MACA/hB,IAAA,iBACAoH,OAAA,WAAA6Z,EAAAD,EAAA,MACA5Z,OACAwN,EAAA3X,SAAA,aAOA,IAAAA,EAAAukB,EAAAvkB,WACAklB,EAAAllB,EAAA,GACAmlB,EAAAnlB,EAAA,GACAolB,EAAAhB,EAAApkB,EAAA,QA8BA,OA3BAoJ,GACAxV,EAAAuxB,GAAAlH,GAAA,qBAAAE,GACA,IAAAnU,EAAA3V,KAAA2V,WAEAkb,EAAAlb,aAEAoa,IACAgB,EAAApb,gBAKApW,EAAAuxB,GAAApiB,IACA+gB,GAAAjuB,EAAAwvB,UAAA,sBACAvB,GAGAluB,EAAA0vB,YAAAJ,EACAtvB,EAAA2vB,YAAAJ,EACAvvB,EAAA4vB,YAAAJ,EAGAxvB,EAAAqrB,eAAAlkB,MACAvC,GAAAvE,GACAumB,MAAA,cAGA+H,EAAA,GAmBA,SAAAtuB,GAAAL,GAIA,IAyBA6vB,EAAAC,EACAC,EAAAC,EACAC,EAAAC,EAGAha,EAAAia,EAAAC,EA7BAnwB,EAAAD,EAAAE,QACAsT,EAAAvT,EAAAE,GACAkwB,EAAApwB,EAAAgvB,QACAf,EAAAjuB,EAAAG,GACAsU,EAAAzU,EAAAoV,UACAib,EAAAtyB,EAAAgC,EAAA0vB,aACAa,EAAAD,EAAA,GAAAtpB,MACAwpB,EAAAF,EAAAlmB,SAAA,OACAqmB,EAAAD,EAAA,GAAAxpB,MACA0pB,EAAAF,EAAApmB,SAAA,SACAumB,EAAA3wB,EAAA2vB,YACAiB,EAAA5yB,EAAA2yB,GACAE,EAAAF,EAAA3pB,MACA8pB,EAAA9yB,EAAAgC,EAAA4vB,aACAmB,EAAAD,EAAA1mB,SAAA,OACA4mB,EAAAD,EAAA3mB,SAAA,SACA6mB,EAAAjzB,EAAAgC,EAAAkG,QACA6b,EAAA/jB,EAAAgC,EAAAiG,QACAirB,EAAAnP,EAAA,GACAoP,EAAAD,EAAAlqB,MACAwnB,EAAAxuB,EAAAoG,OAAApI,EAAAgC,EAAAoG,QAAA,KACA2N,EAAA/T,EAAAoV,SACAgc,EAAArd,EAAAc,gBACAwc,EAAAthB,EAAA/P,EAAAsL,UAAA,OAIAgmB,KAAAC,KACAC,KAAAC,KAEAC,EAAA,SAAAC,GACA,IAAA3qB,EAAA2qB,EAAA3qB,MACAA,EAAA4qB,WAAA,IACA5qB,EAAA6qB,cAAA,IACA7qB,EAAA8qB,eAAA,IACA9qB,EAAA+qB,kBAAA,IACA/qB,EAAAqN,OAAA,GAMA2d,EAAArB,EAAAsB,aAAAtB,EAAAuB,aAEA,GAAAlyB,EAAAgyB,kBAAAhyB,EAAAgyB,eAAAj0B,EAGA,OAFAiC,EAAAgyB,oBACA3Z,EAAArY,GAIAA,EAAAgyB,eAQAjQ,EAAA3X,SAAA,gBAAApJ,SAEAwtB,IACA0B,EAAA1B,EAAA2D,QAAAC,UAAArQ,GACA+N,EAAAtB,EAAAnkB,KAAA,MACA2lB,EAAAE,EAAA7lB,KAAA,OAIA4lB,EAAAgB,EAAAkB,QAAAC,UAAArQ,GACA8N,EAAAoB,EAAA5mB,KAAA,MACA0lB,EAAAE,EAAA5lB,KAAA,MACA4lB,EAAA5lB,KAAA,UAAA6kB,WAAA,YAUA1b,IAEAqd,EAAA5pB,MAAA,OACAqpB,EAAA,GAAAtpB,MAAAC,MAAA,QAGAjJ,EAAAiH,KAAAoG,GAAArL,EAAAiwB,GAAA,SAAA5qB,EAAAoF,GACAyL,EAAAuC,EAAAzY,EAAAqF,GACAoF,EAAAzD,MAAAC,MAAAjH,EAAAsL,UAAA4K,GAAAsC,SAGAgW,GACA6D,GAAA,SAAAre,GACAA,EAAAhN,MAAAC,MAAA,IACI+oB,GAIJI,EAAArO,EAAAuQ,aACA,KAAA9e,GAEA2d,EAAAlqB,MAAA,OAKAmqB,IAAArP,EAAA1X,KAAA,SAAAgK,SAAAsc,EAAA4B,cACA,UAAA3B,EAAAzjB,IAAA,iBAEAgkB,EAAAlqB,MAAAmlB,GAAArK,EAAAuQ,aAAA5d,IAIA0b,EAAArO,EAAAuQ,cAEA,KAAAjC,IAEAc,EAAAlqB,MAAAmlB,GAAAiE,GAGAD,EAAArO,EAAAuQ,cAOAD,GAAAX,EAAA3B,GAGAsC,GAAA,SAAAV,GACAH,EAAArqB,KAAAwqB,EAAA1b,WACAqb,EAAAnqB,KAAAilB,GAAApuB,EAAA2zB,GAAAxkB,IAAA,YACG4iB,GAGHsC,GAAA,SAAAG,EAAAntB,IAGA,IAAArH,EAAAuM,QAAAioB,EAAAnB,KACAmB,EAAAxrB,MAAAC,MAAAqqB,EAAAjsB,KAEGwqB,GAEH7xB,EAAA+xB,GAAA1b,OAAA,GAGAma,IAEA6D,GAAAX,EAAA1B,GAEAqC,GAAA,SAAAV,GACAF,EAAAtqB,KAAAwqB,EAAA1b,WACAsb,EAAApqB,KAAAilB,GAAApuB,EAAA2zB,GAAAxkB,IAAA,YACI6iB,GAEJqC,GAAA,SAAAG,EAAAntB,GACAmtB,EAAAxrB,MAAAC,MAAAsqB,EAAAlsB,IACIyqB,GAEJ9xB,EAAAgyB,GAAA3b,OAAA,IAYAge,GAAA,SAAAV,EAAAtsB,GACAssB,EAAA1b,UAAA,kCAAAub,EAAAnsB,GAAA,SACAssB,EAAAnV,WAAA,GAAAxV,MAAAqN,OAAA,IACAsd,EAAAnV,WAAA,GAAAxV,MAAAsN,SAAA,SACAqd,EAAA3qB,MAAAC,MAAAqqB,EAAAjsB,IACG0qB,GAEHvB,GAEA6D,GAAA,SAAAV,EAAAtsB,GACAssB,EAAA1b,UAAA,kCAAAwb,EAAApsB,GAAA,SACAssB,EAAAnV,WAAA,GAAAxV,MAAAqN,OAAA,IACAsd,EAAAnV,WAAA,GAAAxV,MAAAsN,SAAA,SACAqd,EAAA3qB,MAAAC,MAAAsqB,EAAAlsB,IACI2qB,GAKJjO,EAAAuQ,aAAAlC,GAGAD,EAAAQ,EAAAsB,aAAAtB,EAAA4B,cACA,UAAA3B,EAAAzjB,IAAA,cACAijB,EAAA1b,EACA0b,EAGAgB,IAAAT,EAAAsB,aACAtB,EAAA4B,cAAA,UAAA3B,EAAAzjB,IAAA,iBAEAgkB,EAAAlqB,MAAAmlB,GAAA+D,EAAAzb,IAIA,KAAAlB,GAAA,KAAA6c,GACA7pB,GAAAxG,EAAA,qCAKAmwB,EAAA,OAIAU,EAAA5pB,MAAAmlB,GAAA+D,GACAI,EAAAtpB,MAAAmlB,GAAA+D,GAEA3B,IACAxuB,EAAA4vB,YAAA5oB,MAAAC,MAAAmlB,GAAA+D,IAOAjC,GAKAkD,IACAP,EAAAxc,OAAA+X,GAAA8E,EAAAqB,aAAA7d,IAKA,IAAA+d,EAAA1Q,EAAAuQ,aACA5B,EAAA,GAAA1pB,MAAAC,MAAAmlB,GAAAqG,GACAhC,EAAAxpB,MAAAmlB,GAAAqG,GAIA,IAAAC,EAAA3Q,EAAA1N,SAAAsc,EAAAuB,cAAA,UAAAtB,EAAAzjB,IAAA,cACAwlB,EAAA,WAAA5e,EAAAe,eAAA,gBACA2b,EAAAkC,GAAAD,EAAAhe,EAAA,WAEA8Z,IACAwC,EAAA,GAAAhqB,MAAAC,MAAAmlB,GAAAqG,GACA1B,EAAA,GAAA/pB,MAAAC,MAAAmlB,GAAAqG,GACA1B,EAAA,GAAA/pB,MAAA2rB,GAAAD,EAAAhe,EAAA,YAIAqN,EAAA3X,SAAA,YAAA6X,aAAAF,EAAA3X,SAAA,UAGAwmB,EAAA3wB,UAIAD,EAAAuM,UAAAvM,EAAAshB,WAAAthB,EAAA6hB,YACA8O,EAAAiC,UAAA,GAcA,SAAAP,GAAAztB,EAAAiuB,EAAAC,GAKA,IAHA,IACAC,EAAAC,EADApwB,EAAA,EAAAyC,EAAA,EAAAH,EAAA2tB,EAAAluB,OAGAU,EAAAH,GAAA,CAIA,IAHA6tB,EAAAF,EAAAxtB,GAAAqX,WACAsW,EAAAF,IAAAztB,GAAAqX,WAAA,KAEAqW,GACA,IAAAA,EAAAE,WACAH,EACAluB,EAAAmuB,EAAAC,EAAApwB,GAGAgC,EAAAmuB,EAAAnwB,GAGAA,KAGAmwB,IAAAxV,YACAyV,EAAAF,EAAAE,EAAAzV,YAAA,KAGAlY,KAMA,IAAA6tB,GAAA,SAQA,SAAA3a,GAAA1R,GAEA,IAaAxB,EAAAvD,EAAAqxB,EAZApR,EAAAlb,EAAAZ,OACAnG,EAAA+G,EAAAyE,UACArL,EAAA4G,EAAA3G,QACAguB,EAAAjuB,EAAAG,GACAoT,EAAAvT,EAAAE,GACAkwB,EAAApwB,EAAAgvB,QACA9I,EAAArmB,EAAA6E,OACAyuB,EAAAxa,EAAA/R,EAAA,YACAwsB,EAAAr1B,EAAA,KAAA6I,EAAAX,QACAotB,EAAAvR,EAAAxc,aAAA,SACAguB,EAAAxR,EAAA5b,WACAqtB,GAAA,EAEAzf,EAAAlN,EAAAuO,SACAgc,EAAArd,EAAAc,gBAEA4e,EAAA1R,EAAA/a,MAAAC,MAMA,IALAwsB,IAAA,IAAAA,EAAAriB,QAAA,OACAkiB,EAAAG,GAIApuB,EAAA,EAAaA,EAAA+tB,EAAAzuB,OAA0BU,IAGvC,QAFAvD,EAAAhC,EAAAszB,EAAA/tB,KAEAmT,SACA1W,EAAA0W,OAAAkb,GAAA5xB,EAAAwU,WAAAid,GAEAC,GAAA,GASA,GAAApC,IAAAoC,IAAAhgB,IAAA0a,GACA/H,GAAApN,EAAAlS,IACAsf,GAAAkN,EAAA1uB,OAEA,IAAAU,EAAA,EAAcA,EAAA8gB,EAAgB9gB,IAAA,CAC9B,IAAAwV,EAAApC,EAAA5R,EAAAxB,GAEA,OAAAwV,IACA/a,EAAA+a,GAAArC,OAAA4T,GAAAiH,EAAA/oB,GAAAjF,GAAA4B,cAKA,CAKA,IAAA0sB,EAAA31B,EAAA+jB,GAAAoQ,QACAhlB,IAAA,uBACA+hB,WAAA,MAGAyE,EAAAtpB,KAAA,YAAArJ,SACA,IAAAid,EAAAjgB,EAAA,SAAAqP,SAAAsmB,EAAAtpB,KAAA,UAgBA,IAXAspB,EAAAtpB,KAAA,gBAAArJ,SACA2yB,EACApf,OAAAvW,EAAA6I,EAAAX,QAAAisB,SACA5d,OAAAvW,EAAA6I,EAAAT,QAAA+rB,SAGAwB,EAAAtpB,KAAA,sBAAA8C,IAAA,YAGAkmB,EAAAhoB,GAAAxE,EAAA8sB,EAAAtpB,KAAA,aAEAhF,EAAA,EAAcA,EAAA+tB,EAAAzuB,OAA0BU,IACxCvD,EAAAhC,EAAAszB,EAAA/tB,IAEAguB,EAAAhuB,GAAA2B,MAAAC,MAAA,OAAAnF,EAAAwU,YAAA,KAAAxU,EAAAwU,WACA8V,GAAAtqB,EAAAwU,YACA,GAKAxU,EAAAwU,YAAA9C,GACAxV,EAAAq1B,EAAAhuB,IAAAkP,OAAAvW,EAAA,UAAAmP,KACAlG,MAAAnF,EAAAwU,WACAsd,OAAA,EACAjB,QAAA,EACA7D,OAAA,EACAza,OAAA,KAMA,GAAAxN,EAAA9F,OAAA4D,OACA,IAAAU,EAAA,EAAeA,EAAA+tB,EAAAzuB,OAA0BU,IACzC8tB,EAAAC,EAAA/tB,GACAvD,EAAAhC,EAAAqzB,GAEAn1B,EAAA61B,GAAAhtB,EAAAssB,IACAhB,OAAA,GACA5d,OAAAzS,EAAAgyB,iBACAzmB,SAAA4Q,GAMAjgB,EAAA,SAAA21B,GAAAzE,WAAA,QAOA,IAAA6E,EAAA/1B,EAAA,UAAAmP,IAAAqG,GAAA0a,GAEAja,SAAA,WACAC,IAAA,EACAC,KAAA,EACAE,OAAA,EACA2f,MAAA,EACA1f,SAAA,cAIAC,OAAAof,GACAtmB,SAAAkmB,GAKA/f,GAAA6c,EACAsD,EAAA1sB,MAAAopB,GAEA7c,GACAmgB,EAAAxmB,IAAA,gBACAwmB,EAAAzE,WAAA,SAIAyE,EAAA1sB,QAAAssB,EAAA3e,aAAA0e,GACAK,EAAA1sB,MAAAssB,EAAA3e,cAGAsZ,EACAyF,EAAA1sB,MAAAssB,EAAA3e,aAEA0e,GACAK,EAAA1sB,MAAAqsB,GASA,IAAA9H,EAAA,EACA,IAAAnmB,EAAA,EAAcA,EAAA+tB,EAAAzuB,OAA0BU,IAAA,CACxC,IAAAhD,EAAArE,EAAAq1B,EAAAhuB,IACAypB,EAAAzsB,EAAAiwB,aAAAjwB,EAAA4E,QAIAgtB,EAAAlgB,EAAAmB,UACAH,KAAAkX,KAAAoH,EAAAhuB,GAAA8P,wBAAAlO,OACA5E,EAAAiwB,aAIA9G,GAAAyI,EAGAn0B,EAAAszB,EAAA/tB,IAAAmT,OAAA4T,GAAA6H,EAAAnF,GAGA/M,EAAA/a,MAAAC,MAAAmlB,GAAAZ,GAGAuI,EAAA/yB,SAWA,GAJAsyB,IACAvR,EAAA/a,MAAAC,MAAAmlB,GAAAkH,KAGAA,GAAA9f,KAAA3M,EAAAqtB,SAAA,CACA,IAAAC,EAAA,WACAn2B,EAAAC,GAAAoqB,GAAA,aAAAxhB,EAAAK,UAAAohB,GAAA,WACAjQ,EAAAxR,OAMAuqB,EACApe,WAAAmhB,EAAA,KAGAA,IAGAttB,EAAAqtB,UAAA,GAaA,IAAA5L,GAAA/pB,EAAA8T,KAAAC,SAUA,SAAAohB,GAAAzsB,EAAAic,GAEA,IAAAjc,EACA,SAGA,IAAA+M,EAAAhW,EAAA,UACAmP,IAAA,QAAAif,GAAAnlB,IACAoG,SAAA6V,GAAAhlB,EAAAkjB,MAEAzU,EAAAqH,EAAA,GAAAW,YAGA,OAFAX,EAAAhT,SAEA2L,EAWA,SAAAknB,GAAA7zB,EAAA6a,GAEA,IAAA3E,EAAAke,GAAAp0B,EAAA6a,GACA,GAAA3E,EAAA,EACA,YAGA,IAAAnX,EAAAiB,EAAAe,OAAAmV,GACA,OAAAnX,EAAA0B,IAEA1B,EAAA4d,QAAA9B,GADA7c,EAAA,SAAA4R,KAAA8J,EAAA1Z,EAAAkW,EAAA2E,EAAA,eAYA,SAAAuZ,GAAAp0B,EAAA6a,GAIA,IAFA,IAAA7U,EAAAulB,GAAA,EAAA8I,GAAA,EAEAhvB,EAAA,EAAA8K,EAAAnQ,EAAAe,OAAA4D,OAA6CU,EAAA8K,EAAQ9K,KAGrDW,GADAA,GADAA,EAAA0T,EAAA1Z,EAAAqF,EAAAwV,EAAA,eACAvL,QAAA4jB,GAAA,KACA5jB,QAAA,UAAyB,MAEzB3K,OAAA4mB,IACAA,EAAAvlB,EAAArB,OACA0vB,EAAAhvB,GAIA,OAAAgvB,EAUA,SAAAjI,GAAApmB,GAEA,cAAAA,EACA,MAGA,iBAAAA,EACAA,EAAA,EACA,MACAA,EAAA,KAIAA,EAAAiL,MAAA,OACAjL,EAAA,KACAA,EAKA,SAAAyG,GAAAzM,GAEA,IACAqF,EAAAwL,EAAAiJ,EAIAjG,EAAArQ,EAAAkT,EAAA4d,EAHA9nB,KAEAlB,EAAAtL,EAAAsL,UAEAipB,EAAAv0B,EAAAw0B,eACAC,EAAAz2B,EAAAsB,cAAAi1B,GACAG,KACAn1B,EAAA,SAAAqM,GACAA,EAAAjH,SAAA3G,EAAAqB,QAAAuM,EAAA,IAEA8oB,EAAAvtB,KAAAyE,GAIA5N,EAAAwrB,MAAAkL,EAAA9oB,IAoBA,IAdA5N,EAAAqB,QAAAk1B,IACAh1B,EAAAg1B,GAGAE,GAAAF,EAAAI,KACAp1B,EAAAg1B,EAAAI,KAGAp1B,EAAAS,EAAAkM,WAEAuoB,GAAAF,EAAAK,MACAr1B,EAAAg1B,EAAAK,MAGAvvB,EAAA,EAAaA,EAAAqvB,EAAA/vB,OAAsBU,IAKnC,IAHAivB,EAAAI,EAAArvB,GAAA,GACAwO,EAAAvI,EAAAgpB,GAAAzgB,UAEAhD,EAAA,EAAAiJ,EAAAjG,EAAAlP,OAAqCkM,EAAAiJ,EAASjJ,IAE9CrN,EAAAqQ,EAAAhD,GACA6F,EAAApL,EAAA9H,GAAAkT,OAAA,SAEAge,EAAArvB,GAAAwvB,OAAA92B,IACA22B,EAAArvB,GAAAwvB,KAAA72B,EAAAuM,QAAAmqB,EAAArvB,GAAA,GAAAiG,EAAA9H,GAAA4I,YAGAI,EAAArF,MACAnF,IAAAsyB,EACAryB,IAAAuB,EACAoJ,IAAA8nB,EAAArvB,GAAA,GACAzC,MAAA8xB,EAAArvB,GAAAwvB,KACA3yB,KAAAwU,EACAoV,UAAAvtB,EAAAwG,IAAA7C,KAAA4B,MAAA4S,EAAA,UAKA,OAAAlK,EASA,SAAAkV,GAAA7a,GAEA,IACAxB,EAAA8K,EAAAjL,EAQA4vB,EAEAtoB,EARAuoB,KACAC,EAAAz2B,EAAAwG,IAAA7C,KAAA4B,MACA/C,EAAA8F,EAAA9F,OAGAk0B,GAFApuB,EAAAyE,UAEA,GAEA4e,EAAArjB,EAAAkH,gBAUA,IAJAoL,EAAAtS,GAEA2F,EAAAC,GAAA5F,GAEAxB,EAAA,EAAA8K,EAAA3D,EAAA7H,OAA+BU,EAAA8K,EAAQ9K,KACvCyvB,EAAAtoB,EAAAnH,IAGAymB,WACAmJ,IAIAC,GAAAruB,EAAAiuB,EAAA7yB,KAIA,UAAA8K,GAAAlG,IAAA,IAAA2F,EAAA7H,OACA,CAGA,IAAAU,EAAA,EAAAH,EAAAglB,EAAAvlB,OAAyCU,EAAAH,EAASG,IAClD0vB,EAAA7K,EAAA7kB,MAwBA4vB,IAAAzoB,EAAA7H,OAEAulB,EAAApe,KAAA,SAAAF,EAAAmQ,GACA,IACAoZ,EAAAC,EAAAvkB,EAAAkZ,EAAAje,EACApH,EAAA8H,EAAA7H,OACA0wB,EAAAt0B,EAAA6K,GAAAgR,WACA0Y,EAAAv0B,EAAAgb,GAAAa,WAEA,IAAA/L,EAAA,EAAgBA,EAAAnM,EAAQmM,IAOxB,GANA/E,EAAAU,EAAAqE,GAEAskB,EAAAE,EAAAvpB,EAAA7J,KACAmzB,EAAAE,EAAAxpB,EAAA7J,KAGA,KADA8nB,EAAAoL,EAAAC,GAAA,EAAAD,EAAAC,EAAA,KAEA,cAAAtpB,EAAAc,IAAAmd,KAMA,OAFAoL,EAAAJ,EAAAnpB,GACAwpB,EAAAL,EAAAhZ,GACAoZ,EAAAC,GAAA,EAAAD,EAAAC,EAAA,MAOAlL,EAAApe,KAAA,SAAAF,EAAAmQ,GACA,IACAoZ,EAAAC,EAAAvkB,EAAAkZ,EAAAje,EAAAlH,EACAF,EAAA8H,EAAA7H,OACA0wB,EAAAt0B,EAAA6K,GAAAgR,WACA0Y,EAAAv0B,EAAAgb,GAAAa,WAEA,IAAA/L,EAAA,EAAgBA,EAAAnM,EAAQmM,IAQxB,GAPA/E,EAAAU,EAAAqE,GAEAskB,EAAAE,EAAAvpB,EAAA7J,KACAmzB,EAAAE,EAAAxpB,EAAA7J,KAEA2C,EAAAowB,EAAAlpB,EAAA5J,KAAA,IAAA4J,EAAAc,MAAAooB,EAAA,UAAAlpB,EAAAc,KAEA,KADAmd,EAAAnlB,EAAAuwB,EAAAC,IAEA,OAAArL,EAMA,OAFAoL,EAAAJ,EAAAnpB,GACAwpB,EAAAL,EAAAhZ,GACAoZ,EAAAC,GAAA,EAAAD,EAAAC,EAAA,MAMAvuB,EAAA0F,SAAA,EAIA,SAAAO,GAAA9M,GAUA,IARA,IAAAu1B,EACAC,EACA11B,EAAAE,EAAAsL,UACAkB,EAAAC,GAAAzM,GACAy1B,EAAAz1B,EAAAsH,UAAAmuB,MAIApwB,EAAA,EAAAH,EAAApF,EAAA6E,OAAsCU,EAAAH,EAASG,IAC/C,CACA,IAAApD,EAAAnC,EAAAuF,GACA+G,EAAAnK,EAAAmK,UACA4J,EAAA/T,EAAA+T,OAAA1G,QAAA,aACA+G,EAAApU,EAAA0T,IAIAU,EAAAqf,gBAAA,aAGAzzB,EAAAwV,WACAjL,EAAA7H,OAAA,GAAA6H,EAAA,GAAAvK,KAAAoD,GACAgR,EAAA2H,aAAA,mBAAAxR,EAAA,GAAAI,IAAA,0BACA4oB,EAAAppB,EAAAI,EAAA,GAAA5J,MAAA,IAAAwJ,EAAA,IAGAopB,EAAAppB,EAAA,GAGAmpB,EAAAvf,GAAA,QAAAwf,EACAC,EAAAE,eACAF,EAAAG,kBAIAL,EAAAvf,EAGAK,EAAA2H,aAAA,aAAAuX,IAeA,SAAAM,GAAA71B,EAAA6a,EAAAtG,EAAAzT,GAEA,IAGAg1B,EAHA7zB,EAAAjC,EAAAsL,UAAAuP,GACA1O,EAAAnM,EAAAkM,UACAE,EAAAnK,EAAAmK,UAEA2pB,EAAA,SAAAnqB,EAAA0I,GACA,IAAA4B,EAAAtK,EAAAipB,KAKA,OAJA3e,IAAAnY,IACAmY,EAAAlY,EAAAuM,QAAAqB,EAAA,GAAAQ,IAGA8J,EAAA,EAAA9J,EAAAzH,OACAuR,EAAA,EACA5B,EACA,KACA,GASA,GALA,iBAAAnI,EAAA,KACAA,EAAAnM,EAAAkM,WAAAC,IAIAoI,GAAAvU,EAAA0H,UAAAsuB,WAAA,CAEA,IAAAC,EAAAj4B,EAAAuM,QAAAsQ,EAAA9K,EAAA5D,EAAA,OAEA,IAAA8pB,GAIA,QAFAH,EAAAC,EAAA5pB,EAAA8pB,IAAA,KAEA,IAAA9pB,EAAAxH,SACAmxB,EAAA,GAGA,OAAAA,EACA3pB,EAAAxF,OAAAsvB,EAAA,IAGA9pB,EAAA8pB,GAAA,GAAA7pB,EAAA0pB,GACA3pB,EAAA8pB,GAAApB,KAAAiB,KAKA3pB,EAAAhF,MAAA0T,EAAAzO,EAAA,OACAD,IAAAxH,OAAA,GAAAkwB,KAAA,QAGA1oB,EAAAxH,QAAAwH,EAAA,OAAA0O,GAEAib,EAAAC,EAAA5pB,EAAA,IAEAA,EAAAxH,OAAA,EACAwH,EAAA,MAAAC,EAAA0pB,GACA3pB,EAAA,GAAA0oB,KAAAiB,IAIA3pB,EAAAxH,OAAA,EACAwH,EAAAhF,MAAA0T,EAAAzO,EAAA,KACAD,EAAA,GAAA0oB,KAAA,GAIAtT,GAAAvhB,GAGA,mBAAAc,GACAA,EAAAd,GAaA,SAAA2e,GAAA3e,EAAAk2B,EAAArb,EAAA/Z,GAEA,IAAAmB,EAAAjC,EAAAsL,UAAAuP,GAEAsb,GAAAD,KAA6B,SAAA3N,IAE7B,IAAAtmB,EAAAwV,YAMAzX,EAAA0H,UAAA6b,aACAlD,GAAArgB,GAAA,GAEAgT,WAAA,WACA6iB,GAAA71B,EAAA6a,EAAA0N,EAAA6N,SAAAt1B,GAIA,QAAAiM,GAAA/M,IACAqgB,GAAArgB,GAAA,IAEK,IAGL61B,GAAA71B,EAAA6a,EAAA0N,EAAA6N,SAAAt1B,MAYA,SAAAuL,GAAArM,GAEA,IAIAqF,EAAA8K,EAAA0K,EAJAwb,EAAAr2B,EAAAs2B,UACAC,EAAAv2B,EAAA2I,SAAA6tB,YACA1qB,EAAAW,GAAAzM,GACAgM,EAAAhM,EAAA0H,UAGA,GAAAsE,EAAAM,OAAAN,EAAAyqB,aAAA,CAEA,IAAApxB,EAAA,EAAA8K,EAAAkmB,EAAA1xB,OAAkCU,EAAA8K,EAAQ9K,IAC1CwV,EAAAwb,EAAAhxB,GAAArD,IAGAhE,EAAA+R,EAAA/P,EAAAe,OAAA,UAAA8Z,IACAlQ,YAAA4rB,GAAAlxB,EAAA,EAAAA,EAAA,MAIA,IAAAA,EAAA,EAAA8K,EAAArE,EAAAnH,OAA+BU,EAAA8K,EAAQ9K,IACvCwV,EAAA/O,EAAAzG,GAAArD,IAEAhE,EAAA+R,EAAA/P,EAAAe,OAAA,UAAA8Z,IACAhS,SAAA0tB,GAAAlxB,EAAA,EAAAA,EAAA,MAIArF,EAAAs2B,UAAAxqB,EAMA,SAAAopB,GAAAl1B,EAAAkW,GAGA,IAEAwgB,EASAl3B,EAAAyb,EAXAnZ,EAAA9B,EAAAsL,UAAA4K,GACAygB,EAAAp4B,EAAAwG,IAAAjB,MAAAhC,EAAA80B,eAGAD,IACAD,EAAAC,EAAA11B,KAAAjB,EAAAuG,UAAAvG,EAAAkW,EACA2C,EAAA7Y,EAAAkW,KAQA,IAFA,IAAA4V,EAAAvtB,EAAAwG,IAAA7C,KAAA4B,MAAAhC,EAAA4U,MAAA,QAEArR,EAAA,EAAA8K,EAAAnQ,EAAAe,OAAA4D,OAA6CU,EAAA8K,EAAQ9K,KACrD7F,EAAAQ,EAAAe,OAAAsE,IAEAuX,aACApd,EAAAod,eAGApd,EAAAod,WAAA1G,KAAAygB,IACA1b,EAAA0b,EACAD,EAAArxB,GACAqU,EAAA1Z,EAAAqF,EAAA6Q,EAAA,QAEA1W,EAAAod,WAAA1G,GAAA4V,EACAA,EAAA7Q,GACAA,GAYA,SAAA/M,GAAAlO,GAEA,GAAAA,EAAA0H,UAAAuG,aAAAjO,EAAAsgB,YAAA,CAMA,IAAAuW,GACAC,MAAA,IAAAlkB,KACAtC,MAAAtQ,EAAAiJ,eACAtE,OAAA3E,EAAAwmB,gBACA1iB,MAAA9F,EAAA8H,QAAA,KAAA9F,EAAAkM,WACArK,OAAAmpB,GAAAhrB,EAAA4hB,iBACA9hB,QAAA9B,EAAAwM,IAAAxK,EAAAsL,UAAA,SAAArJ,EAAAoD,GACA,OACA3B,QAAAzB,EAAAgX,SACApX,OAAAmpB,GAAAhrB,EAAAmW,gBAAA9Q,QAKAwH,GAAA7M,EAAA,uCAAAA,EAAA62B,IAEA72B,EAAA+2B,YAAAF,EACA72B,EAAAg3B,oBAAA/1B,KAAAjB,EAAAuG,UAAAvG,EAAA62B,IAWA,SAAA1oB,GAAAnO,EAAAmF,EAAArE,GAEA,IAAAuE,EAAA8K,EACArQ,EAAAE,EAAAsL,UACA2rB,EAAA,SAAAjxB,GACA,GAAAA,KAAA8wB,KAAA,CAOA,IAAAI,EAAArqB,GAAA7M,EAAA,uCAAAA,EAAAgG,IACA,QAAAhI,EAAAuM,SAAA,EAAA2sB,GAAA,CAMA,IAAAC,EAAAn3B,EAAAo3B,eACA,GAAAD,EAAA,GAAAnxB,EAAA8wB,MAAA,IAAAlkB,KAAA,IAAAukB,EACAr2B,SAKA,GAAAkF,EAAAlG,WAAA6E,SAAAqB,EAAAlG,QAAA6E,OACA7D,QADA,CAoCA,GA9BAd,EAAAq3B,aAAAr5B,EAAA8H,QAAA,KAA6CE,GAI7CA,EAAAsK,QAAAvS,IACAiC,EAAAiJ,eAAAjD,EAAAsK,MACAtQ,EAAA+I,kBAAA/C,EAAAsK,OAEAtK,EAAArB,SAAA5G,IACAiC,EAAAwmB,gBAAAxgB,EAAArB,QAIAqB,EAAAlC,QAAA/F,IACAiC,EAAAkM,aACAlO,EAAAiH,KAAAe,EAAAlC,MAAA,SAAAuB,EAAApD,GACAjC,EAAAkM,UAAA/E,KAAAlF,EAAA,IAAAnC,EAAA6E,QACA,EAAA1C,EAAA,IACAA,MAMA+D,EAAAnE,SAAA9D,GACAC,EAAA8H,OAAA9F,EAAA4hB,gBAAAsJ,GAAAllB,EAAAnE,SAKAmE,EAAAlG,QACA,IAAAuF,EAAA,EAAA8K,EAAAnK,EAAAlG,QAAA6E,OAAqCU,EAAA8K,EAAQ9K,IAAA,CAC7C,IAAApD,EAAA+D,EAAAlG,QAAAuF,GAGApD,EAAAyB,UAAA3F,IACA+B,EAAAuF,GAAA4T,SAAAhX,EAAAyB,SAIAzB,EAAAJ,SAAA9D,GACAC,EAAA8H,OAAA9F,EAAAmW,gBAAA9Q,GAAA6lB,GAAAjpB,EAAAJ,SAKAgL,GAAA7M,EAAA,+BAAAA,EAAAgG,IACAlF,UAjEAA,SARAA,KA4EA,GAAAd,EAAA0H,UAAAuG,WAAA,CAKA,IAAA4oB,EAAA72B,EAAAs3B,oBAAAr2B,KAAAjB,EAAAuG,UAAAvG,EAAAi3B,GAEAJ,IAAA94B,GACAk5B,EAAAJ,QAPA/1B,IAmBA,SAAA7B,GAAA8iB,GAEA,IAAA/hB,EAAAzB,EAAAyB,SACAkW,EAAAlY,EAAAuM,QAAAwX,EAAAhS,EAAA/P,EAAA,WAEA,WAAAkW,EACAlW,EAAAkW,GACA,KAYA,SAAA1P,GAAAxG,EAAAu3B,EAAAC,EAAAC,GAUA,GARAD,EAAA,wBACAx3B,EAAA,YAAAA,EAAAyG,SAAA,UAAA+wB,EAEAC,IACAD,GAAA,gFACAC,GAGAF,EAmBAt5B,EAAAy5B,iBAAAC,KACAD,QAAAC,IAAAH,OApBA,CAEA,IAAAzyB,EAAAxG,EAAAwG,IACA7C,EAAA6C,EAAA6yB,UAAA7yB,EAAA8yB,QAMA,GAJA73B,GACA6M,GAAA7M,EAAA,cAAAA,EAAAy3B,EAAAD,IAGA,SAAAt1B,EACA41B,MAAAN,OAEA,aAAAt1B,EACA,UAAA61B,MAAAP,GAEA,mBAAAt1B,GACAA,EAAAlC,EAAAy3B,EAAAD,KAiBA,SAAA/vB,GAAAge,EAAAzjB,EAAA6J,EAAAmsB,GAEAh6B,EAAAqB,QAAAwM,GACA7N,EAAAiH,KAAA4G,EAAA,SAAAxG,EAAAsH,GACA3O,EAAAqB,QAAAsN,GACAlF,GAAAge,EAAAzjB,EAAA2K,EAAA,GAAAA,EAAA,IAGAlF,GAAAge,EAAAzjB,EAAA2K,MAOAqrB,IAAAj6B,IACAi6B,EAAAnsB,GAGA7J,EAAA6J,KAAA9N,IACA0nB,EAAAuS,GAAAh2B,EAAA6J,KAsBA,SAAAzG,GAAA8K,EAAA+nB,EAAAC,GAEA,IAAAvrB,EAEA,QAAAqD,KAAAioB,EACAA,EAAAviB,eAAA1F,KACArD,EAAAsrB,EAAAjoB,GAEAhS,EAAAsB,cAAAqN,IACA3O,EAAAsB,cAAA4Q,EAAAF,MACAE,EAAAF,OAEAhS,EAAA8H,QAAA,EAAAoK,EAAAF,GAAArD,IAEAurB,GAAA,SAAAloB,GAAA,WAAAA,GAAAhS,EAAAqB,QAAAsN,GACAuD,EAAAF,GAAArD,EAAA7B,QAGAoF,EAAAF,GAAArD,GAKA,OAAAuD,EAaA,SAAAimB,GAAAniB,EAAAoG,EAAAxV,GAEA5G,EAAAgW,GACAqU,GAAA,WAAAjO,EAAA,SAAAmO,GACAvqB,EAAAgW,GAAAmkB,OACAvzB,EAAA2jB,KAEAF,GAAA,cAAAjO,EAAA,SAAAmO,GACA,KAAAA,EAAA6P,QACA7P,EAAA8P,iBACAzzB,EAAA2jB,MAGAF,GAAA,4BAEA,WAcA,SAAA1gB,GAAAd,EAAAyxB,EAAA1zB,EAAAgiB,GAEAhiB,GAEAiC,EAAAyxB,GAAAnxB,MACAvC,KACAgiB,UAoBA,SAAA/Z,GAAA7M,EAAAu4B,EAAAC,EAAA3lB,GAEA,IAAA4S,KAQA,GANA8S,IACA9S,EAAAznB,EAAAwM,IAAAxK,EAAAu4B,GAAAztB,QAAA2tB,UAAA,SAAA9rB,EAAAtH,GACA,OAAAsH,EAAA/H,GAAAqO,MAAAjT,EAAAuG,UAAAsM,MAIA,OAAA2lB,EAAA,CACA,IAAAjQ,EAAAvqB,EAAA06B,MAAAF,EAAA,OAEAx6B,EAAAgC,EAAAiG,QAAA0yB,QAAApQ,EAAA1V,GAEA4S,EAAAte,KAAAohB,EAAAqQ,QAGA,OAAAnT,EAIA,SAAA8G,GAAAvsB,GAEA,IACAsQ,EAAAtQ,EAAAiJ,eACAsH,EAAAvQ,EAAAogB,eACA1b,EAAA1E,EAAAwmB,gBAGAlW,GAAAC,IAEAD,EAAAC,EAAA7L,GAIA4L,KAAA5L,IAEA,IAAAA,GAAA4L,EAAA,KAEAA,EAAA,GAGAtQ,EAAAiJ,eAAAqH,EAIA,SAAAsO,GAAA5e,EAAAkC,GAEA,IAAA22B,EAAA74B,EAAA64B,SACAC,EAAAv6B,EAAAwG,IAAA8zB,SAAA32B,GAEA,OAAAlE,EAAAsB,cAAAu5B,MAAA32B,GAGA42B,EAAAD,EAAA32B,KAAA42B,EAAAj6B,EAEA,iBAAAg6B,GAGAC,EAAAD,IAIAC,EAAAj6B,EAYA,SAAAkO,GAAA/M,GAEA,OAAAA,EAAA0H,UAAAsY,YACA,MAEAhgB,EAAAwJ,MAAAxJ,EAAA6lB,YACA,OAEA,MA0CA,IAAAkT,MASAC,GAAAC,MAAAC,UAsHA96B,EAAA,SAAA+6B,EAAAp6B,GAEA,KAAAN,gBAAAL,GACA,WAAAA,EAAA+6B,EAAAp6B,GAGA,IAAAiB,KACAo5B,EAAA,SAAApoB,GACA,IAAApF,EAvGA,SAAAytB,GAEA,IAAAnjB,EAAAojB,EACAt5B,EAAAzB,EAAAyB,SACAu5B,EAAAv7B,EAAAwM,IAAAxK,EAAA,SAAAyK,EAAApF,GACA,OAAAoF,EAAAxE,SAGA,IAAAozB,EACA,SAEA,GAAAA,EAAApzB,QAAAozB,EAAAx0B,KAEA,OAAAw0B,GAEA,GAAAA,EAAAl3B,UAAA,UAAAk3B,EAAAl3B,SAAAC,cAGA,YADA8T,EAAAlY,EAAAuM,QAAA8uB,EAAAE,KACAv5B,EAAAkW,IAAA,KAEA,GAAAmjB,GAAA,mBAAAA,EAAAr5B,SACA,OAAAq5B,EAAAr5B,WAAAL,UAEA,iBAAA05B,EAEAC,EAAAt7B,EAAAq7B,GAEAA,aAAAr7B,IAEAs7B,EAAAD,GAGA,GAAAC,EACA,OAAAA,EAAA9uB,IAAA,SAAAnF,GAEA,YADA6Q,EAAAlY,EAAAuM,QAAA9L,KAAA86B,IACAv5B,EAAAkW,GAAA,OACIvW,UAmEJ65B,CAAAxoB,GACApF,IACA5L,IAAAqe,OAAAzS,KAIA,GAAA5N,EAAAqB,QAAA85B,GACA,QAAA9zB,EAAA,EAAA8K,EAAAgpB,EAAAx0B,OAAsCU,EAAA8K,EAAQ9K,IAC9C+zB,EAAAD,EAAA9zB,SAIA+zB,EAAAD,GAIA16B,KAAA06B,QAAAvyB,EAAA5G,GAGAjB,GACAf,EAAAwrB,MAAA/qB,KAAAM,GAIAN,KAAAg7B,UACA36B,KAAA,KACAge,KAAA,KACA4c,KAAA,MAGAt7B,EAAA0H,OAAArH,UAAAs6B,KAGAx6B,EAAAo7B,IAAAv7B,EAIAJ,EAAA8H,OAAA1H,EAAA86B,WACAU,IAAA,WAEA,WAAAn7B,KAAAo7B,SAIAxb,OAAA2a,GAAA3a,OAGA8a,WAGAU,MAAA,WAEA,OAAAp7B,KAAAiB,UAAAiF,QAIAM,KAAA,SAAAL,GAEA,QAAAS,EAAA,EAAA8K,EAAA1R,KAAAkG,OAAmCU,EAAA8K,EAAO9K,IAC1CT,EAAA3D,KAAAxC,UAAA4G,KAAA5G,MAGA,OAAAA,MAIA6L,GAAA,SAAA4L,GAEA,IAAA4jB,EAAAr7B,KAAA06B,QAEA,OAAAW,EAAAn1B,OAAAuR,EACA,IAAA9X,EAAA07B,EAAA5jB,GAAAzX,KAAAyX,IACA,MAIAnK,OAAA,SAAAnH,GAEA,IAAAgH,KAEA,GAAAotB,GAAAjtB,OACAH,EAAAotB,GAAAjtB,OAAA9K,KAAAxC,KAAAmG,EAAAnG,WAIA,QAAA4G,EAAA,EAAA8K,EAAA1R,KAAAkG,OAAoCU,EAAA8K,EAAQ9K,IAC5CT,EAAA3D,KAAAxC,UAAA4G,KAAA5G,OACAmN,EAAAzE,KAAA1I,KAAA4G,IAKA,WAAAjH,EAAAK,KAAA06B,QAAAvtB,IAIAlM,QAAA,WAEA,IAAAkM,KACA,WAAAxN,EAAAK,KAAA06B,QAAAvtB,EAAAyS,OAAApL,MAAArH,EAAAnN,KAAAkB,aAIAiL,KAAAouB,GAAApuB,KAGAwG,QAAA4nB,GAAA5nB,SAAA,SAAA6Z,EAAA3a,GAEA,QAAAjL,EAAAiL,GAAA,EAAAH,EAAA1R,KAAAkG,OAA8CU,EAAA8K,EAAQ9K,IACtD,GAAA5G,KAAA4G,KAAA4lB,EACA,OAAA5lB,EAGA,UAGA00B,SAAA,SAAAr6B,EAAAwC,EAAA0C,EAAAo1B,GACA,IACAvU,EACApgB,EAAA8K,EAAAS,EAAAwI,EAEAta,EAAAm7B,EAAAC,EAHAtuB,KAEAutB,EAAA16B,KAAA06B,QAEAM,EAAAh7B,KAAAg7B,SAUA,IAPA,iBAAA/5B,IACAs6B,EAAAp1B,EACAA,EAAA1C,EACAA,EAAAxC,EACAA,GAAA,GAGA2F,EAAA,EAAA8K,EAAAgpB,EAAAx0B,OAAkCU,EAAA8K,EAAQ9K,IAAA,CAC1C,IAAA80B,EAAA,IAAA/7B,EAAA+6B,EAAA9zB,IAEA,aAAAnD,GACAujB,EAAA7gB,EAAA3D,KAAAk5B,EAAAhB,EAAA9zB,SAEAtH,GACA6N,EAAAzE,KAAAse,QAGA,eAAAvjB,GAAA,SAAAA,GAEAujB,EAAA7gB,EAAA3D,KAAAk5B,EAAAhB,EAAA9zB,GAAA5G,KAAA4G,SAEAtH,GACA6N,EAAAzE,KAAAse,QAGA,cAAAvjB,GAAA,gBAAAA,GAAA,QAAAA,GAAA,SAAAA,EASA,IANA+3B,EAAAx7B,KAAA4G,GAEA,gBAAAnD,IACApD,EAAAs7B,GAAAjB,EAAA9zB,GAAAo0B,EAAAC,OAGA9oB,EAAA,EAAAwI,EAAA6gB,EAAAt1B,OAAkCiM,EAAAwI,EAAQxI,IAC1CspB,EAAAD,EAAArpB,IAGA6U,EADA,SAAAvjB,EACA0C,EAAA3D,KAAAk5B,EAAAhB,EAAA9zB,GAAA60B,EAAA16B,IAAA06B,EAAAp4B,OAAAuD,EAAAuL,GAGAhM,EAAA3D,KAAAk5B,EAAAhB,EAAA9zB,GAAA60B,EAAA70B,EAAAuL,EAAA9R,MAGAf,GACA6N,EAAAzE,KAAAse,GAMA,GAAA7Z,EAAAjH,QAAAq1B,EAAA,CACA,IAAAp7B,EAAA,IAAAR,EAAA+6B,EAAAz5B,EAAAkM,EAAAyS,OAAApL,SAAArH,MACAyuB,EAAAz7B,EAAA66B,SAIA,OAHAY,EAAAv7B,KAAA26B,EAAA36B,KACAu7B,EAAAvd,KAAA2c,EAAA3c,KACAud,EAAAX,KAAAD,EAAAC,KACA96B,EAEA,OAAAH,MAIA67B,YAAAtB,GAAAsB,aAAA,SAAArP,EAAA3a,GAGA,OAAA7R,KAAA2S,QAAA6B,MAAAxU,KAAAkB,QAAA84B,UAAA3lB,YAIAnO,OAAA,EAGA6F,IAAA,SAAA5F,GAEA,IAAAgH,KAEA,GAAAotB,GAAAxuB,IACAoB,EAAAotB,GAAAxuB,IAAAvJ,KAAAxC,KAAAmG,EAAAnG,WAIA,QAAA4G,EAAA,EAAA8K,EAAA1R,KAAAkG,OAAoCU,EAAA8K,EAAQ9K,IAC5CuG,EAAAzE,KAAAvC,EAAA3D,KAAAxC,UAAA4G,OAIA,WAAAjH,EAAAK,KAAA06B,QAAAvtB,IAIA2uB,MAAA,SAAAvqB,GAEA,OAAAvR,KAAA+L,IAAA,SAAAC,GACA,OAAAA,EAAAuF,MAIAwqB,IAAAxB,GAAAwB,IAGArzB,KAAA6xB,GAAA7xB,KAIAszB,OAAAzB,GAAAyB,QAAA,SAAA71B,EAAA0O,GAEA,OAAAgC,EAAA7W,KAAAmG,EAAA0O,EAAA,EAAA7U,KAAAkG,OAAA,IAIA+1B,YAAA1B,GAAA0B,aAAA,SAAA91B,EAAA0O,GAEA,OAAAgC,EAAA7W,KAAAmG,EAAA0O,EAAA7U,KAAAkG,OAAA,UAIA8zB,QAAAO,GAAAP,QAIAgB,SAAA,KAGAkB,MAAA3B,GAAA2B,MAGA7vB,MAAA,WACA,WAAA1M,EAAAK,KAAA06B,QAAA16B,OAIAqN,KAAAktB,GAAAltB,KAGAnF,OAAAqyB,GAAAryB,OAGAhH,QAAA,WAEA,OAAAq5B,GAAAluB,MAAA7J,KAAAxC,OAIAm8B,IAAA,WAEA,OAAA58B,EAAAS,OAIAo8B,SAAA,WAEA,OAAA78B,EAAAS,OAIAimB,OAAA,WAEA,WAAAtmB,EAAAK,KAAA06B,QAAAvyB,EAAAnI,QAIAq8B,QAAA9B,GAAA8B,UAIA18B,EAAA0H,OAAA,SAAAi1B,EAAA9P,EAAAlmB,GAGA,GAAAA,EAAAJ,QAAAsmB,iBAAA7sB,GAAA6sB,EAAA+P,cAAA,CAIA,IACA31B,EAAA8K,EAEA8qB,EACAC,EAAA,SAAAH,EAAAn2B,EAAAu2B,GACA,kBACA,IAAA1V,EAAA7gB,EAAAqO,MAAA8nB,EAAAjoB,WAIA,OADA1U,EAAA0H,OAAA2f,IAAA0V,EAAAC,WACA3V,IAIA,IAAApgB,EAAA,EAAA8K,EAAApL,EAAAJ,OAA6BU,EAAA8K,EAAQ9K,IACrC41B,EAAAl2B,EAAAM,GAGA4lB,EAAAgQ,EAAApvB,MAAA,mBAAAovB,EAAAtuB,IACAuuB,EAAAH,EAAAE,EAAAtuB,IAAAsuB,GACAj9B,EAAAsB,cAAA27B,EAAAtuB,QAEAsuB,EAAAtuB,IAEAse,EAAAgQ,EAAApvB,MAAAmvB,cAAA,EAGA58B,EAAA0H,OAAAi1B,EAAA9P,EAAAgQ,EAAApvB,MAAAovB,EAAAI,WAsCAj9B,EAAAk9B,SAAAj9B,EAAA,SAAAwN,EAAAc,GAEA,GAAA3O,EAAAqB,QAAAwM,GACA,QAAA+E,EAAA,EAAAwI,EAAAvN,EAAAlH,OAAmCiM,EAAAwI,EAAQxI,IAC3CxS,EAAAk9B,SAAAzvB,EAAA+E,GAAAjE,OAFA,CAOA,IACAtH,EAAA8K,EAGAgB,EAAAoqB,EAFAC,EAAA3vB,EAAAsS,MAAA,KACA8c,EAAAlC,GAGA1uB,EAAA,SAAArI,EAAA6J,GACA,QAAAxG,EAAA,EAAA8K,EAAAnO,EAAA2C,OAAkCU,EAAA8K,EAAQ9K,IAC1C,GAAArD,EAAAqD,GAAAwG,SACA,OAAA7J,EAAAqD,GAGA,aAGA,IAAAA,EAAA,EAAA8K,EAAAqrB,EAAA72B,OAA8BU,EAAA8K,EAAQ9K,IAAA,CACtCk2B,GAAA,IAAAC,EAAAn2B,GAAA+L,QAAA,MACAD,EAAAoqB,EACAC,EAAAn2B,GAAAiK,QAAA,SACAksB,EAAAn2B,GAEA,IAAArD,EAAAqI,EAAA4wB,EAAA9pB,GACAnP,IACAA,GACA6J,KAAAsF,EACAxE,OACAyuB,aACAC,YAEAJ,EAAA9zB,KAAAnF,IAGAqD,IAAA8K,EAAA,EACAnO,EAAA2K,MAGAsuB,EAAAM,EACAv5B,EAAAo5B,UACAp5B,EAAAq5B,WAMAj9B,EAAAq9B,eAAAn9B,EAAA,SAAAo9B,EAAAC,EAAAhvB,GACAvO,EAAAk9B,SAAAI,EAAA/uB,GAEAvO,EAAAk9B,SAAAK,EAAA,WACA,IAAAlW,EAAA9Y,EAAAsG,MAAAxU,KAAAqU,WAEA,OAAA2S,IAAAhnB,KAEAA,KAEAgnB,aAAArnB,EAGAqnB,EAAA9gB,OACA3G,EAAAqB,QAAAomB,EAAA,IACA,IAAArnB,EAAAqnB,EAAA0T,QAAA1T,EAAA,IACAA,EAAA,GACA1nB,EAIA0nB,KAiDApnB,EAAA,oBAAAo7B,GAEA,OAAAA,EACA,IAAAr7B,EAtCA,SAAAq7B,EAAA7tB,GAGA,oBAAA6tB,EACA,OAAA7tB,EAAA6tB,IAIA,IAAAh3B,EAAAzE,EAAAwM,IAAAoB,EAAA,SAAAnB,EAAApF,GACA,OAAAoF,EAAAxE,SAGA,OAAAjI,EAAAyE,GACAsJ,OAAA0tB,GACAjvB,IAAA,SAAAnF,GAEA,IAAA6Q,EAAAlY,EAAAuM,QAAA9L,KAAAgE,GACA,OAAAmJ,EAAAsK,KAEAvW,UAmBAi8B,CAAAnC,EAAAh7B,KAAA06B,UACA16B,OAIAJ,EAAA,mBAAAo7B,GACA,IAAAF,EAAA96B,KAAA86B,OAAAE,GACAK,EAAAP,EAAAJ,QAGA,OAAAW,EAAAn1B,OACA,IAAAvG,EAAA07B,EAAA,IACAP,IAIAj7B,EAAA,+CACA,OAAAG,KAAAs7B,SAAA,iBAAAD,GACA,OAAAA,EAAA7zB,QACG,KAIH3H,EAAA,8CACA,OAAAG,KAAAs7B,SAAA,iBAAAD,GACA,OAAAA,EAAAvsB,QACG,KAIHjP,EAAA,kDACA,OAAAG,KAAAs7B,SAAA,iBAAAD,GACA,OAAAA,EAAA5zB,QACG,KAIH5H,EAAA,kDACA,OAAAG,KAAAs7B,SAAA,iBAAAD,GACA,OAAAA,EAAA1zB,QACG,KAIH9H,EAAA,yDACA,OAAAG,KAAAs7B,SAAA,iBAAAD,GACA,OAAAA,EAAAzX,eACG,KAQHhkB,EAAA,kBAAAw9B,GACA,OAAAp9B,KAAAs7B,SAAA,iBAAA/5B,GACA,SAAA67B,EACApc,GAAAzf,IAGA,iBAAA67B,IACAA,EAAA,cAAAA,GAKAta,GAAAvhB,GAAA,IAAA67B,QA0BAx9B,EAAA,kBAAAuvB,GACA,OAAAA,IAAA7vB,EACAU,KAAA6E,KAAAw4B,OAAAx4B,KAIA7E,KAAAs7B,SAAA,iBAAA/5B,GACA2tB,GAAA3tB,EAAA4tB,OAuBAvvB,EAAA,uBAAAuvB,GACA,OAAAnvB,KAAA06B,QAAAx0B,OACA,OAAA5G,EAGA,IACAiC,EAAAvB,KAAA06B,QAAA,GACA7oB,EAAAtQ,EAAAiJ,eACAvE,EAAA1E,EAAA0H,UAAAyb,UAAAnjB,EAAAwmB,iBAAA,EACAgH,EAAAxtB,EAAAkgB,mBACA8L,GAAA,IAAAtnB,EAEA,OACApB,KAAA0oB,EAAA,EAAAjX,KAAA+Y,MAAAxd,EAAA5L,GACA+oB,MAAAzB,EAAA,EAAAjX,KAAAkX,KAAAuB,EAAA9oB,GACA4L,QACAC,IAAAvQ,EAAAogB,eACAzb,OAAAD,EACA0iB,aAAApnB,EAAA+gB,iBACAgb,eAAAvO,EACAwO,WAAA,QAAAjvB,GAAA/M,MAgBA3B,EAAA,sBAAAqG,GAIA,OAAAA,IAAA3G,EACA,IAAAU,KAAA06B,QAAAx0B,OACAlG,KAAA06B,QAAA,GAAA3S,gBACAzoB,EAIAU,KAAAs7B,SAAA,iBAAA/5B,GACAssB,GAAAtsB,EAAA0E,OAMA,IAAAu3B,GAAA,SAAAj8B,EAAAwhB,EAAA1gB,GAEA,GAAAA,EAAA,CACA,IAAAlC,EAAA,IAAAR,EAAA4B,GAEApB,EAAAs9B,IAAA,kBACAp7B,EAAAlC,EAAA4K,KAAAI,UAIA,UAAAmD,GAAA/M,GACAuhB,GAAAvhB,EAAAwhB,OAEA,CACAnB,GAAArgB,GAAA,GAGA,IAAAulB,EAAAvlB,EAAAklB,MACAK,GAAA,IAAAA,EAAAG,YACAH,EAAA4W,QAIArX,GAAA9kB,KAAA,SAAA4J,GACAsS,EAAAlc,GAGA,IADA,IAAAjB,EAAAooB,GAAAnnB,EAAA4J,GACAvE,EAAA,EAAA8K,EAAApR,EAAA4F,OAAoCU,EAAA8K,EAAQ9K,IAC5CuI,EAAA5N,EAAAjB,EAAAsG,IAGAkc,GAAAvhB,EAAAwhB,GACAnB,GAAArgB,GAAA,OAaA3B,EAAA,yBACA,IAAAy7B,EAAAr7B,KAAA06B,QAEA,GAAAW,EAAAn1B,OAAA,EACA,OAAAm1B,EAAA,GAAAlwB,OAUAvL,EAAA,2BACA,IAAAy7B,EAAAr7B,KAAA06B,QAEA,GAAAW,EAAAn1B,OAAA,EACA,OAAAm1B,EAAA,GAAAnU,YAgBAtnB,EAAA,yBAAAyC,EAAAs7B,GACA,OAAA39B,KAAAs7B,SAAA,iBAAA/5B,GACAi8B,GAAAj8B,GAAA,IAAAo8B,EAAAt7B,OAiBAzC,EAAA,sBAAAqL,GACA,IAAAowB,EAAAr7B,KAAA06B,QAEA,OAAAzvB,IAAA3L,EAEA,IAAA+7B,EAAAn1B,OACA5G,GAEA+7B,IAAA,IAEAtwB,KACAxL,EAAAsB,cAAAw6B,EAAAtwB,MACAswB,EAAAtwB,KAAAE,IACAowB,EAAAtwB,KACAswB,EAAAjU,YAIApnB,KAAAs7B,SAAA,iBAAA/5B,GACAhC,EAAAsB,cAAAU,EAAAwJ,MACAxJ,EAAAwJ,KAAAE,MAGA1J,EAAAwJ,KAAAE,MAkBArL,EAAA,6BAAAyC,EAAAs7B,GAGA,OAAA39B,KAAAs7B,SAAA,iBAAAD,GACAmC,GAAAnC,GAAA,IAAAsC,EAAAt7B,OAOA,IAAAu7B,GAAA,SAAAn6B,EAAAu3B,EAAA6C,EAAAt8B,EAAA05B,GAEA,IACA6C,EACA3wB,EAAAvG,EAAA8K,EAAAS,EAAAwI,EADAlJ,KAEAssB,SAAA/C,EAQA,IAJAA,GAAA,WAAA+C,GAAA,aAAAA,GAAA/C,EAAA90B,SAAA5G,IACA07B,OAGAp0B,EAAA,EAAA8K,EAAAspB,EAAA90B,OAAkCU,EAAA8K,EAAQ9K,IAM1C,IAJAuG,EAAA6tB,EAAAp0B,IAAAo0B,EAAAp0B,GAAA8Y,QAAAsb,EAAAp0B,GAAA4L,MAAA,WACAwoB,EAAAp0B,GAAA8Y,MAAA,MACAsb,EAAAp0B,IAEAuL,EAAA,EAAAwI,EAAAxN,EAAAjH,OAA4BiM,EAAAwI,EAAQxI,KACpC2rB,EAAAD,EAAA,iBAAA1wB,EAAAgF,GAAA5S,EAAAsf,KAAA1R,EAAAgF,IAAAhF,EAAAgF,MAEA2rB,EAAA53B,SACAuL,IAAAmO,OAAAke,IAMA,IAAAx3B,EAAA5G,EAAAs7B,SAAAv3B,GACA,GAAA6C,EAAAJ,OACA,IAAAU,EAAA,EAAA8K,EAAApL,EAAAJ,OAA8BU,EAAA8K,EAAQ9K,IACtC6K,EAAAnL,EAAAM,GAAArF,EAAA05B,EAAAxpB,GAIA,OAAAtJ,EAAAsJ,IAIAusB,GAAA,SAAA/C,GAYA,OAVAA,IACAA,MAKAA,EAAA3tB,QAAA2tB,EAAA73B,SAAA9D,IACA27B,EAAA73B,OAAA63B,EAAA3tB,QAGA/N,EAAA8H,QACAjE,OAAA,OACAiC,MAAA,UACAR,KAAA,OACGo2B,IAIHgD,GAAA,SAAAC,GAGA,QAAAt3B,EAAA,EAAA8K,EAAAwsB,EAAAh4B,OAAkCU,EAAA8K,EAAQ9K,IAC1C,GAAAs3B,EAAAt3B,GAAAV,OAAA,EAQA,OALAg4B,EAAA,GAAAA,EAAAt3B,GACAs3B,EAAA,GAAAh4B,OAAA,EACAg4B,EAAAh4B,OAAA,EACAg4B,EAAAxD,SAAAwD,EAAAxD,QAAA9zB,IAEAs3B,EAMA,OADAA,EAAAh4B,OAAA,EACAg4B,GAIAvC,GAAA,SAAAp6B,EAAA05B,GAEA,IACAtwB,EAAAwC,KACAgxB,EAAA58B,EAAA8N,UACAoc,EAAAlqB,EAAA+N,gBAGAlM,EAAA63B,EAAA73B,OACAiC,EAAA41B,EAAA51B,MACAR,EAAAo2B,EAAAp2B,KAEA,UAAAyJ,GAAA/M,GAKA,kBAAA6B,KAEAwO,EAAA,EAAA6Z,EAAAvlB,QAEA,cAAArB,EAIA,IAAA+B,EAAArF,EAAAiJ,eAAAkH,EAAAnQ,EAAAogB,eAAiE/a,EAAA8K,EAAQ9K,IACzEuG,EAAAzE,KAAAy1B,EAAAv3B,SAGA,cAAAvB,GAAA,WAAAA,GACA,WAAAjC,EACA+J,EAAAse,EAAApf,aAEA,cAAAjJ,EACA+J,EAAAgxB,EAAA9xB,aAEA,cAAAjJ,EAAA,CAIA,IAFA,IAAAg7B,KAEAx3B,EAAA,EAAA8K,EAAAysB,EAAAj4B,OAA+CU,EAAA8K,EAAQ9K,IACvDw3B,EAAAD,EAAAv3B,IAAA,KAGAuG,EAAA5N,EAAAwM,IAAA0f,EAAA,SAAAzf,GACA,OAAAoyB,EAAAnnB,eAAAjL,GAEA,KADAA,UAKA,YAAA3G,GAAA,YAAAA,EACA,IAAAuB,EAAA,EAAA8K,EAAAnQ,EAAAe,OAAA4D,OAA0CU,EAAA8K,EAAQ9K,IAClD,QAAAxD,EACA+J,EAAAzE,KAAA9B,KAKA,KAFA+D,EAAApL,EAAAuM,QAAAlF,EAAAu3B,KAEA,WAAA/6B,GACAuH,GAAA,cAAAvH,IAEA+J,EAAAzE,KAAA9B,GAMA,OAAAuG,GAkHAvN,EAAA,kBAAAo7B,EAAAC,GAEAD,IAAA17B,EACA07B,EAAA,GAEAz7B,EAAAsB,cAAAm6B,KACAC,EAAAD,EACAA,EAAA,IAGAC,EAAA+C,GAAA/C,GAEA,IAAAiD,EAAAl+B,KAAAs7B,SAAA,iBAAA/5B,GACA,OAjHA,SAAAA,EAAAy5B,EAAAC,GAEA,IAAA56B,EA8FA,OAAAu9B,GAAA,MAAA5C,EA7FA,SAAAqD,GACA,IAAAC,EAAAluB,EAAAiuB,GAEA/7B,EAAAf,EAAAe,OAKA,UAAAg8B,IAAArD,EACA,OAAAqD,GAOA,GAJAj+B,IACAA,EAAAs7B,GAAAp6B,EAAA05B,IAGA,OAAAqD,IAAA,IAAA/+B,EAAAuM,QAAAwyB,EAAAj+B,GAEA,OAAAi+B,GAEA,UAAAD,OAAA/+B,GAAA,KAAA++B,EAEA,OAAAh+B,EAIA,sBAAAg+B,EACA,OAAA9+B,EAAAwM,IAAA1L,EAAA,SAAAoX,GACA,IAAA1W,EAAAuB,EAAAmV,GACA,OAAA4mB,EAAA5mB,EAAA1W,EAAA8a,OAAA9a,EAAAiB,KAAAyV,EAAA,OAKA,GAAA4mB,EAAA36B,SAAA,CACA,IAAAyY,EAAAkiB,EAAAnf,aACAqf,EAAAF,EAAAjf,cAEA,GAAAjD,IAAA7c,EAEA,OAAAgD,EAAA6Z,IAAA7Z,EAAA6Z,GAAAna,MAAAq8B,GACAliB,MAGA,GAAAoiB,EACA,OAAAj8B,EAAAi8B,EAAAx9B,MAAAuB,EAAAi8B,EAAAx9B,KAAAiB,MAAAq8B,GACAE,EAAAx9B,QAIA,IAAAs5B,EAAA96B,EAAA8+B,GAAAG,QAAA,kBACA,OAAAnE,EAAAn0B,QACAm0B,EAAA/5B,KAAA,cAcA,oBAAA+9B,GAAA,MAAAA,EAAArrB,OAAA,IAEA,IAAAyrB,EAAAl9B,EAAAua,KAAAuiB,EAAAxtB,QAAA,UACA,GAAA4tB,IAAAn/B,EACA,OAAAm/B,EAAAhnB,KAQA,IAAAzT,EAAA+N,EACAJ,EAAApQ,EAAAe,OAAAjC,EAAA,QAMA,OAAAd,EAAAyE,GACAsJ,OAAA+wB,GACAtyB,IAAA,WACA,OAAA/L,KAAAkf,eAEAhe,WAGAK,EAAA05B,GAiBAyD,CAAAn9B,EAAAy5B,EAAAC,IACG,GAMH,OAHAiD,EAAAlD,SAAA36B,KAAA26B,EACAkD,EAAAlD,SAAAC,OAEAiD,IAGAt+B,EAAA,4BACA,OAAAI,KAAAs7B,SAAA,eAAA/5B,EAAAR,GACA,OAAAQ,EAAAe,OAAAvB,GAAAiB,KAAA1C,GACG,KAGHM,EAAA,2BACA,OAAAI,KAAAs7B,UAAA,kBAAA/5B,EAAAlB,GACA,OAAAsR,EAAApQ,EAAAe,OAAAjC,EAAA,WACG,KAGHR,EAAA,0CAAA4D,GACA,OAAAzD,KAAAs7B,SAAA,eAAA/5B,EAAAR,GACA,IAAAwuB,EAAAhuB,EAAAe,OAAAvB,GACA,iBAAA0C,EAAA8rB,EAAAnR,aAAAmR,EAAApR,YACG,KAGHte,EAAA,oDAAA0D,GACA,OAAAvD,KAAAs7B,SAAA,eAAA/5B,EAAAR,GACA8c,GAAAtc,EAAAR,EAAAwC,OAIA1D,EAAA,8CACA,OAAAG,KAAAs7B,SAAA,eAAA/5B,EAAAR,GACA,OAAAA,GACG,KAGHlB,EAAA,qCAAA8+B,GAKA,IAJA,IAAAxxB,KACAutB,EAAA16B,KAAA06B,QAGA9zB,EAAA,EAAA8K,EAAAgpB,EAAAx0B,OAAqCU,EAAA8K,EAAQ9K,IAC7C,QAAAuL,EAAA,EAAAwI,EAAA3a,KAAA4G,GAAAV,OAAsCiM,EAAAwI,EAAQxI,IAAA,CAC9C,IAAAlK,EAAAyyB,EAAA9zB,GAAAkD,QAAA4wB,EAAA9zB,GAAAtE,OAAAtC,KAAA4G,GAAAuL,IAAA0J,QACA1O,EAAAzE,OAAA,IAAAi2B,EAAA,QAAA12B,GAIA,WAAAtI,EAAA+6B,EAAAvtB,KAGAtN,EAAA,8CACA,IAAAoU,EAAAjU,KAsDA,OApDAA,KAAAs7B,SAAA,eAAA/5B,EAAAR,EAAA69B,GACA,IAEAh4B,EAAA8K,EAAAS,EAAAwI,EACAkkB,EAAAC,EAHAx+B,EAAAiB,EAAAe,OACAoW,EAAApY,EAAAS,GAOA,IAHAT,EAAA4H,OAAAnH,EAAA,GAGA6F,EAAA,EAAA8K,EAAApR,EAAA4F,OAA+BU,EAAA8K,EAAQ9K,IAUvC,GATAi4B,EAAAv+B,EAAAsG,GACAk4B,EAAAD,EAAA3gB,QAGA,OAAA2gB,EAAA78B,MACA68B,EAAA78B,IAAAkd,aAAAtY,GAIA,OAAAk4B,EACA,IAAA3sB,EAAA,EAAAwI,EAAAmkB,EAAA54B,OAAsCiM,EAAAwI,EAAQxI,IAC9C2sB,EAAA3sB,GAAAiN,cAAAre,IAAA6F,EAMA8W,GAAAnc,EAAA+N,gBAAAvO,GACA2c,GAAAnc,EAAA8N,UAAAtO,GACA2c,GAAAzJ,EAAA2qB,GAAA79B,GAAA,GAGAQ,EAAAqJ,iBAAA,GACArJ,EAAAqJ,mBAIAkjB,GAAAvsB,GAGA,IAAA0G,EAAA1G,EAAAuI,QAAA4O,EAAAmD,QACA5T,IAAA3I,UACAiC,EAAAua,KAAA7T,KAIAjI,KAAAs7B,SAAA,iBAAA/5B,GACA,QAAAqF,EAAA,EAAA8K,EAAAnQ,EAAAe,OAAA4D,OAA8CU,EAAA8K,EAAQ9K,IACtDrF,EAAAe,OAAAsE,GAAA6Q,IAAA7Q,IAIA5G,OAIAJ,EAAA,sBAAAS,GACA,IAAA0+B,EAAA/+B,KAAAs7B,SAAA,iBAAA/5B,GACA,IAAAR,EAAA6F,EAAA8K,EACAD,KAEA,IAAA7K,EAAA,EAAA8K,EAAArR,EAAA6F,OAAgCU,EAAA8K,EAAQ9K,KACxC7F,EAAAV,EAAAuG,IAEAlD,UAAA,OAAA3C,EAAA2C,SAAAQ,cACAuN,EAAA/I,KAAA0G,EAAA7N,EAAAR,GAAA,IAGA0Q,EAAA/I,KAAAyG,EAAA5N,EAAAR,IAIA,OAAA0Q,GACI,GAGJutB,EAAAh/B,KAAAK,MAAA,GAIA,OAHA2+B,EAAAjD,MACAx8B,EAAAwrB,MAAAiU,EAAAD,GAEAC,IAUAp/B,EAAA,iBAAAo7B,EAAAC,GACA,OAAAgD,GAAAj+B,KAAAK,KAAA26B,EAAAC,MAIAr7B,EAAA,wBAAAU,GACA,IAAA+6B,EAAAr7B,KAAA06B,QAEA,GAAAp6B,IAAAhB,EAEA,OAAA+7B,EAAAn1B,QAAAlG,KAAAkG,OACAm1B,EAAA,GAAA/4B,OAAAtC,KAAA,IAAA6b,OACAvc,EAIA,IAAAyB,EAAAs6B,EAAA,GAAA/4B,OAAAtC,KAAA,IAWA,OAVAe,EAAA8a,OAAAvb,EAGAf,EAAAqB,QAAAN,IAAAS,EAAAiB,IAAAiG,IACA6Q,EAAAuiB,EAAA,GAAArxB,MAAA8O,CAAAxY,EAAAS,EAAAiB,IAAAiG,IAIA4V,GAAAwd,EAAA,GAAAr7B,KAAA,WAEAA,OAIAJ,EAAA,0BACA,IAAAy7B,EAAAr7B,KAAA06B,QAEA,OAAAW,EAAAn1B,QAAAlG,KAAAkG,QACAm1B,EAAA,GAAA/4B,OAAAtC,KAAA,IAAAgC,KACA,OAIApC,EAAA,qBAAAmB,GAGAA,aAAAxB,GAAAwB,EAAAmF,SACAnF,IAAA,IAGA,IAAAV,EAAAL,KAAAs7B,SAAA,iBAAA/5B,GACA,OAAAR,EAAA2C,UAAA,OAAA3C,EAAA2C,SAAAQ,cACAkL,EAAA7N,EAAAR,GAAA,GAEAoO,EAAA5N,EAAAR,KAIA,OAAAf,KAAAe,IAAAV,EAAA,MAKA,IA6CA4+B,GAAA,SAAA9+B,EAAAsX,GAEA,IAAA4jB,EAAAl7B,EAAAu6B,QAEA,GAAAW,EAAAn1B,OAAA,CACA,IAAAnF,EAAAs6B,EAAA,GAAA/4B,OAAAmV,IAAAnY,EAAAmY,EAAAtX,EAAA,IAEAY,KAAAm+B,WACAn+B,EAAAm+B,SAAA38B,SAEAxB,EAAAo+B,aAAA7/B,EACAyB,EAAAm+B,SAAA5/B,KAMA8/B,GAAA,SAAAj/B,EAAAuE,GACA,IAAA22B,EAAAl7B,EAAAu6B,QAEA,GAAAW,EAAAn1B,QAAA/F,EAAA+F,OAAA,CACA,IAAAnF,EAAAs6B,EAAA,GAAA/4B,OAAAnC,EAAA,IAEAY,EAAAm+B,WACAn+B,EAAAo+B,aAAAz6B,EAEAA,EACA3D,EAAAm+B,SAAAG,YAAAt+B,EAAAiB,KAGAjB,EAAAm+B,SAAAtc,SAGA0c,GAAAjE,EAAA,OAMAiE,GAAA,SAAA/9B,GAEA,IAAApB,EAAA,IAAAR,EAAA4B,GAKAjB,EAAAiB,EAAAe,OAEAnC,EAAAo/B,IAAAC,4EAEAluB,EAAAhR,EAAA,YAAA4F,OAAA,IAEA/F,EAAAypB,GATA,qBASA,SAAAE,EAAAuR,GACA95B,IAAA85B,GAIAl7B,EAAAE,MAAewE,KAAA,YAAegH,GAAA,GAAArF,KAAA,SAAAiR,GAE9B,IAAA1W,EAAAT,EAAAmX,GAEA1W,EAAAo+B,cACAp+B,EAAAm+B,SAAAG,YAAAt+B,EAAAiB,SAMA7B,EAAAypB,GAxBA,kCAwBA,SAAAE,EAAAuR,EAAA5jB,EAAA8C,GACA,GAAAhZ,IAAA85B,EAQA,IAFA,IAAAt6B,EAAAkE,EAAAqV,EAAA+gB,GAEAz0B,EAAA,EAAA8K,EAAApR,EAAA4F,OAAoCU,EAAA8K,EAAQ9K,KAC5C7F,EAAAT,EAAAsG,IAEAs4B,UACAn+B,EAAAm+B,SAAAvzB,SAAA,eAAAmM,KAAA,UAAA7S,KAMA9E,EAAAypB,GA1CA,wBA0CA,SAAAE,EAAAuR,GACA,GAAA95B,IAAA85B,EAIA,QAAAz0B,EAAA,EAAA8K,EAAApR,EAAA4F,OAAoCU,EAAA8K,EAAQ9K,IAC5CtG,EAAAsG,GAAAs4B,UACAD,GAAA9+B,EAAAyG,OAgBAhH,EANA6/B,gBAMA,SAAAn/B,EAAAo/B,GACA,IAAArE,EAAAr7B,KAAA06B,QAEA,OAAAp6B,IAAAhB,EAEA+7B,EAAAn1B,QAAAlG,KAAAkG,OACAm1B,EAAA,GAAA/4B,OAAAtC,KAAA,IAAAk/B,SACA5/B,IAEA,IAAAgB,EAEAN,KAAAiC,MAAAyC,QAEA,IAAApE,EAEA2+B,GAAAj/B,MAEAq7B,EAAAn1B,QAAAlG,KAAAkG,QA5KA,SAAAm1B,EAAAt6B,EAAAT,EAAAo/B,GAGA,IAAAr/B,KACAs/B,EAAA,SAAApQ,EAAAnd,GAEA,GAAA7S,EAAAqB,QAAA2uB,iBAAAhwB,EACA,QAAAqH,EAAA,EAAA8K,EAAA6d,EAAArpB,OAAiCU,EAAA8K,EAAQ9K,IACzC+4B,EAAApQ,EAAA3oB,GAAAwL,QAOA,GAAAmd,EAAA7rB,UAAA,OAAA6rB,EAAA7rB,SAAAC,cACAtD,EAAAqI,KAAA6mB,OAEA,CAEA,IAAAqQ,EAAArgC,EAAA,kBAAA6K,SAAAgI,GACA7S,EAAA,KAAAqgC,GACAx1B,SAAAgI,GACAjB,KAAAoe,GACA,GAAA9M,QAAAnI,EAAA+gB,GAEAh7B,EAAAqI,KAAAk3B,EAAA,MAIAD,EAAAr/B,EAAAo/B,GAEA3+B,EAAAm+B,UACAn+B,EAAAm+B,SAAAtc,SAGA7hB,EAAAm+B,SAAA3/B,EAAAc,GAGAU,EAAAo+B,cACAp+B,EAAAm+B,SAAAG,YAAAt+B,EAAAiB,KAsIA69B,CAAAxE,EAAA,GAAAA,EAAA,GAAA/4B,OAAAtC,KAAA,IAAAM,EAAAo/B,GAGA1/B,QAIAJ,GACA6/B,qBACAK,wBACA,SAAAp7B,GAEA,OADA06B,GAAAp/B,MAAA,GACAA,OAIAJ,GACA6/B,qBACAK,wBACA,WAEA,OADAV,GAAAp/B,MAAA,GACAA,OAIAJ,GACA6/B,uBACAK,0BACA,WAEA,OADAb,GAAAj/B,MACAA,OAIAJ,EAAA6/B,wBAAA,WACA,IAAApE,EAAAr7B,KAAA06B,QAEA,OAAAW,EAAAn1B,QAAAlG,KAAAkG,QAEAm1B,EAAA,GAAA/4B,OAAAtC,KAAA,IAAAm/B,eAEA,IAmBA,IAAAY,GAAA,kCAKAC,GAAA,SAAAz+B,EAAA8B,EAAA48B,EAAAC,EAAA7/B,GAEA,IADA,IAAA8M,KACApM,EAAA,EAAA2Q,EAAArR,EAAA6F,OAAoCnF,EAAA2Q,EAAU3Q,IAC9CoM,EAAAzE,KAAAuS,EAAA1Z,EAAAlB,EAAAU,GAAAsC,IAEA,OAAA8J,GA0JAvN,EAAA,qBAAAo7B,EAAAC,GAEAD,IAAA17B,EACA07B,EAAA,GAEAz7B,EAAAsB,cAAAm6B,KACAC,EAAAD,EACAA,EAAA,IAGAC,EAAA+C,GAAA/C,GAEA,IAAAiD,EAAAl+B,KAAAs7B,SAAA,iBAAA/5B,GACA,OAnKA,SAAAA,EAAAy5B,EAAAC,GAEA,IACA55B,EAAAE,EAAAsL,UACAszB,EAAA7uB,EAAAjQ,EAAA,SACA2C,EAAAsN,EAAAjQ,EAAA,OAwFA,OAAAu8B,GAAA,SAAA5C,EAtFA,SAAAzzB,GACA,IAAA+2B,EAAAluB,EAAA7I,GAGA,QAAAA,EACA,OAAAqK,EAAAvQ,EAAA6E,QAIA,UAAAo4B,EACA,OAAAA,GAAA,EACAA,EACAj9B,EAAA6E,OAAAo4B,GAKA,sBAAA/2B,EAAA,CACA,IAAAlH,EAAAs7B,GAAAp6B,EAAA05B,GAEA,OAAA17B,EAAAwM,IAAA1K,EAAA,SAAAmC,EAAAiU,GACA,OAAAlQ,EACAkQ,EACAuoB,GAAAz+B,EAAAkW,EAAA,IAAApX,GACA2D,EAAAyT,IACAA,EAAA,OAKA,IAAAjF,EAAA,iBAAAjL,EACAA,EAAAiL,MAAAutB,IACA,GAEA,GAAAvtB,EACA,OAAAA,EAAA,IACA,aACA,cACA,IAAAiF,EAAAnH,SAAAkC,EAAA,OAEA,GAAAiF,EAAA,GAEA,IAAA2oB,EAAA7gC,EAAAwM,IAAA1K,EAAA,SAAAmC,EAAAoD,GACA,OAAApD,EAAAgX,SAAA5T,EAAA,OAEA,OAAAw5B,IAAAl6B,OAAAuR,IAGA,OAAAuC,EAAAzY,EAAAkW,IAEA,WAEA,OAAAlY,EAAAwM,IAAAo0B,EAAA,SAAA/yB,EAAAxG,GACA,OAAAwG,IAAAoF,EAAA,GAAA5L,EAAA,OAGA,QACA,SAKA,GAAAW,EAAA7D,UAAA6D,EAAA6X,cACA,OAAA7X,EAAA6X,cAAA/b,QAIA,IAAAg9B,EAAA9gC,EAAAyE,GACAsJ,OAAA/F,GACAwE,IAAA,WACA,OAAAxM,EAAAuM,QAAA9L,KAAAgE,KAEA9C,UAEA,GAAAm/B,EAAAn6B,SAAAqB,EAAA7D,SACA,OAAA28B,EAKA,IAAAhG,EAAA96B,EAAAgI,GAAAi3B,QAAA,qBACA,OAAAnE,EAAAn0B,QACAm0B,EAAA/5B,KAAA,kBAIAiB,EAAA05B,GAsEAqF,CAAA/+B,EAAAy5B,EAAAC,IACG,GAMH,OAHAiD,EAAAlD,SAAA3c,KAAA2c,EACAkD,EAAAlD,SAAAC,OAEAiD,IAGAr+B,EAAA,kDAAAm7B,EAAAC,GACA,OAAAj7B,KAAAs7B,SAAA,kBAAA/5B,EAAA8B,GACA,OAAA9B,EAAAsL,UAAAxJ,GAAA6T,KACG,KAGHrX,EAAA,kDAAAm7B,EAAAC,GACA,OAAAj7B,KAAAs7B,SAAA,kBAAA/5B,EAAA8B,GACA,OAAA9B,EAAAsL,UAAAxJ,GAAAid,KACG,KAGHzgB,EAAA,gDACA,OAAAG,KAAAs7B,SAAA,cAAA0E,GAAA,KAGAngC,EAAA,sDACA,OAAAG,KAAAs7B,SAAA,kBAAA/5B,EAAA8B,GACA,OAAA9B,EAAAsL,UAAAxJ,GAAAsC,OACG,KAGH9F,EAAA,gDAAA4D,GACA,OAAAzD,KAAAs7B,SAAA,uBAAA/5B,EAAA8B,EAAAuD,EAAAuL,EAAA9R,GACA,OAAAsR,EAAApQ,EAAAe,OAAAjC,EACA,WAAAoD,EAAA,4BAAAJ,IAEG,KAGHxD,EAAA,kDACA,OAAAG,KAAAs7B,SAAA,uBAAA/5B,EAAA8B,EAAAuD,EAAAuL,EAAA9R,GACA,OAAAsR,EAAApQ,EAAAe,OAAAjC,EAAA,UAAAgD,IACG,KAGHxD,EAAA,oDAAA0a,EAAAgmB,GACA,IAAAvZ,EAAAhnB,KAAAs7B,SAAA,kBAAA/5B,EAAA8B,GACA,GAAAkX,IAAAjb,EACA,OAAAiC,EAAAsL,UAAAxJ,GAAAmX,UAnHA,SAAAjZ,EAAA8B,EAAAkX,GACA,IAIA2B,EAAAtV,EAAA8K,EAAA8N,EAHAnB,EAAA9c,EAAAsL,UACArJ,EAAA6a,EAAAhb,GACA/C,EAAAiB,EAAAe,OAIA,GAAAiY,IAAAjb,EACA,OAAAkE,EAAAgX,SAKA,GAAAhX,EAAAgX,WAAAD,EACA,OAGA,GAAAA,EAAA,CAGA,IAAAiJ,EAAAjkB,EAAAuM,SAAA,EAAAwF,EAAA+M,EAAA,YAAAhb,EAAA,GAEA,IAAAuD,EAAA,EAAA8K,EAAApR,EAAA4F,OAA+BU,EAAA8K,EAAQ9K,IACvC4Y,EAAAlf,EAAAsG,GAAA5E,IACAka,EAAA5b,EAAAsG,GAAAsX,QAEAsB,GAEAA,EAAAgE,aAAAtH,EAAA7Y,GAAA6Y,EAAAsH,IAAA,WAMAjkB,EAAA+R,EAAA/P,EAAAe,OAAA,UAAAe,IAAAuf,SAIApf,EAAAgX,SAAAD,EACAgG,GAAAhf,IAAAoL,UACA4T,GAAAhf,IAAA0N,UAIA1N,EAAA8N,UAAAnJ,QACA3G,EAAAgC,EAAAuN,QAAAlD,KAAA,eAAAkM,KAAA,UAAAwC,EAAA/Y,IAGAkO,GAAAlO,GAoEAi/B,CAAAj/B,EAAA8B,EAAAkX,KAeA,OAXAA,IAAAjb,IAEAU,KAAAs7B,SAAA,kBAAA/5B,EAAA8B,GACA+K,GAAA7M,EAAA,0BAAAA,EAAA8B,EAAAkX,EAAAgmB,OAGAA,IAAAjhC,GAAAihC,IACAvgC,KAAAqB,QAAAC,UAIA0lB,IAGAnnB,EAAA,kDAAA4D,GACA,OAAAzD,KAAAs7B,SAAA,kBAAA/5B,EAAA8B,GACA,kBAAAI,EACA2W,EAAA7Y,EAAA8B,GACAA,GACG,KAGHzD,EAAA,8BACA,OAAAI,KAAAs7B,SAAA,iBAAA/5B,GACAqY,EAAArY,IACG,KAGH3B,EAAA,0BAAA6D,EAAAgU,GACA,OAAAzX,KAAA06B,QAAAx0B,OAAA,CACA,IAAAm1B,EAAAr7B,KAAA06B,QAAA,GAEA,mBAAAj3B,GAAA,WAAAA,EACA,OAAAuW,EAAAqhB,EAAA5jB,GAEA,gBAAAhU,GAAA,cAAAA,EACA,OAAA2W,EAAAihB,EAAA5jB,MAKA7X,EAAA,oBAAAo7B,EAAAC,GACA,OAAAgD,GAAAj+B,KAAAqB,QAAA25B,EAAAC,MA0FAr7B,EAAA,mBAAA6gC,EAAAC,EAAAzF,GAqBA,GAnBA17B,EAAAsB,cAAA4/B,KAEAA,EAAA1/B,MAAAzB,GAEA27B,EAAAwF,EACAA,EAAA,OAIAxF,EAAAyF,EACAA,EAAA,OAGAnhC,EAAAsB,cAAA6/B,KACAzF,EAAAyF,EACAA,EAAA,MAIA,OAAAA,OAAAphC,EACA,OAAAU,KAAAs7B,SAAA,iBAAA/5B,GACA,OA5GA,SAAAA,EAAAy5B,EAAAC,GAEA,IAIAl6B,EAEAoM,EAAAvG,EAAA8K,EAAAS,EAAAI,EAAA8nB,EANA/5B,EAAAiB,EAAAe,OACAjC,EAAAs7B,GAAAp6B,EAAA05B,GACA/e,EAAAnK,EAAAJ,EAAArR,EAAAD,EAAA,YACAsgC,EAAAphC,KAAAqgB,OAAApL,SAAA0H,IAEA7a,EAAAE,EAAAsL,UAAA3G,OAwEA,OAAA03B,GAAA,OAAA5C,EArEA,SAAAzzB,GACA,IAAAq5B,EAAA,mBAAAr5B,EAEA,UAAAA,OAAAjI,GAAAshC,EAAA,CAIA,IAFAzzB,KAEAvG,EAAA,EAAA8K,EAAArR,EAAA6F,OAAgCU,EAAA8K,EAAQ9K,IAGxC,IAFA7F,EAAAV,EAAAuG,GAEAuL,EAAA,EAAgBA,EAAA9Q,EAAY8Q,IAC5BI,GACAxR,MACAsC,OAAA8O,GAGAyuB,GAEAvG,EAAA/5B,EAAAS,GAEAwG,EAAAgL,EAAA0I,EAAA1Z,EAAAR,EAAAoR,GAAAkoB,EAAAnc,QAAAmc,EAAAnc,QAAA/L,GAAA,OACAhF,EAAAzE,KAAA6J,IAKApF,EAAAzE,KAAA6J,GAKA,OAAApF,EAIA,GAAA5N,EAAAsB,cAAA0G,GAEA,OAAAA,EAAAlE,SAAA/D,GAAAiI,EAAAxG,MAAAzB,IAAA,IAAAC,EAAAuM,QAAAvE,EAAAxG,IAAAV,IACAkH,MAKA,IAAA84B,EAAAM,EACArzB,OAAA/F,GACAwE,IAAA,SAAAnF,EAAAoF,GACA,OACAjL,IAAAiL,EAAAoT,cAAAre,IACAsC,OAAA2I,EAAAoT,cAAA/b,UAGAnC,UAEA,OAAAm/B,EAAAn6B,SAAAqB,EAAA7D,SACA28B,GAMAhG,EAAA96B,EAAAgI,GAAAi3B,QAAA,mBACAt4B,SAEAnF,IAAAs5B,EAAA/5B,KAAA,UACA+C,OAAAg3B,EAAA/5B,KAAA,mBAKAiB,EAAA05B,GA6BA4F,CAAAt/B,EAAAk/B,EAAAzC,GAAA/C,MAKA,IAEA9tB,EAAAvG,EAAA8K,EAAAS,EAAAwI,EAFAtZ,EAAArB,KAAAqB,QAAAq/B,GACArgC,EAAAL,KAAAK,KAAAogC,GAGAzgC,KAAAs7B,SAAA,iBAAA/5B,EAAAkW,GAGA,IAFAtK,KAEAvG,EAAA,EAAA8K,EAAArR,EAAAoX,GAAAvR,OAAoCU,EAAA8K,EAAQ9K,IAC5C,IAAAuL,EAAA,EAAAwI,EAAAtZ,EAAAoW,GAAAvR,OAAwCiM,EAAAwI,EAAQxI,IAChDhF,EAAAzE,MACA3H,IAAAV,EAAAoX,GAAA7Q,GACAvD,OAAAhC,EAAAoW,GAAAtF,MAIG,GAGH,IAAA+J,EAAAlc,KAAAkc,MAAA/O,EAAA8tB,GAQA,OANA17B,EAAA8H,OAAA6U,EAAA8e,UACA3c,KAAAqiB,EACArgC,KAAAogC,EACAxF,SAGA/e,IAIArc,EAAA,6CACA,OAAAG,KAAAs7B,SAAA,gBAAA/5B,EAAAR,EAAAsC,GACA,IAAA/C,EAAAiB,EAAAe,OAAAvB,GAEA,OAAAT,KAAA4d,QACA5d,EAAA4d,QAAA7a,GACA/D,GACG,KAIHM,EAAA,4BACA,OAAAI,KAAAs7B,SAAA,gBAAA/5B,EAAAR,EAAAsC,GACA,OAAA4X,EAAA1Z,EAAAR,EAAAsC,IACG,KAIHxD,EAAA,4CAAA4D,GAGA,OAFAA,EAAA,WAAAA,EAAA,4BAEAzD,KAAAs7B,SAAA,gBAAA/5B,EAAAR,EAAAsC,GACA,OAAA9B,EAAAe,OAAAvB,GAAA0C,GAAAJ,IACG,KAIHxD,EAAA,8CAAA4D,GACA,OAAAzD,KAAAs7B,SAAA,gBAAA/5B,EAAAR,EAAAsC,GACA,OAAA4X,EAAA1Z,EAAAR,EAAAsC,EAAAI,IACG,KAIH5D,EAAA,gDACA,OAAAG,KAAAs7B,SAAA,gBAAA/5B,EAAAR,EAAAsC,GACA,OACAtC,MACAsC,SACAe,cAAAgW,EAAA7Y,EAAA8B,KAEG,KAIHxD,EAAA,sDAAA0D,GACA,OAAAvD,KAAAs7B,SAAA,gBAAA/5B,EAAAR,EAAAsC,GACAwa,GAAAtc,EAAAR,EAAAwC,EAAAF,OAMAzD,EAAA,kBAAA6gC,EAAAC,EAAAzF,GACA,OAAAgD,GAAAj+B,KAAAkc,MAAAukB,EAAAC,EAAAzF,MAIAr7B,EAAA,yBAAAU,GACA,IAAA+6B,EAAAr7B,KAAA06B,QACA92B,EAAA5D,KAAA,GAEA,OAAAM,IAAAhB,EAEA+7B,EAAAn1B,QAAAtC,EAAAsC,OACA+U,EAAAogB,EAAA,GAAAz3B,EAAA,GAAA7C,IAAA6C,EAAA,GAAAP,QACA/D,GAIAod,EAAA2e,EAAA,GAAAz3B,EAAA,GAAA7C,IAAA6C,EAAA,GAAAP,OAAA/C,GACAud,GAAAwd,EAAA,GAAAz3B,EAAA,GAAA7C,IAAA,OAAA6C,EAAA,GAAAP,QAEArD,QAiCAJ,EAAA,mBAAAyF,EAAA8I,GACA,IAAAktB,EAAAr7B,KAAA06B,QAEA,OAAAr1B,IAAA/F,EAEA,IAAA+7B,EAAAn1B,OACAm1B,EAAA,GAAA5tB,UACAnO,GAIA,iBAAA+F,EAEAA,MAAA8I,IAEA9I,EAAAa,SAAA3G,EAAAqB,QAAAyE,EAAA,MAEAA,EAAAm1B,MAAAC,UAAApuB,MAAA7J,KAAA6R,YAIArU,KAAAs7B,SAAA,iBAAA/5B,GACAA,EAAAkM,UAAApI,EAAAgH,aAeAzM,EAAA,4BAAAmE,EAAAV,EAAAhB,GACA,OAAArC,KAAAs7B,SAAA,iBAAA/5B,GACA2e,GAAA3e,EAAAwC,EAAAV,EAAAhB,OAKAzC,EAAA,yBAAAkhC,GACA,IAAAA,EAAA,CACA,IAAAzF,EAAAr7B,KAAA06B,QACA5E,EAAAuF,EAAAn1B,OACAm1B,EAAA,GAAAtF,eACAz2B,EAEA,OAAAC,EAAAqB,QAAAk1B,IACKI,IAAAJ,GACLA,EAGA,OAAA91B,KAAAs7B,SAAA,iBAAA/5B,GACAA,EAAAw0B,eAAAx2B,EAAA8H,QAAA,KAA+Cy5B,OAM/ClhC,GACA,oBACA,oBACA,SAAAuO,GACA,IAAA8F,EAAAjU,KAEA,OAAAA,KAAAs7B,SAAA,iBAAA/5B,EAAAqF,GACA,IAAAyG,KAEA9N,EAAAiH,KAAAyN,EAAArN,GAAA,SAAAuL,EAAA3O,GACA6J,EAAA3E,MAAAlF,EAAA2K,MAGA5M,EAAAkM,UAAAJ,MAMAzN,EAAA,oBAAAwpB,EAAAlB,EAAA+C,EAAA8V,GACA,IAAA1F,EAAAr7B,KAAA06B,QAEA,OAAAtR,IAAA9pB,EAEA,IAAA+7B,EAAAn1B,OACAm1B,EAAA,GAAAlY,gBAAA8E,QACA3oB,EAIAU,KAAAs7B,SAAA,iBAAA/5B,GACAA,EAAA0H,UAAA+Z,SAIAE,GAAA3hB,EAAAhC,EAAA8H,UAA4C9F,EAAA4hB,iBAC5C8E,QAAAmB,EAAA,GACApmB,OAAA,OAAAklB,KACAjlB,OAAA,OAAAgoB,KACA9nB,iBAAA,OAAA49B,OACI,OAKJlhC,EACA,qBACA,oBACA,SAAAupB,EAAAlB,EAAA+C,EAAA8V,GACA,OAAA/gC,KAAAs7B,SAAA,kBAAA/5B,EAAA8B,GACA,IAAAskB,EAAApmB,EAAAmW,gBAEA,GAAA0R,IAAA9pB,EAEA,OAAAqoB,EAAAtkB,GAAA4kB,QAIA1mB,EAAA0H,UAAA+Z,UAIAzjB,EAAA8H,OAAAsgB,EAAAtkB,IACA4kB,QAAAmB,EAAA,GACApmB,OAAA,OAAAklB,KACAjlB,OAAA,OAAAgoB,KACA9nB,iBAAA,OAAA49B,OAGA7d,GAAA3hB,IAAA4hB,gBAAA,QASAvjB,EAAA,qBACA,OAAAI,KAAA06B,QAAAx0B,OACAlG,KAAA06B,QAAA,GAAApC,YACA,OAIA14B,EAAA,2BACA,OAAAI,KAAAs7B,SAAA,iBAAA/5B,GAEAA,EAAAg3B,oBAAA/1B,KAAAjB,EAAAuG,UAAAvG,UAKA3B,EAAA,4BACA,OAAAI,KAAA06B,QAAAx0B,OACAlG,KAAA06B,QAAA,GAAA9B,aACA,OAIAh5B,EAAA,0BACA,OAAAI,KAAAs7B,SAAA,iBAAA/5B,GACAkO,GAAAlO,OAqBAzB,EAAAkhC,aAAAlhC,EAAAgG,eAAA,SAAAm7B,GAMA,IAJA,IAEAC,EAAAC,EAFAC,EAAAthC,EAAAmhC,QAAAvhB,MAAA,KACA2hB,EAAAJ,EAAAvhB,MAAA,KAGA9Y,EAAA,EAAAH,EAAA46B,EAAAn7B,OAAoCU,EAAAH,EAASG,IAK7C,GAJAs6B,EAAA5wB,SAAA8wB,EAAAx6B,GAAA,OACAu6B,EAAA7wB,SAAA+wB,EAAAz6B,GAAA,OAGAs6B,IAAAC,EAKA,OAAAD,EAAAC,EAGA,UAmBArhC,EAAAwhC,YAAAxhC,EAAAyhC,cAAA,SAAAje,GAEA,IAAAvL,EAAAxY,EAAA+jB,GAAAke,IAAA,GACAC,GAAA,EAEA,OAAAne,aAAAxjB,EAAAo7B,MAIA37B,EAAAiH,KAAA1G,EAAAyB,SAAA,SAAAqF,EAAA2L,GACA,IAAAmvB,EAAAnvB,EAAA0e,YAAA1xB,EAAA,QAAAgT,EAAA0e,aAAA,QACA0Q,EAAApvB,EAAA4e,YAAA5xB,EAAA,QAAAgT,EAAA4e,aAAA,QAEA5e,EAAA/K,SAAAuQ,GAAA2pB,IAAA3pB,GAAA4pB,IAAA5pB,IACA0pB,GAAA,KAIAA,IAoBA3hC,EAAAg7B,OAAAh7B,EAAA8hC,SAAA,SAAA38B,GAEA,IAAA9E,GAAA,EAEAZ,EAAAsB,cAAAoE,KACA9E,EAAA8E,EAAA9E,IACA8E,aAGA,IAAAkI,EAAA5N,EAAAwM,IAAAjM,EAAAyB,SAAA,SAAAgR,GACA,IAAAtN,MAAA1F,EAAAgT,EAAA/K,QAAAi6B,GAAA,YACA,OAAAlvB,EAAA/K,SAIA,OAAArH,EACA,IAAAR,EAAAwN,GACAA,GAiBArN,EAAA+hC,iBAAAz6B,EAOAxH,EAAA,eAAAo7B,EAAAC,GACA,IACA56B,EAAAL,KAAAK,KAAA46B,GAAAj3B,QACA89B,EAAAviC,EAAAc,GAEA,OAAAd,KAAAqgB,OACAkiB,EAAAx0B,OAAA0tB,GAAA95B,UACA4gC,EAAAl2B,KAAAovB,GAAA95B,cAMA3B,EAAAiH,MAAA,2BAAAI,EAAA8L,GACA9S,EAAA8S,EAAA,gBACA,IAAA0B,EAAAomB,MAAAC,UAAApuB,MAAA7J,KAAA6R,WAGAD,EAAA,GAAA7U,EAAAwM,IAAAqI,EAAA,GAAAsL,MAAA,eAAAoK,GACA,OAAAA,EAAAtX,MAAA,UAEAsX,EADAA,EAAA,QAEK3d,KAAA,KAEL,IAAA+xB,EAAA3+B,EAAAS,KAAA86B,SAAA92B,SAEA,OADAk6B,EAAAxrB,GAAA8B,MAAA0pB,EAAA9pB,GACApU,SAKAJ,EAAA,qBACA,OAAAI,KAAAs7B,SAAA,iBAAA/5B,GACAkc,EAAAlc,OAKA3B,EAAA,wBACA,WAAAD,EAAAK,KAAA06B,QAAA16B,KAAA06B,WAIA96B,EAAA,oBACA,IAAAy7B,EAAAr7B,KAAA06B,QACA,OAAAW,EAAAn1B,OAAAm1B,EAAA,GAAA30B,MAAA,OAIA9G,EAAA,oBACA,OAAAI,KAAAs7B,SAAA,iBAAA/5B,GACA,OAAA+P,EAAA/P,EAAAe,OAAA,YACGrB,YAIHrB,EAAA,qBAAA2C,GAGA,OAFAA,MAAA,EAEAvC,KAAAs7B,SAAA,iBAAA/5B,GACA,IAUAmQ,EAVAqwB,EAAAxgC,EAAAqiB,cAAAlc,WACAyC,EAAA5I,EAAA2I,SACAoZ,EAAA/hB,EAAAiG,OACAqH,EAAAtN,EAAAuN,OACAH,EAAApN,EAAAkG,OACAsH,EAAAxN,EAAAoG,OACAq6B,EAAAziC,EAAA+jB,GACA2e,EAAA1iC,EAAAsP,GACAqzB,EAAA3iC,EAAAgC,EAAAqiB,eACAvjB,EAAAd,EAAAwM,IAAAxK,EAAAe,OAAA,SAAAitB,GAAyD,OAAAA,EAAAvtB,MAKzDT,EAAAsgB,aAAA,EAGAzT,GAAA7M,EAAA,+BAAAA,IAGAgB,GACA,IAAA5C,EAAA4B,GAAAF,UAAA4D,SAAA,GAMAi9B,EAAA3C,IAAA,OAAA3zB,KAAA,iBAAA2zB,IAAA,OACAhgC,EAAAC,GAAA+/B,IAAA,OAAAh+B,EAAAkH,WAGA6a,GAAA3U,EAAAjH,aACAs6B,EAAAr2B,SAAA,SAAAiX,SACAof,EAAAlsB,OAAAnH,IAGAI,GAAAuU,GAAAvU,EAAArH,aACAs6B,EAAAr2B,SAAA,SAAAiX,SACAof,EAAAlsB,OAAA/G,IAGAxN,EAAAkM,aACAlM,EAAAw0B,kBACAnoB,GAAArM,GAEAhC,EAAAc,GAAA6L,YAAA3K,EAAA+J,gBAAAa,KAAA,MAEA5M,EAAA,SAAAoP,GAAAzC,YAAA/B,EAAAuP,UAAA,IACAvP,EAAAkP,aAAA,IAAAlP,EAAAqP,cAAA,IAAArP,EAAA8O,eAIAgpB,EAAAt2B,WAAAiX,SACAqf,EAAAnsB,OAAAzV,GAGA,IAAA8hC,EAAA5/B,EAAA,kBACAy/B,EAAAG,KACAD,EAAAC,MAGA5/B,GAAAw/B,IAEAA,EAAAve,aAAAF,EAAA/hB,EAAAsiB,sBAIAme,EACAtzB,IAAA,QAAAnN,EAAA+G,eACA4D,YAAA/B,EAAAE,SAKAqH,EAAAnQ,EAAA6K,iBAAAlG,SAGA+7B,EAAAt2B,WAAAnF,KAAA,SAAAI,GACArH,EAAAS,MAAAoK,SAAA7I,EAAA6K,iBAAAxF,EAAA8K,OAMA,IAAA+F,EAAAlY,EAAAuM,QAAAvK,EAAAzB,EAAAyB,WACA,IAAAkW,GACA3X,EAAAyB,SAAA2G,OAAAuP,EAAA,OAOAlY,EAAAiH,MAAA,gCAAAI,EAAAnD,GACA7D,EAAA6D,EAAA,uBAAA0C,GACA,IAAA80B,EAAAj7B,KAAAg7B,SAAAC,KACA96B,EAAAH,KAEA,OAAAA,KAAAs7B,SAAA73B,EAAA,SAAAlC,EAAA6gC,EAAAC,EAAAC,EAAAC,GAWAp8B,EAAA3D,KACArC,EAAAsD,GACA2+B,EACA,SAAA3+B,EAAA4+B,EAAApH,EACA,SAAAx3B,EAAAw3B,EAAA37B,GAEA8iC,EAAAC,EAAAC,EAAAC,SASA3iC,EAAA,kBAAA4iC,EAAAlnB,EAAAmnB,GACA,IAAApH,EAAAr7B,KAAA06B,QAAA,GACAgI,EAAA34B,EAAAy4B,EAAAz4B,CAAAsxB,EAAAxyB,WAYA,OAVA65B,IAAApjC,IACAojC,EAAApnB,GAGAmnB,IAAAnjC,GAAAC,EAAAsB,cAAA6hC,KACAA,IAAAD,KAAAnjC,EACAojC,EAAAD,GACAC,EAAAtiC,GAGAsiC,EAAA7xB,QAAA,KAAA4xB,KAWA3iC,EAAAmhC,QAAA,UAcAnhC,EAAAyB,YAQAzB,EAAAuI,UASAvI,EAAAuI,OAAA6M,SAMA/R,kBAAA,EAOA8kB,QAAA,GASAjlB,QAAA,EAOAC,QAAA,GAYAnD,EAAAuI,OAAAuT,MAMA5Z,IAAA,KAQAkc,QAAA,KAWArC,UAcAsC,WAAA,KASAC,aAAA,KAWAwN,YAAA,KAUAxJ,YAAA,GAWA7e,IAAA,KASAkU,KAAA,GAeA3X,EAAAuI,OAAAgP,SAOAI,IAAA,KAWArC,UAAA,KAUAzH,UAAA,KAOA0a,YAAA,KAMArP,UAAA,KAMAwB,SAAA,KASAtC,aAAA,KASAM,WAAA,EAcA8G,cAAA,KAgBAhc,UAAA,KAaAuV,UAAA,KASAlT,MAAA,KAUA2S,QAAA,KAQApB,IAAA,KASAoJ,IAAA,KAOA7b,OAAA,KAaA4wB,gBAAA,KASA9Y,gBAAA,KAOA4L,MAAA,KAQAgQ,cAAA,MAOA/e,cAAA,KAQAE,iBAAA,KAMA/B,OAAA,KAOAU,MAAA,KAOA8B,OAAA,KAOAlC,WAAA,MAyBA/X,EAAAkH,UA4DAkI,OAAA,KA8BAzB,YAAA,UAuBAsoB,kBA6JAhrB,KAAA,KA0BAjC,aAAA,cAeA+D,UAAA,KAqBAG,aAAA,KA2BAiI,gBAqBA3J,gBAAA,KAoBAuO,YAAA,EAuBAtL,cAAA,EA4BA1G,UAAA,EAwBAmb,SAAA,EAoBAiC,OAAA,EAmBAN,eAAA,EAkBAD,WAAA,EAqBAI,aAAA,EAsCAld,WAAA,EAwBA+6B,iBAAA,EAsBAphB,aAAA,EAmBA1T,OAAA,EAoBA0pB,YAAA,EAoBAnR,eAAA,EAsBA4R,cAAA,EAyBAxoB,YAAA,EA4BA/F,aAAA,KAqBAN,eAAA,KA4BAQ,iBAAA,KA8BA2jB,eAAA,SAAAsV,GACA,OAAAA,EAAAvW,WAAAxb,QACA,wBACA7Q,KAAA6I,UAAA6K,aA+BAhK,iBAAA,KA8BA0jB,eAAA,KAyBAxjB,eAAA,KA0BAC,kBAAA,KA6BAL,cAAA,KA0BA2d,aAAA,KA2BA/d,eAAA,KAiCAyvB,oBAAA,SAAAt3B,GACA,IACA,OAAAshC,KAAAC,QACA,IAAAvhC,EAAAo3B,eAAAoK,eAAAC,cAAAC,QACA,cAAA1hC,EAAAkH,UAAA,IAAAy6B,SAAAC,WAGI,MAAArZ,MAuCJxgB,kBAAA,KAwBAC,cAAA,KAgCAgvB,oBAAA,SAAAh3B,EAAAjB,GACA,MACA,IAAAiB,EAAAo3B,eAAAoK,eAAAC,cAAAI,QACA,cAAA7hC,EAAAkH,UAAA,IAAAy6B,SAAAC,SACAN,KAAAQ,UAAA/iC,IAEI,MAAAwpB,MA4BJzgB,kBAAA,KAoBAsvB,eAAA,KA4CAluB,cAAA,KAoBA1B,eAAA,GAqBAwB,cAAA,EAuBA0V,UAAA,EAWA/V,YAUArB,WAQAmuB,OAsBAE,eAAA,sCAuBAC,gBAAA,wCASAmM,WAqBAC,OAAA,QAuBAC,MAAA,OAuBAC,MAAA,OAuBAC,UAAA,YAuBAnwB,YAAA,6BAgCAoZ,MAAA,8CAqBAK,WAAA,8BAsBAC,cAAA,sCAuBAC,aAAA,GA+BA/Z,SAAA,GAuBAO,WAAA,IAyCA8a,YAAA,sBAwBAhb,gBAAA,aAqBAgc,YAAA,gBAmCAvH,QAAA,UAWA0B,mBAAA,GAyBA7e,KAAA,GAsBAwI,aAAA,6BAyBA4B,QAAA3V,EAAA8H,UAAyBvH,EAAAuI,OAAA6M,SAqBzB8T,cAAA,OAmBA5B,YAAA,KAsDAhD,KAAA,SAoBAqF,YAAA,KA4BAiF,gBAAA,iBAyBA5Z,SAAA,GAwBA6uB,cAAA,GAwBAC,SAAA,GAkBA/c,cAAA,MAkBAuT,SAAA,KAWApwB,MAAA,YAGAsI,EAAAxS,EAAAkH,UAaAlH,EAAAkH,SAAA3D,QAuCA+R,UAAA,KACAgD,WAAA,EAuCAzK,WAAA,cAiCA0a,aAAA,EAiCArP,WAAA,EAiCAwB,UAAA,EAgCA8E,cAAA,KAqLA3Z,MAAA,KA0HA2S,QAAA,KAwBA6G,UAAA,KAmCA1a,OAAA,GAiCA4wB,gBAAA,GA2CA9Y,gBAAA,KA4CA4L,MAAA,GA0CAgQ,cAAA,MAoCA5gB,OAAA,KAyCAU,MAAA,KAsCA8B,OAAA,MAGAzH,EAAAxS,EAAAkH,SAAA3D,QA0BAvD,EAAAuI,OAAAD,WAKAa,WASA4Q,WAAA,KAWAtL,aAAA,KAUAyU,QAAA,KASAiC,MAAA,KASAN,cAAA,KASAD,UAAA,KASAI,YAAA,KAUAvD,YAAA,KAQA1T,MAAA,KAQA0pB,WAAA,KAUAS,aAAA,KAQAxoB,WAAA,MAQA/N,SAQAuvB,UAAA,KAQApa,UAAA,EASAlV,GAAA,KAUA8uB,QAAA,KASA7uB,GAAA,MAQAkH,WAOAukB,eAAA,MAOAzW,UAOAP,iBAAA,EASAC,gBAAA,EAOAI,WAAA,EAOAR,SAAA,GAIAlL,KAAA,KAiBAya,eAQAljB,UAOA+M,aAOAC,mBAOAwM,QAOAjP,aAOAF,YAOAsC,YAUAkU,mBASAzL,mBAcAjK,UAAA,KAUAsoB,kBASAzqB,gBAAA,KAOAc,oBAOA9D,cAAA,EAOAu7B,iBAOAC,oBAOAC,oBAOAnX,kBAOAoX,wBAQAC,qBAOAC,kBASAC,qBAQAC,qBAQAC,iBAOAr8B,SAAA,GAOAR,OAAA,KAOAC,OAAA,KAOAE,OAAA,KAOAmH,OAAA,KAOA8U,cAAA,KAUAlZ,eAAA,EAOA6E,cAAA,EAQA+R,cAUA8C,KAAA,KAOAqF,YAAA,KASAiF,gBAAA,aASAiK,eAAA,EAeA2L,eAaAC,eAOAjM,YAAA,KAOAM,aAAA,KASAxR,YAAA,KAUA4B,cAAA,KAOA3B,cAAA,EASAZ,MAAA,KAOAtb,KAAA7L,EAOA4nB,UAAA5nB,EAQA6nB,aAAA,KAQAqd,kBASA3d,cAAA,KAQAyG,eAAA,KASAxkB,YAAA,KAQAuT,MAAA,EAOAmF,UAAA,EAOA/E,YAAA,EAOAsL,gBAAA,GAOAvd,eAAA,EAWAK,eAAA,EAWAD,iBAAA,EAOAV,YAUA2Y,WAAA,EAUA/U,SAAA,EAUAsY,cAAA,KAOA1f,MAAA,KAQA+9B,qBAOAniB,eAAA,WAEA,aAAAhU,GAAAtO,MACA,EAAAA,KAAA6K,eACA7K,KAAAsP,gBAAApJ,QAOAub,iBAAA,WAEA,aAAAnT,GAAAtO,MACA,EAAAA,KAAA4K,iBACA5K,KAAAqP,UAAAnJ,QAOAyb,aAAA,WAEA,IACA1b,EAAAjG,KAAA+nB,gBACAlW,EAAA7R,KAAAwK,eACA+1B,EAAA1uB,EAAA5L,EACAmpB,EAAApvB,KAAAqP,UAAAnJ,OACAqH,EAAAvN,KAAAiJ,UACAy7B,EAAAn3B,EAAAmX,UAEA,OAAAnX,EAAAgU,aACA,IAAAmjB,IAAA,IAAAz+B,EACA4L,EAAAud,EACA9Y,KAAAquB,IAAA9yB,EAAA5L,EAAAjG,KAAA4K,mBAGA85B,GAAAnE,EAAAnR,IAAA,IAAAnpB,EACAmpB,EACAmR,GASAz4B,UAAA,KASAW,UAAA,KAMAwX,UAAA,EAKAgR,YAAA,KAKAE,YAAA,KAOA0G,aAOA+M,YAOA96B,QAAA,KAOAE,MAAA,MA4BAlK,EAAAwG,IAAA5G,GASAuvB,WASA9kB,WAQA06B,QAAA,WAYAzL,QAAA,QAwCAhU,WA6DAhiB,UA2BA43B,UACAp3B,QACAP,UACAtC,QAcAsF,YASAkiB,QAQAxd,KAAA,MAiDA6jB,SAGAwL,UACA0K,cACAtS,WA4CAntB,SAaA5B,MAyCAuX,UAuCA5X,UAmEAiC,UASA8C,QAAA,EAeArC,eAAAhG,EAAAgG,eAQArF,UAAA,EAQAskC,eAQAC,SAAAllC,EAAAmhC,SAOA1hC,EAAA8H,OAAA3H,GACAulC,aAAAvlC,EAAA0D,OACA8hC,OAAAxlC,EAAA+D,KAAAuX,OACAmqB,UAAAzlC,EAAA+D,KAAAL,OACAgiC,MAAA1lC,EAAA+D,KAAA4B,MACAggC,YAAA3lC,EAAA2F,MACAggB,WAAA3lB,EAAA0lB,QACAhf,KAAA1G,EAAA2G,SACAi/B,YAAA5lC,EAAAyK,QACAo7B,YAAA7lC,EAAAkvB,QAIArvB,EAAA8H,OAAAvH,EAAAwG,IAAA6D,SACAE,OAAA,YACA2E,UAAA,YAGAw2B,YAAA,kBACAC,kBAAA,UACAC,oBAAA,WAGAn6B,WAAA,MACAC,YAAA,OAGAkX,UAAA,mBAGAgB,SAAA,qBACA6F,QAAA,oBACAoD,MAAA,kBACAkC,QAAA,8BACAN,QAAA,oBACAiB,YAAA,wBAGAmW,SAAA,cACAC,UAAA,eACAlsB,UAAA,UACAL,aAAA,uBACAG,cAAA,wBACAP,cAAA,mBACA8e,YAAA,WAGA1O,aAAA,GAGA+E,cAAA,GAGA+B,eAAA,oBACAC,YAAA,wBACAE,iBAAA,6BACAI,YAAA,wBACAC,YAAA,wBACAC,iBAAA,6BAGAxQ,UAAA,GACAC,UAAA,GAGAwlB,YAAA,GACAC,aAAA,GACAnsB,SAAA,GACAJ,mBAAA,GACAE,oBAAA,GACAssB,gBAAA,GACAC,UAAA,GACA3hB,WAAA,GACAC,WAAA,KAIA,IAAA2hB,GAAAnmC,EAAAwG,IAAAsoB,MAEA,SAAAsX,GAAArhC,EAAAmqB,GACA,IACAmX,KACAlX,EAAAgX,GAAAG,eACAC,EAAA/vB,KAAA+Y,MAAAJ,EAAA,GAyBA,OAtBAD,GAAAC,EACAkX,EAAAv0B,EAAA,EAAAod,GAEAnqB,GAAAwhC,IACAF,EAAAv0B,EAAA,EAAAqd,EAAA,IACAvmB,KAAA,YACAy9B,EAAAz9B,KAAAsmB,EAAA,IAEAnqB,GAAAmqB,EAAA,EAAAqX,IACAF,EAAAv0B,EAAAod,GAAAC,EAAA,GAAAD,IACA9mB,OAAA,gBACAi+B,EAAAj+B,OAAA,UAGAi+B,EAAAv0B,EAAA/M,EAAAwhC,EAAA,EAAAxhC,EAAAwhC,EAAA,IACA39B,KAAA,YACAy9B,EAAAz9B,KAAAsmB,EAAA,GACAmX,EAAAj+B,OAAA,gBACAi+B,EAAAj+B,OAAA,QAGAi+B,EAAAG,MAAA,OACAH,EAIA5mC,EAAA8H,OAAA4+B,IACAM,OAAA,SAAA1hC,EAAAmqB,GACA,2BAGAwX,KAAA,SAAA3hC,EAAAmqB,GACA,0CAGAmX,QAAA,SAAAthC,EAAAmqB,GACA,OAAAkX,GAAArhC,EAAAmqB,KAGAyX,eAAA,SAAA5hC,EAAAmqB,GACA,kBAAAkX,GAAArhC,EAAAmqB,GAAA,SAGA0X,aAAA,SAAA7hC,EAAAmqB,GACA,0BAAAkX,GAAArhC,EAAAmqB,GAAA,gBAGA2X,mBAAA,SAAA9hC,EAAAmqB,GACA,eAAAkX,GAAArhC,EAAAmqB,GAAA,SAIAkX,YAGAE,eAAA,IAIA7mC,EAAA8H,QAAA,EAAAvH,EAAAwG,IAAA8zB,UACA0K,YACA1kC,EAAA,SAAAmB,EAAA84B,EAAA5iB,EAAAwX,EAAApqB,EAAAmqB,GACA,IAGA4X,EAAAC,EAmFAC,EAtFA38B,EAAA5I,EAAA2I,SACA+I,EAAA1R,EAAAsH,UAAAy6B,UACAyD,EAAAxlC,EAAAsH,UAAAmuB,MAAA0N,aACAsC,EAAA,EAEAC,EAAA,SAAAC,EAAAjY,GACA,IAAAroB,EAAA8K,EAAAy1B,EACAC,EAAA,SAAAtd,GACAoF,GAAA3tB,EAAAuoB,EAAAxpB,KAAA6uB,QAAA,IAGA,IAAAvoB,EAAA,EAAA8K,EAAAud,EAAA/oB,OAAoCU,EAAA8K,EAAQ9K,IAG5C,GAFAugC,EAAAlY,EAAAroB,GAEArH,EAAAqB,QAAAumC,GAAA,CACA,IAAAnxB,EAAAzW,EAAA,KAAA4nC,EAAAb,OAAA,aACA13B,SAAAs4B,GACAD,EAAAjxB,EAAAmxB,OAEA,CAIA,OAHAP,EAAA,KACAC,EAAA,GAEAM,GACA,eACAD,EAAApxB,OAAA,0CACA,MAEA,YACA8wB,EAAA3zB,EAAAswB,OACAsD,EAAAM,GAAAtiC,EAAA,EACA,OAAAsF,EAAAu7B,qBACA,MAEA,eACAkB,EAAA3zB,EAAAywB,UACAmD,EAAAM,GAAAtiC,EAAA,EACA,OAAAsF,EAAAu7B,qBACA,MAEA,WACAkB,EAAA3zB,EAAAwwB,MACAoD,EAAAM,GAAAtiC,EAAAmqB,EAAA,EACA,OAAA7kB,EAAAu7B,qBACA,MAEA,WACAkB,EAAA3zB,EAAAuwB,MACAqD,EAAAM,GAAAtiC,EAAAmqB,EAAA,EACA,OAAA7kB,EAAAu7B,qBACA,MAEA,QACAkB,EAAAO,EAAA,EACAN,EAAAhiC,IAAAsiC,EACAh9B,EAAAs7B,kBAAA,GAIA,OAAAmB,IAcAlP,GAbAn4B,EAAA,OACAgjB,MAAApY,EAAAq7B,YAAA,IAAAqB,EACA1Y,gBAAA5sB,EAAAyG,SACAq/B,aAAAN,EAAAI,GACAG,cAAAN,EACAO,SAAAhmC,EAAA0e,UACAhY,GAAA,IAAAwP,GAAA,iBAAA0vB,EACA5lC,EAAAyG,SAAA,IAAAm/B,EACA,OAEAh2B,KAAAy1B,GACAh4B,SAAAs4B,IAGgB/X,OAAAgY,GAAeC,GAG/BJ,OAWA,IAKAF,EAAAvnC,EAAA86B,GAAAzuB,KAAAnM,EAAAwqB,eAAA3pB,KAAA,UAEA,MAAAwpB,IAEAmd,EAAA1nC,EAAA86B,GAAAmN,QAAAvY,GAEA6X,IAAAxnC,GACAC,EAAA86B,GAAAzuB,KAAA,gBAAAk7B,EAAA,KAAAW,YAUAloC,EAAA8H,OAAAvH,EAAAwG,IAAA7C,KAAAuX,QAGA,SAAA7K,EAAA5O,GAEA,IAAAoS,EAAApS,EAAAsH,UAAAsK,SACA,OAAArC,EAAAX,EAAAwD,GAAA,MAAAA,EAAA,MAIA,SAAAxD,EAAA5O,GAKA,GAAA4O,kBAAAgE,QAAArE,EAAAwb,KAAAnb,GACA,YAEA,IAAAu3B,EAAAvzB,KAAA2uB,MAAA3yB,GACA,cAAAu3B,IAAAn3B,MAAAm3B,IAAAx3B,EAAAC,GAAA,aAIA,SAAAA,EAAA5O,GAEA,IAAAoS,EAAApS,EAAAsH,UAAAsK,SACA,OAAArC,EAAAX,EAAAwD,GAAA,aAAAA,EAAA,MAIA,SAAAxD,EAAA5O,GAEA,IAAAoS,EAAApS,EAAAsH,UAAAsK,SACA,OAAAjC,EAAAf,EAAAwD,GAAA,WAAAA,EAAA,MAIA,SAAAxD,EAAA5O,GAEA,IAAAoS,EAAApS,EAAAsH,UAAAsK,SACA,OAAAjC,EAAAf,EAAAwD,GAAA,kBAAAA,EAAA,MAIA,SAAAxD,EAAA5O,GAEA,OAAA2O,EAAAC,IAAA,iBAAAA,IAAA,IAAAA,EAAAwC,QAAA,KACA,eAcApT,EAAA8H,OAAAvH,EAAAwG,IAAA7C,KAAAL,QACA+N,KAAA,SAAA7Q,GACA,OAAA4P,EAAA5P,GACAA,EACA,iBAAAA,EACAA,EACAuQ,QAAAjB,EAAA,KACAiB,QAAAhB,EAAA,IACA,IAGA83B,OAAA,SAAArnC,GACA,OAAA4P,EAAA5P,GACAA,EACA,iBAAAA,EACAA,EAAAuQ,QAAAjB,EAAA,KACAtP,KAMA,IAAAsnC,GAAA,SAAAz3B,EAAA03B,EAAAC,EAAAC,GACA,WAAA53B,MAAA,MAAAA,GAOA03B,IACA13B,EAAAM,EAAAN,EAAA03B,IAGA13B,EAAAU,UACAi3B,IACA33B,IAAAU,QAAAi3B,EAAA,KAGAC,IACA53B,IAAAU,QAAAk3B,EAAA,MAIA,EAAA53B,IApBA63B,KA2BA,SAAA50B,GAAAy0B,GACAtoC,EAAAiH,MAGAkK,IAAA,SAAAP,GACA,OAAAy3B,GAAAz3B,EAAA03B,IAIAI,UAAA,SAAA93B,GACA,OAAAy3B,GAAAz3B,EAAA03B,EAAA53B,IAIAi4B,WAAA,SAAA/3B,GACA,OAAAy3B,GAAAz3B,EAAA03B,EAAAh4B,IAIAs4B,eAAA,SAAAh4B,GACA,OAAAy3B,GAAAz3B,EAAA03B,EAAAh4B,EAAAI,KAGA,SAAAyC,EAAAvM,GAEAzG,EAAA+D,KAAA4B,MAAAqN,EAAAm1B,EAAA,QAAA1hC,EAGAuM,EAAAF,MAAA,aACA9S,EAAA+D,KAAAL,OAAAsP,EAAAm1B,GAAAnoC,EAAA+D,KAAAL,OAAA+N,QAQA5R,EAAA8H,OAAA3H,EAAA+D,KAAA4B,OAEA+iC,WAAA,SAAAj4B,GACA,IAAAk4B,EAAAl0B,KAAA2uB,MAAA3yB,GACA,OAAAI,MAAA83B,IAAAL,IAAAK,GAIAC,WAAA,SAAAn7B,GACA,OAAA+C,EAAA/C,GACA,GACAA,EAAA0D,QACA1D,EAAA0D,QAAA,aAAAlN,cACAwJ,EAAA,IAIAo7B,aAAA,SAAAp7B,GAGA,OAAA+C,EAAA/C,GACA,GACA,iBAAAA,EACAA,EAAAxJ,cACAwJ,EAAAkf,SAEAlf,EAAAkf,WADA,IAMAmc,aAAA,SAAA9R,EAAAC,GACA,OAAAD,EAAAC,GAAA,EAAAD,EAAAC,EAAA,KAGA8R,cAAA,SAAA/R,EAAAC,GACA,OAAAD,EAAAC,EAAA,EAAAD,EAAAC,GAAA,OAMAvjB,GAAA,IAGA7T,EAAA8H,QAAA,EAAAvH,EAAAwG,IAAA8zB,UACA5H,QACApyB,EAAA,SAAAmB,EAAAqC,EAAAP,EAAA8G,GAMA5K,EAAAgC,EAAAiG,QAAAoiB,GAAA,uBAAAE,EAAAuR,EAAA3tB,EAAArM,GACA,GAAAE,IAAA85B,EAAA,CAIA,IAAAjf,EAAA/Y,EAAAoU,IAEA7T,EACAsI,YACA7I,EAAA+V,cAAA,IACAjP,EAAAw7B,SAAA,IACAx7B,EAAAy7B,WAEAx7B,SAAA,OAAA/I,EAAA+a,GACAjS,EAAAw7B,SAAA,QAAAtkC,EAAA+a,GACAjS,EAAAy7B,UACAviC,EAAA+V,mBAKAsvB,SAAA,SAAAnnC,EAAAqC,EAAAP,EAAA8G,GACA5K,EAAA,UACA6K,SAAAD,EAAA47B,iBACAjwB,OAAAlS,EAAA2a,YACAzI,OAAAvW,EAAA,WACA6K,SAAAD,EAAA67B,UAAA,IAAA3iC,EAAAiW,mBAEA1K,SAAAhL,GAGArE,EAAAgC,EAAAiG,QAAAoiB,GAAA,uBAAAE,EAAAuR,EAAA3tB,EAAArM,GACA,GAAAE,IAAA85B,EAAA,CAIA,IAAAjf,EAAA/Y,EAAAoU,IAEA7T,EACAsI,YAAA/B,EAAAw7B,SAAA,IAAAx7B,EAAAy7B,WACAx7B,SAAA,OAAA/I,EAAA+a,GACAjS,EAAAw7B,SAAA,QAAAtkC,EAAA+a,GACAjS,EAAAy7B,UACAviC,EAAA+V,eAGAxV,EACAgI,KAAA,QAAAzB,EAAA67B,WACA95B,YACA/B,EAAA07B,YAAA,IACA17B,EAAA27B,aAAA,IACA37B,EAAAwP,SAAA,IACAxP,EAAAoP,mBAAA,IACApP,EAAAsP,qBAEArP,SAAA,OAAA/I,EAAA+a,GACAjS,EAAA07B,YAAA,QAAAxkC,EAAA+a,GACAjS,EAAA27B,aACAziC,EAAAiW,yBAcA,IAAAqvB,GAAA,SAAAx4B,GACA,uBAAAA,EACAA,EAAAU,QAAA,aAAwBA,QAAA,aAAsBA,QAAA,eAC9CV,GAqFA,SAAA5J,GAAAJ,GAEA,kBACA,IAAAiO,GAAA5T,GAAAR,KAAAF,EAAAwG,IAAA7F,aAAAmf,OACA4a,MAAAC,UAAApuB,MAAA7J,KAAA6R,YAEA,OAAAvU,EAAAwG,IAAAD,SAAAF,GAAAqO,MAAAxU,KAAAoU,IAqSA,OAnWAtU,EAAA8oC,QACAC,OAAA,SAAAC,EAAAn1B,EAAAo1B,EAAAC,EAAAC,GACA,OACA9d,QAAA,SAAAhb,GACA,oBAAAA,GAAA,iBAAAA,EACA,OAAAA,EAGA,IAAA+4B,EAAA/4B,EAAA,SACAg5B,EAAAl4B,WAAAd,GAKA,GAAAI,MAAA44B,GACA,OAAAR,GAAAx4B,GAGAg5B,IAAAC,QAAAL,GACA54B,EAAAmG,KAAA+yB,IAAAF,GAEA,IAAAG,EAAAh5B,SAAAH,EAAA,IACAo5B,EAAAR,EACAp1B,GAAAxD,EAAAm5B,GAAAF,QAAAL,GAAA3rB,UAAA,GACA,GAEA,OAAA8rB,GAAAF,GAAA,IACAM,EAAAjd,WAAAxb,QACA,wBAAmBi4B,GAEnBS,GACAN,GAAA,OAKAO,KAAA,WACA,OACAre,QAAAwd,MAoCAppC,EAAA8H,OAAAvH,EAAAwG,IAAAD,UACAE,oBACA8f,gBACAvE,iBACAwF,qBACAC,qBACAmB,kBACA5b,eACAI,mBACA0M,wBACAI,0BACAI,0BACAE,mBACAH,gBACAO,iBACA3N,qBACAuF,kBACAlL,sBACAwB,oBACAqB,mBACAkF,aACAC,WACAq6B,mBA7xYA,SAAArhC,EAAAmN,GAEA,OAAAA,EAAA2J,eAAA5f,EAAAiW,EAAA2J,aAAA,MA4xYAwqB,qBAhxYA,SAAAthC,EAAAtE,EAAAyR,GAEA,OAAAhW,EAAAuM,QAAAyJ,EAAAnN,EAAA9F,OAAAwB,GAAAoa,UA+wYAjD,iBACAyB,iBACAG,sBACA9S,qBACA+O,qBACA0E,mBACAC,gBACAC,kBACAG,iBACA5B,qBACAF,eACAgE,gBACAQ,eACAS,WACA8B,aACAO,qBACA3W,mBACAE,mBACAiY,wBACA3B,qBACA0H,mBACAD,mBACAD,aACAW,yBACAza,kBACA+a,iBACAzG,sBACA2H,iBACAM,iBACA/hB,iBACA0d,mBACA+E,mBACAjJ,wBACAO,0BACA+J,iBACAnK,4BACAnD,wBACAoD,uBACApjB,iBACAgyB,sBACA9Z,4BACA+P,eACAoL,qBACAG,oBACAO,sBACAhI,kBACA3f,kBACAiV,WACA5U,eACA+oB,mBACAlX,yBACAtS,qBACA6oB,eACAhnB,gBACAC,gBACAlP,uBACAuH,UACAiB,UACA0uB,iBACAxuB,kBACAkF,mBACA0f,qBACA3N,eACA7R,iBACAgQ,oBACA3X,aACAgjC,gBAAA,eAOApqC,EAAA4G,GAAAwC,UAAA7I,EAGAA,EAAAP,IAGAA,EAAA4G,GAAAyjC,kBAAA9pC,EAAAyB,SACAhC,EAAA4G,GAAA0jC,aAAA/pC,EAAAwG,IAIA/G,EAAA4G,GAAArG,UAAA,SAAAm7B,GACA,OAAA17B,EAAAS,MAAA2I,UAAAsyB,GAAA96B,OAKAZ,EAAAiH,KAAA1G,EAAA,SAAAyR,EAAArD,GACA3O,EAAA4G,GAAArG,UAAAyR,GAAArD,IAsKA3O,EAAA4G,GAAAwC,UA95dAvJ,CAAAG,EAAAC,OAAAC,WACG+U,MAAAs1B,EAAA5qC,MAAA6qC,EAAAD,QAAA3qC,GAPH,sBC1BA,IAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;CAaA,SAAA6qC,EAAA5qC,GAEA,aAEA,iBAAA2qC,GAAA,iBAAAA,EAAAD,QASAC,EAAAD,QAAAE,EAAAvqC,SACAL,EAAA4qC,GAAA,GACA,SAAAC,GACA,IAAAA,EAAAxqC,SACA,UAAA65B,MAAA,4CAEA,OAAAl6B,EAAA6qC,IAGA7qC,EAAA4qC,GAtBA,CA0BC,oBAAAxqC,cAAAQ,KAAA,SAAAR,EAAA0qC,GAMD,aAEA,IAAAC,KAEA1qC,EAAAD,EAAAC,SAEA2qC,EAAAC,OAAAC,eAEAj+B,EAAA89B,EAAA99B,MAEAuT,EAAAuqB,EAAAvqB,OAEAlX,EAAAyhC,EAAAzhC,KAEAiK,EAAAw3B,EAAAx3B,QAEA43B,KAEAle,EAAAke,EAAAle,SAEAme,EAAAD,EAAAtzB,eAEAwzB,EAAAD,EAAAne,SAEAqe,EAAAD,EAAAjoC,KAAA6nC,QAEAM,KAEAC,EAAA,SAAApe,GAMA,yBAAAA,GAAA,iBAAAA,EAAAgI,UAIAqW,EAAA,SAAAre,GACA,aAAAA,SAAAhtB,QAMAsrC,GACArnC,MAAA,EACAF,KAAA,EACAwnC,UAAA,GAGA,SAAAC,EAAAC,EAAAC,EAAAnnC,GAGA,IAAA6C,EACAukC,GAHAD,KAAAzrC,GAGA6X,cAAA,UAGA,GADA6zB,EAAA3B,KAAAyB,EACAlnC,EACA,IAAA6C,KAAAkkC,EACA/mC,EAAA6C,KACAukC,EAAAvkC,GAAA7C,EAAA6C,IAIAskC,EAAAxJ,KAAAriB,YAAA8rB,GAAAzjC,WAAAsW,YAAAmtB,GAIA,SAAAC,EAAA5e,GACA,aAAAA,EACAA,EAAA,GAIA,iBAAAA,GAAA,mBAAAA,EACA+d,EAAAle,EAAA7pB,KAAAgqB,KAAA,gBACAA,EAQA,IAIA6e,EAAA,SAAArQ,EAAAN,GAIA,WAAA2Q,EAAAllC,GAAA0O,KAAAmmB,EAAAN,IAKA4Q,EAAA,qCAmVA,SAAAC,EAAA/e,GAMA,IAAAtmB,IAAAsmB,GAAA,WAAAA,KAAAtmB,OACAzC,EAAA2nC,EAAA5e,GAEA,OAAAoe,EAAApe,KAAAqe,EAAAre,KAIA,UAAA/oB,GAAA,IAAAyC,GACA,iBAAAA,KAAA,GAAAA,EAAA,KAAAsmB,GA/VA6e,EAAAllC,GAAAklC,EAAA5Q,WAGA+Q,OAjBA,QAmBAC,YAAAJ,EAGAnlC,OAAA,EAEAhF,QAAA,WACA,OAAAmL,EAAA7J,KAAAxC,OAKAwhC,IAAA,SAAA9wB,GAGA,aAAAA,EACArE,EAAA7J,KAAAxC,MAIA0Q,EAAA,EAAA1Q,KAAA0Q,EAAA1Q,KAAAkG,QAAAlG,KAAA0Q,IAKAg7B,UAAA,SAAAC,GAGA,IAAA3kB,EAAAqkB,EAAAtgB,MAAA/qB,KAAAyrC,cAAAE,GAMA,OAHA3kB,EAAA4kB,WAAA5rC,KAGAgnB,GAIAxgB,KAAA,SAAAnE,GACA,OAAAgpC,EAAA7kC,KAAAxG,KAAAqC,IAGA0J,IAAA,SAAA1J,GACA,OAAArC,KAAA0rC,UAAAL,EAAAt/B,IAAA/L,KAAA,SAAA6rC,EAAAjlC,GACA,OAAAvE,EAAAG,KAAAqpC,EAAAjlC,EAAAilC,OAIAx/B,MAAA,WACA,OAAArM,KAAA0rC,UAAAr/B,EAAAmI,MAAAxU,KAAAqU,aAGAy3B,MAAA,WACA,OAAA9rC,KAAA6L,GAAA,IAGAoG,KAAA,WACA,OAAAjS,KAAA6L,IAAA,IAGAA,GAAA,SAAAjF,GACA,IAAAX,EAAAjG,KAAAkG,OACAiM,GAAAvL,KAAA,EAAAX,EAAA,GACA,OAAAjG,KAAA0rC,UAAAv5B,GAAA,GAAAA,EAAAlM,GAAAjG,KAAAmS,SAGAL,IAAA,WACA,OAAA9R,KAAA4rC,YAAA5rC,KAAAyrC,eAKA/iC,OACA2E,KAAA88B,EAAA98B,KACAnF,OAAAiiC,EAAAjiC,QAGAmjC,EAAAhkC,OAAAgkC,EAAAllC,GAAAkB,OAAA,WACA,IAAAtH,EAAAqN,EAAA7J,EAAAwoC,EAAAC,EAAAtY,EACAtxB,EAAAiS,UAAA,OACAzN,EAAA,EACAV,EAAAmO,UAAAnO,OACA+lC,GAAA,EAsBA,IAnBA,kBAAA7pC,IACA6pC,EAAA7pC,EAGAA,EAAAiS,UAAAzN,OACAA,KAIA,iBAAAxE,GAAAwoC,EAAAxoC,KACAA,MAIAwE,IAAAV,IACA9D,EAAApC,KACA4G,KAGQA,EAAAV,EAAYU,IAGpB,UAAA7G,EAAAsU,UAAAzN,IAGA,IAAAwG,KAAArN,EACAwD,EAAAnB,EAAAgL,GAIAhL,KAHA2pC,EAAAhsC,EAAAqN,MAQA6+B,GAAAF,IAAAV,EAAAxqC,cAAAkrC,KACAC,EAAAxR,MAAA55B,QAAAmrC,MAEAC,GACAA,GAAA,EACAtY,EAAAnwB,GAAAi3B,MAAA55B,QAAA2C,SAGAmwB,EAAAnwB,GAAA8nC,EAAAxqC,cAAA0C,QAIAnB,EAAAgL,GAAAi+B,EAAAhkC,OAAA4kC,EAAAvY,EAAAqY,SAGKzsC,IAAAysC,IACL3pC,EAAAgL,GAAA2+B,IAOA,OAAA3pC,GAGAipC,EAAAhkC,QAGA6kC,QAAA,UAvKA,QAuKA51B,KAAA61B,UAAAt7B,QAAA,UAGAu7B,SAAA,EAEA/gC,MAAA,SAAA0tB,GACA,UAAAO,MAAAP,IAGAsT,KAAA,aAEAxrC,cAAA,SAAA2rB,GACA,IAAA8f,EAAAC,EAIA,SAAA/f,GAAA,oBAAAH,EAAA7pB,KAAAgqB,QAIA8f,EAAAlC,EAAA5d,KASA,mBADA+f,EAAA/B,EAAAhoC,KAAA8pC,EAAA,gBAAAA,EAAAb,cACAhB,EAAAjoC,KAAA+pC,KAAA7B,IAGA8B,cAAA,SAAAhgB,GAIA,IAAApf,EAEA,IAAAA,KAAAof,EACA,SAEA,UAIAigB,WAAA,SAAAxB,GACAD,EAAAC,IAGAzkC,KAAA,SAAAgmB,EAAAnqB,GACA,IAAA6D,EAAAU,EAAA,EAEA,GAAA2kC,EAAA/e,GAEA,IADAtmB,EAAAsmB,EAAAtmB,OACUU,EAAAV,IACV,IAAA7D,EAAAG,KAAAgqB,EAAA5lB,KAAA4lB,EAAA5lB,IADsBA,UAMtB,IAAAA,KAAA4lB,EACA,QAAAnqB,EAAAG,KAAAgqB,EAAA5lB,KAAA4lB,EAAA5lB,IACA,MAKA,OAAA4lB,GAIA3N,KAAA,SAAA2qB,GACA,aAAAA,EACA,IACAA,EAAA,IAAA34B,QAAAy6B,EAAA,KAIAoB,UAAA,SAAAvC,EAAAwC,GACA,IAAA3lB,EAAA2lB,MAaA,OAXA,MAAAxC,IACAoB,EAAAlB,OAAAF,IACAkB,EAAAtgB,MAAA/D,EACA,iBAAAmjB,GACAA,MAGAzhC,EAAAlG,KAAAwkB,EAAAmjB,IAIAnjB,GAGAlb,QAAA,SAAA+/B,EAAA1B,EAAAvjC,GACA,aAAAujC,GAAA,EAAAx3B,EAAAnQ,KAAA2nC,EAAA0B,EAAAjlC,IAKAmkB,MAAA,SAAA+gB,EAAAc,GAKA,IAJA,IAAA3mC,GAAA2mC,EAAA1mC,OACAiM,EAAA,EACAvL,EAAAklC,EAAA5lC,OAESiM,EAAAlM,EAASkM,IAClB25B,EAAAllC,KAAAgmC,EAAAz6B,GAKA,OAFA25B,EAAA5lC,OAAAU,EAEAklC,GAGAe,KAAA,SAAAlB,EAAAtpC,EAAAyqC,GASA,IARA,IACAC,KACAnmC,EAAA,EACAV,EAAAylC,EAAAzlC,OACA8mC,GAAAF,EAISlmC,EAAAV,EAAYU,KACrBvE,EAAAspC,EAAA/kC,QACAomC,GACAD,EAAArkC,KAAAijC,EAAA/kC,IAIA,OAAAmmC,GAIAhhC,IAAA,SAAA4/B,EAAAtpC,EAAA4qC,GACA,IAAA/mC,EAAA6Q,EACAnQ,EAAA,EACAogB,KAGA,GAAAukB,EAAAI,GAEA,IADAzlC,EAAAylC,EAAAzlC,OACUU,EAAAV,EAAYU,IAGtB,OAFAmQ,EAAA1U,EAAAspC,EAAA/kC,KAAAqmC,KAGAjmB,EAAAte,KAAAqO,QAMA,IAAAnQ,KAAA+kC,EAGA,OAFA50B,EAAA1U,EAAAspC,EAAA/kC,KAAAqmC,KAGAjmB,EAAAte,KAAAqO,GAMA,OAAA6I,EAAApL,SAAAwS,IAIAkmB,KAAA,EAIAvC,YAGA,mBAAAwC,SACA9B,EAAAllC,GAAAgnC,OAAA7R,UAAA6O,EAAAgD,OAAA7R,WAIA+P,EAAA7kC,KAAA,uEAAAkZ,MAAA,KACA,SAAA9Y,EAAAwG,GACAm9B,EAAA,WAAAn9B,EAAA,KAAAA,EAAAzJ,gBAmBA,IAAAypC;;;;;;;;;;;AAWA,SAAA5tC,GAEA,IAAAoH,EACA+jC,EACA0C,EACAC,EACAC,EACAC,EACAC,EACAvf,EACAwf,EACAC,EACAC,EAGAC,EACApuC,EACAquC,EACAC,EACAC,EACAC,EACAlB,EACAmB,EAGAhC,EAAA,eAAA/3B,KACAg6B,EAAA3uC,EAAAC,SACA2uC,EAAA,EACAC,EAAA,EACAC,EAAAC,KACAC,EAAAD,KACAE,EAAAF,KACAG,EAAA,SAAAvhC,EAAAmQ,GAIA,OAHAnQ,IAAAmQ,IACAswB,GAAA,GAEA,GAIApD,KAAavzB,eACbkzB,KACApO,EAAAoO,EAAApO,IACA4S,EAAAxE,EAAAzhC,KACAA,EAAAyhC,EAAAzhC,KACA2D,EAAA89B,EAAA99B,MAGAsG,EAAA,SAAAi8B,EAAA/C,GAGA,IAFA,IAAAjlC,EAAA,EACAX,EAAA2oC,EAAA1oC,OACSU,EAAAX,EAASW,IAClB,GAAAgoC,EAAAhoC,KAAAilC,EACA,OAAAjlC,EAGA,UAGAioC,EAAA,6HAKAC,EAAA,sBAGAC,EAAA,gCAGAC,EAAA,MAAAF,EAAA,KAAAC,EAAA,OAAAD,EAEA,gBAAAA,EAEA,2DAAAC,EAAA,OAAAD,EACA,OAEAG,EAAA,KAAAF,EAAA,wFAKAC,EAAA,eAMAE,EAAA,IAAAl/B,OAAA8+B,EAAA,SACAxD,EAAA,IAAAt7B,OAAA,IAAA8+B,EAAA,8BAAAA,EAAA,UAEAK,EAAA,IAAAn/B,OAAA,IAAA8+B,EAAA,KAAAA,EAAA,KACAM,EAAA,IAAAp/B,OAAA,IAAA8+B,EAAA,WAAAA,EAAA,IAAAA,EAAA,KAEAO,EAAA,IAAAr/B,OAAA,IAAA8+B,EAAA,iBAAAA,EAAA,YAEAQ,EAAA,IAAAt/B,OAAAi/B,GACAM,EAAA,IAAAv/B,OAAA,IAAA++B,EAAA,KAEAS,GACAC,GAAA,IAAAz/B,OAAA,MAAA++B,EAAA,KACAW,MAAA,IAAA1/B,OAAA,QAAA++B,EAAA,KACAY,IAAA,IAAA3/B,OAAA,KAAA++B,EAAA,SACAa,KAAA,IAAA5/B,OAAA,IAAAg/B,GACAa,OAAA,IAAA7/B,OAAA,IAAAi/B,GACAa,MAAA,IAAA9/B,OAAA,yDAAA8+B,EACA,+BAAAA,EAAA,cAAAA,EACA,aAAAA,EAAA,cACAiB,KAAA,IAAA//B,OAAA,OAAA6+B,EAAA,UAGAmB,aAAA,IAAAhgC,OAAA,IAAA8+B,EAAA,mDACAA,EAAA,mBAAAA,EAAA,yBAGAmB,EAAA,sCACAC,EAAA,SAEAC,EAAA,yBAGAC,EAAA,mCAEAC,EAAA,OAIAC,EAAA,IAAAtgC,OAAA,qBAA4C8+B,EAAA,MAAAA,EAAA,aAC5CyB,GAAA,SAAAnwC,EAAAowC,EAAAC,GACA,IAAAC,EAAA,KAAAF,EAAA,MAIA,OAAAE,MAAAD,EACAD,EACAE,EAAA,EAEAC,OAAAC,aAAAF,EAAA,OAEAC,OAAAC,aAAAF,GAAA,cAAAA,EAAA,QAKAG,GAAA,sDACAC,GAAA,SAAAC,EAAAC,GACA,OAAAA,EAGA,OAAAD,EACA,IAIAA,EAAA1kC,MAAA,WAAA0kC,EAAAE,WAAAF,EAAA7qC,OAAA,GAAAmmB,SAAA,QAIA,KAAA0kB,GAOAG,GAAA,WACArD,KAGAsD,GAAAC,GACA,SAAAvF,GACA,WAAAA,EAAAwF,WAAA,SAAAxF,GAAA,UAAAA,KAEG19B,IAAA,aAAAmpB,KAAA,WAIH,IACA5uB,EAAA8L,MACA21B,EAAA99B,EAAA7J,KAAA2rC,EAAApwB,YACAowB,EAAApwB,YAIAosB,EAAAgE,EAAApwB,WAAA7X,QAAAsuB,SACC,MAAA1K,GACDphB,GAAS8L,MAAA21B,EAAAjkC,OAGT,SAAA9D,EAAAkvC,GACA3C,EAAAn6B,MAAApS,EAAAiK,EAAA7J,KAAA8uC,KAKA,SAAAlvC,EAAAkvC,GAIA,IAHA,IAAAn/B,EAAA/P,EAAA8D,OACAU,EAAA,EAEAxE,EAAA+P,KAAAm/B,EAAA1qC,OACAxE,EAAA8D,OAAAiM,EAAA,IAKA,SAAAi7B,GAAApS,EAAAN,EAAAiS,EAAA4E,GACA,IAAAzlB,EAAAllB,EAAAilC,EAAA2F,EAAAh/B,EAAAi/B,EAAAC,EACAC,EAAAjX,KAAAkX,cAGApd,EAAAkG,IAAAlG,SAAA,EAKA,GAHAmY,QAGA,iBAAA3R,OACA,IAAAxG,GAAA,IAAAA,GAAA,KAAAA,EAEA,OAAAmY,EAIA,IAAA4E,KAEA7W,IAAAkX,eAAAlX,EAAAyT,KAAA1uC,GACAouC,EAAAnT,GAEAA,KAAAj7B,EAEAsuC,GAAA,CAIA,QAAAvZ,IAAAhiB,EAAA49B,EAAAyB,KAAA7W,IAGA,GAAAlP,EAAAtZ,EAAA,IAGA,OAAAgiB,EAAA,CACA,KAAAqX,EAAAnR,EAAAoX,eAAAhmB,IAUA,OAAA6gB,EALA,GAAAd,EAAA5jC,KAAA6jB,EAEA,OADA6gB,EAAAjkC,KAAAmjC,GACAc,OAYA,GAAAgF,IAAA9F,EAAA8F,EAAAG,eAAAhmB,KACAoiB,EAAAxT,EAAAmR,IACAA,EAAA5jC,KAAA6jB,EAGA,OADA6gB,EAAAjkC,KAAAmjC,GACAc,MAKK,IAAAn6B,EAAA,GAEL,OADA9J,EAAA8L,MAAAm4B,EAAAjS,EAAAjuB,qBAAAuuB,IACA2R,EAGK,IAAA7gB,EAAAtZ,EAAA,KAAAm4B,EAAAoH,wBACLrX,EAAAqX,uBAGA,OADArpC,EAAA8L,MAAAm4B,EAAAjS,EAAAqX,uBAAAjmB,IACA6gB,EAKA,GAAAhC,EAAAqH,MACAvD,EAAAzT,EAAA,QACAgT,MAAA1iB,KAAA0P,IAAA,CAEA,OAAAxG,EACAmd,EAAAjX,EACAgX,EAAA1W,OAMK,cAAAN,EAAAh3B,SAAAC,cAAA,CAYL,KATA6tC,EAAA9W,EAAA5zB,aAAA,OACA0qC,IAAA3gC,QAAAggC,GAAAC,IAEApW,EAAAnb,aAAA,KAAAiyB,EAAAtF,GAKAtlC,GADA6qC,EAAAjE,EAAAxS,IACA90B,OACAU,KACA6qC,EAAA7qC,GAAA,IAAA4qC,EAAA,IAAAS,GAAAR,EAAA7qC,IAEA8qC,EAAAD,EAAAtlC,KAAA,KAGAwlC,EAAAtB,EAAA/kB,KAAA0P,IAAAkX,GAAAxX,EAAAhzB,aACAgzB,EAGA,GAAAgX,EACA,IAIA,OAHAhpC,EAAA8L,MAAAm4B,EACAgF,EAAAQ,iBAAAT,IAEA/E,EACM,MAAAyF,IACA,QACNZ,IAAAtF,GACAxR,EAAAzD,gBAAA,QASA,OAAA/I,EAAA8M,EAAAnqB,QAAAy6B,EAAA,MAAA5Q,EAAAiS,EAAA4E,GASA,SAAAhD,KACA,IAAA8D,KAUA,OARA,SAAAv3B,EAAApI,EAAAqE,GAMA,OAJAs7B,EAAA3pC,KAAAgK,EAAA,KAAA26B,EAAAiF,oBAEAx3B,EAAAu3B,EAAAnW,SAEAphB,EAAApI,EAAA,KAAAqE,GASA,SAAAw7B,GAAApsC,GAEA,OADAA,EAAA+lC,IAAA,EACA/lC,EAOA,SAAAqsC,GAAArsC,GACA,IAAA6F,EAAAvM,EAAA6X,cAAA,YAEA,IACA,QAAAnR,EAAA6F,GACE,MAAA8d,GACF,SACE,QAEF9d,EAAAtE,YACAsE,EAAAtE,WAAAsW,YAAAhS,GAGAA,EAAA,MASA,SAAAymC,GAAAC,EAAAC,GAIA,IAHA,IAAAxI,EAAAuI,EAAAhzB,MAAA,KACA9Y,EAAAujC,EAAAjkC,OAEAU,KACAymC,EAAAuF,WAAAzI,EAAAvjC,IAAA+rC,EAUA,SAAAE,GAAA1lC,EAAAmQ,GACA,IAAAw1B,EAAAx1B,GAAAnQ,EACA4lC,EAAAD,GAAA,IAAA3lC,EAAAqnB,UAAA,IAAAlX,EAAAkX,UACArnB,EAAA6lC,YAAA11B,EAAA01B,YAGA,GAAAD,EACA,OAAAA,EAIA,GAAAD,EACA,KAAAA,IAAAh0B,aACA,GAAAg0B,IAAAx1B,EACA,SAKA,OAAAnQ,EAAA,KAOA,SAAA8lC,GAAAxvC,GACA,gBAAAooC,GAEA,gBADAA,EAAAnoC,SAAAC,eACAkoC,EAAApoC,UAQA,SAAAyvC,GAAAzvC,GACA,gBAAAooC,GACA,IAAAz+B,EAAAy+B,EAAAnoC,SAAAC,cACA,iBAAAyJ,GAAA,WAAAA,IAAAy+B,EAAApoC,UAQA,SAAA0vC,GAAA9B,GAGA,gBAAAxF,GAKA,eAAAA,EASAA,EAAAnkC,aAAA,IAAAmkC,EAAAwF,SAGA,UAAAxF,EACA,UAAAA,EAAAnkC,WACAmkC,EAAAnkC,WAAA2pC,aAEAxF,EAAAwF,aAMAxF,EAAAuH,aAAA/B,GAIAxF,EAAAuH,cAAA/B,GACAF,GAAAtF,KAAAwF,EAGAxF,EAAAwF,aAKG,UAAAxF,GACHA,EAAAwF,cAYA,SAAAgC,GAAAltC,GACA,OAAAosC,GAAA,SAAAe,GAEA,OADAA,KACAf,GAAA,SAAAhB,EAAAxE,GAMA,IALA,IAAA56B,EACAohC,EAAAptC,KAAAorC,EAAArrC,OAAAotC,GACA1sC,EAAA2sC,EAAArtC,OAGAU,KACA2qC,EAAAp/B,EAAAohC,EAAA3sC,MACA2qC,EAAAp/B,KAAA46B,EAAA56B,GAAAo/B,EAAAp/B,SAYA,SAAA+/B,GAAAxX,GACA,OAAAA,QAAA,IAAAA,EAAAjuB,sBAAAiuB,EAijCA,IAAA9zB,KA7iCA+jC,EAAAyC,GAAAzC,WAOA4C,EAAAH,GAAAG,MAAA,SAAA1B,GAGA,IAAA2H,EAAA3H,MAAA+F,eAAA/F,GAAA2H,gBACA,QAAAA,GAAA,SAAAA,EAAA9vC,UAQAmqC,EAAAT,GAAAS,YAAA,SAAA9pC,GACA,IAAA0vC,EAAAC,EACAxI,EAAAnnC,IAAA6tC,eAAA7tC,EAAAoqC,EAGA,OAAAjD,IAAAzrC,GAAA,IAAAyrC,EAAA1W,UAAA0W,EAAAsI,iBAMA1F,GADAruC,EAAAyrC,GACAsI,gBACAzF,GAAAR,EAAA9tC,GAIA0uC,IAAA1uC,IACAi0C,EAAAj0C,EAAAk0C,cAAAD,EAAAj+B,MAAAi+B,IAGAA,EAAAE,iBACAF,EAAAE,iBAAA,SAAA1C,IAAA,GAGGwC,EAAAG,aACHH,EAAAG,YAAA,WAAA3C,KAUAvG,EAAAqE,WAAAwD,GAAA,SAAAxmC,GAEA,OADAA,EAAAmM,UAAA,KACAnM,EAAAlF,aAAA,eAOA6jC,EAAAl+B,qBAAA+lC,GAAA,SAAAxmC,GAEA,OADAA,EAAAqT,YAAA5f,EAAAq0C,cAAA,MACA9nC,EAAAS,qBAAA,KAAAvG,SAIAykC,EAAAoH,uBAAA5B,EAAA7kB,KAAA7rB,EAAAsyC,wBAMApH,EAAAoJ,QAAAvB,GAAA,SAAAxmC,GAEA,OADA8hC,EAAAzuB,YAAArT,GAAA/D,GAAAikC,GACAzsC,EAAAu0C,oBAAAv0C,EAAAu0C,kBAAA9H,GAAAhmC,SAIAykC,EAAAoJ,SACA1G,EAAA//B,OAAA,YAAArF,GACA,IAAAgsC,EAAAhsC,EAAA4I,QAAAy/B,EAAAC,IACA,gBAAA1E,GACA,OAAAA,EAAA/kC,aAAA,QAAAmtC,IAGA5G,EAAAzhC,KAAA,YAAA3D,EAAAyyB,GACA,YAAAA,EAAAoX,gBAAA/D,EAAA,CACA,IAAAlC,EAAAnR,EAAAoX,eAAA7pC,GACA,OAAA4jC,aAIAwB,EAAA//B,OAAA,YAAArF,GACA,IAAAgsC,EAAAhsC,EAAA4I,QAAAy/B,EAAAC,IACA,gBAAA1E,GACA,IAAA9nC,OAAA,IAAA8nC,EAAAqI,kBACArI,EAAAqI,iBAAA,MACA,OAAAnwC,KAAAgT,QAAAk9B,IAMA5G,EAAAzhC,KAAA,YAAA3D,EAAAyyB,GACA,YAAAA,EAAAoX,gBAAA/D,EAAA,CACA,IAAAhqC,EAAA6C,EAAA+kC,EACAE,EAAAnR,EAAAoX,eAAA7pC,GAEA,GAAA4jC,EAAA,CAIA,IADA9nC,EAAA8nC,EAAAqI,iBAAA,QACAnwC,EAAAgT,QAAA9O,EACA,OAAA4jC,GAMA,IAFAF,EAAAjR,EAAAsZ,kBAAA/rC,GACArB,EAAA,EACAilC,EAAAF,EAAA/kC,MAEA,IADA7C,EAAA8nC,EAAAqI,iBAAA,QACAnwC,EAAAgT,QAAA9O,EACA,OAAA4jC,GAKA,YAMAwB,EAAAzhC,KAAA,IAAA++B,EAAAl+B,qBACA,SAAA0nC,EAAAzZ,GACA,gBAAAA,EAAAjuB,qBACAiuB,EAAAjuB,qBAAA0nC,GAGIxJ,EAAAqH,IACJtX,EAAAyX,iBAAAgC,QADI,GAKJ,SAAAA,EAAAzZ,GACA,IAAAmR,EACAlhC,KACA/D,EAAA,EAEA+lC,EAAAjS,EAAAjuB,qBAAA0nC,GAGA,SAAAA,EAAA,CACA,KAAAtI,EAAAc,EAAA/lC,MACA,IAAAilC,EAAArX,UACA7pB,EAAAjC,KAAAmjC,GAIA,OAAAlhC,EAEA,OAAAgiC,GAIAU,EAAAzhC,KAAA,MAAA++B,EAAAoH,wBAAA,SAAA55B,EAAAuiB,GACA,YAAAA,EAAAqX,wBAAAhE,EACA,OAAArT,EAAAqX,uBAAA55B,IAUA81B,KAOAD,MAEArD,EAAAqH,IAAA7B,EAAA7kB,KAAA7rB,EAAA0yC,qBAGAK,GAAA,SAAAxmC,GAMA8hC,EAAAzuB,YAAArT,GAAAwL,UAAA,UAAA00B,EAAA,qBACAA,EAAA,kEAOAlgC,EAAAmmC,iBAAA,wBAAAjsC,QACA8nC,EAAAtlC,KAAA,SAAAomC,EAAA,gBAKA9iC,EAAAmmC,iBAAA,cAAAjsC,QACA8nC,EAAAtlC,KAAA,MAAAomC,EAAA,aAAAD,EAAA,KAIA7iC,EAAAmmC,iBAAA,QAAAjG,EAAA,MAAAhmC,QACA8nC,EAAAtlC,KAAA,MAMAsD,EAAAmmC,iBAAA,YAAAjsC,QACA8nC,EAAAtlC,KAAA,YAMAsD,EAAAmmC,iBAAA,KAAAjG,EAAA,MAAAhmC,QACA8nC,EAAAtlC,KAAA,cAIA8pC,GAAA,SAAAxmC,GACAA,EAAAwL,UAAA,oFAKA,IAAA4R,EAAA3pB,EAAA6X,cAAA,SACA8R,EAAA7J,aAAA,iBACAvT,EAAAqT,YAAA+J,GAAA7J,aAAA,YAIAvT,EAAAmmC,iBAAA,YAAAjsC,QACA8nC,EAAAtlC,KAAA,OAAAomC,EAAA,eAKA,IAAA9iC,EAAAmmC,iBAAA,YAAAjsC,QACA8nC,EAAAtlC,KAAA,wBAKAolC,EAAAzuB,YAAArT,GAAAqlC,UAAA,EACA,IAAArlC,EAAAmmC,iBAAA,aAAAjsC,QACA8nC,EAAAtlC,KAAA,wBAIAsD,EAAAmmC,iBAAA,QACAnE,EAAAtlC,KAAA,YAIAiiC,EAAAyJ,gBAAAjE,EAAA7kB,KAAAyhB,EAAAe,EAAAf,SACAe,EAAAuG,uBACAvG,EAAAwG,oBACAxG,EAAAyG,kBACAzG,EAAA0G,qBAEAhC,GAAA,SAAAxmC,GAGA2+B,EAAA8J,kBAAA1H,EAAAvqC,KAAAwJ,EAAA,KAIA+gC,EAAAvqC,KAAAwJ,EAAA,aACAiiC,EAAAvlC,KAAA,KAAAumC,KAIAjB,IAAA9nC,QAAA,IAAA8J,OAAAg+B,EAAA7hC,KAAA,MACA8hC,IAAA/nC,QAAA,IAAA8J,OAAAi+B,EAAA9hC,KAAA,MAIAsnC,EAAAtD,EAAA7kB,KAAAwiB,EAAA4G,yBAKAxG,EAAAuF,GAAAtD,EAAA7kB,KAAAwiB,EAAAI,UACA,SAAA/gC,EAAAmQ,GACA,IAAAq3B,EAAA,IAAAxnC,EAAAqnB,SAAArnB,EAAAqmC,gBAAArmC,EACAynC,EAAAt3B,KAAA5V,WACA,OAAAyF,IAAAynC,SAAA,IAAAA,EAAApgB,YACAmgB,EAAAzG,SACAyG,EAAAzG,SAAA0G,GACAznC,EAAAunC,yBAAA,GAAAvnC,EAAAunC,wBAAAE,MAGA,SAAAznC,EAAAmQ,GACA,GAAAA,EACA,KAAAA,IAAA5V,YACA,GAAA4V,IAAAnQ,EACA,SAIA,UAOAuhC,EAAA+E,EACA,SAAAtmC,EAAAmQ,GAGA,GAAAnQ,IAAAmQ,EAEA,OADAswB,GAAA,EACA,EAIA,IAAAiH,GAAA1nC,EAAAunC,yBAAAp3B,EAAAo3B,wBACA,OAAAG,IAYA,GAPAA,GAAA1nC,EAAAykC,eAAAzkC,MAAAmQ,EAAAs0B,eAAAt0B,GACAnQ,EAAAunC,wBAAAp3B,GAGA,KAIAqtB,EAAAmK,cAAAx3B,EAAAo3B,wBAAAvnC,KAAA0nC,EAGA1nC,IAAA1N,GAAA0N,EAAAykC,gBAAAzD,GAAAD,EAAAC,EAAAhhC,IACA,EAEAmQ,IAAA7d,GAAA6d,EAAAs0B,gBAAAzD,GAAAD,EAAAC,EAAA7wB,GACA,EAIAqwB,EACAh7B,EAAAg7B,EAAAxgC,GAAAwF,EAAAg7B,EAAArwB,GACA,EAGA,EAAAu3B,GAAA,MAEA,SAAA1nC,EAAAmQ,GAEA,GAAAnQ,IAAAmQ,EAEA,OADAswB,GAAA,EACA,EAGA,IAAAkF,EACAlsC,EAAA,EACAmuC,EAAA5nC,EAAAzF,WACAktC,EAAAt3B,EAAA5V,WACAstC,GAAA7nC,GACA8nC,GAAA33B,GAGA,IAAAy3B,IAAAH,EACA,OAAAznC,IAAA1N,GAAA,EACA6d,IAAA7d,EAAA,EACAs1C,GAAA,EACAH,EAAA,EACAjH,EACAh7B,EAAAg7B,EAAAxgC,GAAAwF,EAAAg7B,EAAArwB,GACA,EAGG,GAAAy3B,IAAAH,EACH,OAAA/B,GAAA1lC,EAAAmQ,GAKA,IADAw1B,EAAA3lC,EACA2lC,IAAAprC,YACAstC,EAAA3Y,QAAAyW,GAGA,IADAA,EAAAx1B,EACAw1B,IAAAprC,YACAutC,EAAA5Y,QAAAyW,GAIA,KAAAkC,EAAApuC,KAAAquC,EAAAruC,IACAA,IAGA,OAAAA,EAEAisC,GAAAmC,EAAApuC,GAAAquC,EAAAruC,IAGAouC,EAAApuC,KAAAunC,GAAA,EACA8G,EAAAruC,KAAAunC,EAAA,EACA,GAGA1uC,GA3YAA,GA8YA2tC,GAAAL,QAAA,SAAAmI,EAAAC,GACA,OAAA/H,GAAA8H,EAAA,UAAAC,IAGA/H,GAAAgH,gBAAA,SAAAvI,EAAAqJ,GASA,IAPArJ,EAAA+F,eAAA/F,KAAApsC,GACAouC,EAAAhC,GAIAqJ,IAAArkC,QAAAw+B,EAAA,UAEA1E,EAAAyJ,iBAAArG,IACAU,EAAAyG,EAAA,QACAjH,MAAA3iB,KAAA4pB,OACAlH,MAAA1iB,KAAA4pB,IAEA,IACA,IAAAluB,EAAA+lB,EAAAvqC,KAAAqpC,EAAAqJ,GAGA,GAAAluB,GAAA2jB,EAAA8J,mBAGA5I,EAAApsC,UAAA,KAAAosC,EAAApsC,SAAA+0B,SACA,OAAAxN,EAEG,MAAA8C,IAGH,OAAAsjB,GAAA8H,EAAAz1C,EAAA,MAAAosC,IAAA3lC,OAAA,GAGAknC,GAAAc,SAAA,SAAAxT,EAAAmR,GAKA,OAHAnR,EAAAkX,eAAAlX,KAAAj7B,GACAouC,EAAAnT,GAEAwT,EAAAxT,EAAAmR,IAGAuB,GAAAt1B,KAAA,SAAA+zB,EAAAz+B,IAEAy+B,EAAA+F,eAAA/F,KAAApsC,GACAouC,EAAAhC,GAGA,IAAA1lC,EAAAknC,EAAAuF,WAAAxlC,EAAAzJ,eAEAuK,EAAA/H,GAAAqkC,EAAAhoC,KAAA6qC,EAAAuF,WAAAxlC,EAAAzJ,eACAwC,EAAA0lC,EAAAz+B,GAAA2gC,QACAzuC,EAEA,YAAAA,IAAA4O,EACAA,EACAy8B,EAAAqE,aAAAjB,EACAlC,EAAA/kC,aAAAsG,IACAc,EAAA29B,EAAAqI,iBAAA9mC,KAAAc,EAAAknC,UACAlnC,EAAA6I,MACA,MAGAq2B,GAAAiI,OAAA,SAAAhX,GACA,OAAAA,EAAA,IAAAxtB,QAAAggC,GAAAC,KAGA1D,GAAA/hC,MAAA,SAAA0tB,GACA,UAAAO,MAAA,0CAAAP,IAOAqU,GAAAkI,WAAA,SAAA3I,GACA,IAAAd,EACA0J,KACApjC,EAAA,EACAvL,EAAA,EAOA,GAJAgnC,GAAAjD,EAAA6K,iBACA7H,GAAAhD,EAAA8K,YAAA9I,EAAAtgC,MAAA,GACAsgC,EAAAt/B,KAAAqhC,GAEAd,EAAA,CACA,KAAA/B,EAAAc,EAAA/lC,MACAilC,IAAAc,EAAA/lC,KACAuL,EAAAojC,EAAA7sC,KAAA9B,IAGA,KAAAuL,KACAw6B,EAAAzkC,OAAAqtC,EAAApjC,GAAA,GAQA,OAFAw7B,EAAA,KAEAhB,GAOAW,EAAAF,GAAAE,QAAA,SAAAzB,GACA,IAAA9nC,EACAijB,EAAA,GACApgB,EAAA,EACA4tB,EAAAqX,EAAArX,SAEA,GAAAA,GAME,OAAAA,GAAA,IAAAA,GAAA,KAAAA,EAAA,CAGF,oBAAAqX,EAAA5f,YACA,OAAA4f,EAAA5f,YAGA,IAAA4f,IAAA5tB,WAAgC4tB,EAAMA,IAAA/sB,YACtCkI,GAAAsmB,EAAAzB,QAGE,OAAArX,GAAA,IAAAA,EACF,OAAAqX,EAAA6J,eAhBA,KAAA3xC,EAAA8nC,EAAAjlC,MAEAogB,GAAAsmB,EAAAvpC,GAkBA,OAAAijB,IAGAqmB,EAAAD,GAAAuI,WAGArD,YAAA,GAEAsD,aAAArD,GAEA//B,MAAAg9B,EAEAoD,cAEAhnC,QAEAiqC,UACAC,KAAQ3nC,IAAA,aAAA29B,OAAA,GACRiK,KAAQ5nC,IAAA,cACR6nC,KAAQ7nC,IAAA,kBAAA29B,OAAA,GACRmK,KAAQ9nC,IAAA,oBAGR+nC,WACAtG,KAAA,SAAAp9B,GAUA,OATAA,EAAA,GAAAA,EAAA,GAAA3B,QAAAy/B,EAAAC,IAGA/9B,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,QAAA3B,QAAAy/B,EAAAC,IAEA,OAAA/9B,EAAA,KACAA,EAAA,OAAAA,EAAA,QAGAA,EAAAnG,MAAA,MAGAyjC,MAAA,SAAAt9B,GA6BA,OAlBAA,EAAA,GAAAA,EAAA,GAAA7O,cAEA,QAAA6O,EAAA,GAAAnG,MAAA,MAEAmG,EAAA,IACA46B,GAAA/hC,MAAAmH,EAAA,IAKAA,EAAA,KAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,mBAAAA,EAAA,YAAAA,EAAA,KACAA,EAAA,KAAAA,EAAA,GAAAA,EAAA,YAAAA,EAAA,KAGIA,EAAA,IACJ46B,GAAA/hC,MAAAmH,EAAA,IAGAA,GAGAq9B,OAAA,SAAAr9B,GACA,IAAA2jC,EACAC,GAAA5jC,EAAA,IAAAA,EAAA,GAEA,OAAAg9B,EAAA,MAAAlkB,KAAA9Y,EAAA,IACA,MAIAA,EAAA,GACAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,OAGI4jC,GAAA9G,EAAAhkB,KAAA8qB,KAEJD,EAAA3I,EAAA4I,GAAA,MAEAD,EAAAC,EAAAzjC,QAAA,IAAAyjC,EAAAlwC,OAAAiwC,GAAAC,EAAAlwC,UAGAsM,EAAA,GAAAA,EAAA,GAAAnG,MAAA,EAAA8pC,GACA3jC,EAAA,GAAA4jC,EAAA/pC,MAAA,EAAA8pC,IAIA3jC,EAAAnG,MAAA,QAIAiB,QAEAqiC,IAAA,SAAA0G,GACA,IAAA3yC,EAAA2yC,EAAAxlC,QAAAy/B,EAAAC,IAAA5sC,cACA,YAAA0yC,EACA,WAAgB,UAChB,SAAAxK,GACA,OAAAA,EAAAnoC,UAAAmoC,EAAAnoC,SAAAC,gBAAAD,IAIAgsC,MAAA,SAAAv3B,GACA,IAAAm+B,EAAAhI,EAAAn2B,EAAA,KAEA,OAAAm+B,IACAA,EAAA,IAAAtmC,OAAA,MAAA8+B,EAAA,IAAA32B,EAAA,IAAA22B,EAAA,SACAR,EAAAn2B,EAAA,SAAA0zB,GACA,OAAAyK,EAAAhrB,KAAA,iBAAAugB,EAAA1zB,WAAA0zB,EAAA1zB,gBAAA,IAAA0zB,EAAA/kC,cAAA+kC,EAAA/kC,aAAA,iBAIA8oC,KAAA,SAAAxiC,EAAAmpC,EAAAC,GACA,gBAAA3K,GACA,IAAA1R,EAAAiT,GAAAt1B,KAAA+zB,EAAAz+B,GAEA,aAAA+sB,EACA,OAAAoc,GAEAA,IAIApc,GAAA,GAEA,MAAAoc,EAAApc,IAAAqc,EACA,OAAAD,EAAApc,IAAAqc,EACA,OAAAD,EAAAC,GAAA,IAAArc,EAAAxnB,QAAA6jC,GACA,OAAAD,EAAAC,GAAArc,EAAAxnB,QAAA6jC,IAAA,EACA,OAAAD,EAAAC,GAAArc,EAAA9tB,OAAAmqC,EAAAtwC,UAAAswC,EACA,OAAAD,GAAA,IAAApc,EAAAtpB,QAAAq+B,EAAA,UAAAv8B,QAAA6jC,IAAA,EACA,OAAAD,IAAApc,IAAAqc,GAAArc,EAAA9tB,MAAA,EAAAmqC,EAAAtwC,OAAA,KAAAswC,EAAA,QAKA1G,MAAA,SAAArsC,EAAAgzC,EAAAnD,EAAAxH,EAAA75B,GACA,IAAAs0B,EAAA,QAAA9iC,EAAA4I,MAAA,KACAqqC,EAAA,SAAAjzC,EAAA4I,OAAA,GACAsqC,EAAA,YAAAF,EAEA,WAAA3K,GAAA,IAAA75B,EAGA,SAAA45B,GACA,QAAAA,EAAAnkC,YAGA,SAAAmkC,EAAAnR,EAAAkc,GACA,IAAA97B,EAAA+7B,EAAAC,EAAA/yC,EAAAgzC,EAAAllC,EACA1D,EAAAo4B,IAAAmQ,EAAA,gCACAjyB,EAAAonB,EAAAnkC,WACA0F,EAAAupC,GAAA9K,EAAAnoC,SAAAC,cACAqzC,GAAAJ,IAAAD,EACA5D,GAAA,EAEA,GAAAtuB,EAAA,CAGA,GAAA8hB,EAAA,CACA,KAAAp4B,GAAA,CAEA,IADApK,EAAA8nC,EACA9nC,IAAAoK,IACA,GAAAwoC,EACA5yC,EAAAL,SAAAC,gBAAAyJ,EACA,IAAArJ,EAAAywB,SAEA,SAIA3iB,EAAA1D,EAAA,SAAA1K,IAAAoO,GAAA,cAEA,SAMA,GAHAA,GAAA6kC,EAAAjyB,EAAAxG,WAAAwG,EAAAwyB,WAGAP,GAAAM,GAkBA,IAHAjE,GADAgE,GADAj8B,GAHA+7B,GAJAC,GADA/yC,EAAA0gB,GACAynB,KAAAnoC,EAAAmoC,QAIAnoC,EAAAmzC,YACAJ,EAAA/yC,EAAAmzC,eAEAzzC,QACA,KAAA2qC,GAAAtzB,EAAA,KACAA,EAAA,GACA/W,EAAAgzC,GAAAtyB,EAAA1G,WAAAg5B,GAEAhzC,IAAAgzC,GAAAhzC,KAAAoK,KAGA4kC,EAAAgE,EAAA,IAAAllC,EAAAkqB,OAGA,OAAAh4B,EAAAywB,YAAAue,GAAAhvC,IAAA8nC,EAAA,CACAgL,EAAApzC,IAAA2qC,EAAA2I,EAAAhE,GACA,YAuBA,GAjBAiE,IAYAjE,EADAgE,GADAj8B,GAHA+7B,GAJAC,GADA/yC,EAAA8nC,GACAK,KAAAnoC,EAAAmoC,QAIAnoC,EAAAmzC,YACAJ,EAAA/yC,EAAAmzC,eAEAzzC,QACA,KAAA2qC,GAAAtzB,EAAA,KAMA,IAAAi4B,EAEA,MAAAhvC,IAAAgzC,GAAAhzC,KAAAoK,KACA4kC,EAAAgE,EAAA,IAAAllC,EAAAkqB,UAEA4a,EACA5yC,EAAAL,SAAAC,gBAAAyJ,EACA,IAAArJ,EAAAywB,cACAue,IAGAiE,KAKAH,GAJAC,EAAA/yC,EAAAmoC,KAAAnoC,EAAAmoC,QAIAnoC,EAAAmzC,YACAJ,EAAA/yC,EAAAmzC,eAEAzzC,IAAA2qC,EAAA2E,IAGAhvC,IAAA8nC,MAUA,OADAkH,GAAA9gC,KACA65B,GAAAiH,EAAAjH,GAAA,GAAAiH,EAAAjH,GAAA,KAKA+D,OAAA,SAAAsH,EAAA7D,GAKA,IAAAl/B,EACAjO,EAAAknC,EAAA4B,QAAAkI,IAAA9J,EAAA+J,WAAAD,EAAAxzC,gBACAypC,GAAA/hC,MAAA,uBAAA8rC,GAKA,OAAAhxC,EAAA+lC,GACA/lC,EAAAmtC,GAIAntC,EAAAD,OAAA,GACAkO,GAAA+iC,IAAA,GAAA7D,GACAjG,EAAA+J,WAAAngC,eAAAkgC,EAAAxzC,eACA4uC,GAAA,SAAAhB,EAAAxE,GAIA,IAHA,IAAAt1B,EACA4/B,EAAAlxC,EAAAorC,EAAA+B,GACA1sC,EAAAywC,EAAAnxC,OACAU,KAEA2qC,EADA95B,EAAA9E,EAAA4+B,EAAA8F,EAAAzwC,OACAmmC,EAAAt1B,GAAA4/B,EAAAzwC,MAGA,SAAAilC,GACA,OAAA1lC,EAAA0lC,EAAA,EAAAz3B,KAIAjO,IAIA8oC,SAEAqI,IAAA/E,GAAA,SAAAvX,GAIA,IAAA5R,KACAujB,KACA4K,EAAA9J,EAAAzS,EAAAnqB,QAAAy6B,EAAA,OAEA,OAAAiM,EAAArL,GACAqG,GAAA,SAAAhB,EAAAxE,EAAArS,EAAAkc,GAMA,IALA,IAAA/K,EACA2L,EAAAD,EAAAhG,EAAA,KAAAqF,MACAhwC,EAAA2qC,EAAArrC,OAGAU,MACAilC,EAAA2L,EAAA5wC,MACA2qC,EAAA3qC,KAAAmmC,EAAAnmC,GAAAilC,MAIA,SAAAA,EAAAnR,EAAAkc,GAKA,OAJAxtB,EAAA,GAAAyiB,EACA0L,EAAAnuB,EAAA,KAAAwtB,EAAAjK,GAEAvjB,EAAA,SACAujB,EAAA5Q,SAIA0b,IAAAlF,GAAA,SAAAvX,GACA,gBAAA6Q,GACA,OAAAuB,GAAApS,EAAA6Q,GAAA3lC,OAAA,KAIAgoC,SAAAqE,GAAA,SAAA/I,GAEA,OADAA,IAAA34B,QAAAy/B,EAAAC,IACA,SAAA1E,GACA,OAAAA,EAAA5f,aAAA4f,EAAAvf,WAAAghB,EAAAzB,IAAAl5B,QAAA62B,IAAA,KAWAv2B,KAAAs/B,GAAA,SAAAt/B,GAMA,OAJAs8B,EAAAjkB,KAAArY,GAAA,KACAm6B,GAAA/hC,MAAA,qBAAA4H,GAEAA,IAAApC,QAAAy/B,EAAAC,IAAA5sC,cACA,SAAAkoC,GACA,IAAA6L,EACA,GACA,GAAAA,EAAA3J,EACAlC,EAAA54B,KACA44B,EAAA/kC,aAAA,aAAA+kC,EAAA/kC,aAAA,QAGA,OADA4wC,IAAA/zC,iBACAsP,GAAA,IAAAykC,EAAA/kC,QAAAM,EAAA,YAEK44B,IAAAnkC,aAAA,IAAAmkC,EAAArX,UACL,YAKApyB,OAAA,SAAAypC,GACA,IAAAlN,EAAAn/B,EAAA0jC,UAAA1jC,EAAA0jC,SAAAvE,KACA,OAAAA,KAAAtyB,MAAA,KAAAw/B,EAAA5jC,IAGA0vC,KAAA,SAAA9L,GACA,OAAAA,IAAAiC,GAGArG,MAAA,SAAAoE,GACA,OAAAA,IAAApsC,EAAAwqB,iBAAAxqB,EAAAm4C,UAAAn4C,EAAAm4C,gBAAA/L,EAAApoC,MAAAooC,EAAAgM,OAAAhM,EAAAiM,WAIAC,QAAA5E,IAAA,GACA9B,SAAA8B,IAAA,GAEA6E,QAAA,SAAAnM,GAGA,IAAAnoC,EAAAmoC,EAAAnoC,SAAAC,cACA,gBAAAD,KAAAmoC,EAAAmM,SAAA,WAAAt0C,KAAAmoC,EAAAoM,UAGAA,SAAA,SAAApM,GAOA,OAJAA,EAAAnkC,YACAmkC,EAAAnkC,WAAAwwC,eAGA,IAAArM,EAAAoM,UAIAzQ,MAAA,SAAAqE,GAKA,IAAAA,IAAA5tB,WAAgC4tB,EAAMA,IAAA/sB,YACtC,GAAA+sB,EAAArX,SAAA,EACA,SAGA,UAGA/P,OAAA,SAAAonB,GACA,OAAAwB,EAAA4B,QAAA,MAAApD,IAIArZ,OAAA,SAAAqZ,GACA,OAAAqE,EAAA5kB,KAAAugB,EAAAnoC,WAGA0lB,MAAA,SAAAyiB,GACA,OAAAoE,EAAA3kB,KAAAugB,EAAAnoC,WAGAyjC,OAAA,SAAA0E,GACA,IAAAz+B,EAAAy+B,EAAAnoC,SAAAC,cACA,gBAAAyJ,GAAA,WAAAy+B,EAAApoC,MAAA,WAAA2J,GAGAo8B,KAAA,SAAAqC,GACA,IAAA/zB,EACA,gBAAA+zB,EAAAnoC,SAAAC,eACA,SAAAkoC,EAAApoC,OAIA,OAAAqU,EAAA+zB,EAAA/kC,aAAA,mBAAAgR,EAAAnU,gBAIAmoC,MAAAuH,GAAA,WACA,YAGAphC,KAAAohC,GAAA,SAAAE,EAAArtC,GACA,OAAAA,EAAA,KAGA2F,GAAAwnC,GAAA,SAAAE,EAAArtC,EAAAotC,GACA,OAAAA,EAAA,EAAAA,EAAAptC,EAAAotC,KAGA6E,KAAA9E,GAAA,SAAAE,EAAArtC,GAEA,IADA,IAAAU,EAAA,EACUA,EAAAV,EAAYU,GAAA,EACtB2sC,EAAA7qC,KAAA9B,GAEA,OAAA2sC,IAGA6E,IAAA/E,GAAA,SAAAE,EAAArtC,GAEA,IADA,IAAAU,EAAA,EACUA,EAAAV,EAAYU,GAAA,EACtB2sC,EAAA7qC,KAAA9B,GAEA,OAAA2sC,IAGA8E,GAAAhF,GAAA,SAAAE,EAAArtC,EAAAotC,GAEA,IADA,IAAA1sC,EAAA0sC,EAAA,EAAAA,EAAAptC,EAAAotC,IACU1sC,GAAA,GACV2sC,EAAA7qC,KAAA9B,GAEA,OAAA2sC,IAGA+E,GAAAjF,GAAA,SAAAE,EAAArtC,EAAAotC,GAEA,IADA,IAAA1sC,EAAA0sC,EAAA,EAAAA,EAAAptC,EAAAotC,IACU1sC,EAAAV,GACVqtC,EAAA7qC,KAAA9B,GAEA,OAAA2sC,OAKAtE,QAAA,IAAA5B,EAAA4B,QAAA,IAGYsJ,OAAA,EAAAC,UAAA,EAAAC,MAAA,EAAAC,UAAA,EAAAC,OAAA,GACZtL,EAAA4B,QAAAroC,GAAAqsC,GAAArsC,GAEA,IAAAA,KAAYgyC,QAAA,EAAAC,OAAA,GACZxL,EAAA4B,QAAAroC,GAAAssC,GAAAtsC,GAIA,SAAAwwC,MAuEA,SAAAnF,GAAA6G,GAIA,IAHA,IAAAlyC,EAAA,EACAX,EAAA6yC,EAAA5yC,OACA80B,EAAA,GACQp0B,EAAAX,EAASW,IACjBo0B,GAAA8d,EAAAlyC,GAAAmQ,MAEA,OAAAikB,EAGA,SAAAoW,GAAAmG,EAAAwB,EAAAC,GACA,IAAA7qC,EAAA4qC,EAAA5qC,IACA8qC,EAAAF,EAAAzhB,KACA5kB,EAAAumC,GAAA9qC,EACA+qC,EAAAF,GAAA,eAAAtmC,EACAymC,EAAA9K,IAEA,OAAA0K,EAAAjN,MAEA,SAAAD,EAAAnR,EAAAkc,GACA,KAAA/K,IAAA19B,IACA,OAAA09B,EAAArX,UAAA0kB,EACA,OAAA3B,EAAA1L,EAAAnR,EAAAkc,GAGA,UAIA,SAAA/K,EAAAnR,EAAAkc,GACA,IAAAwC,EAAAvC,EAAAC,EACAuC,GAAAjL,EAAA+K,GAGA,GAAAvC,GACA,KAAA/K,IAAA19B,IACA,QAAA09B,EAAArX,UAAA0kB,IACA3B,EAAA1L,EAAAnR,EAAAkc,GACA,cAKA,KAAA/K,IAAA19B,IACA,OAAA09B,EAAArX,UAAA0kB,EAOA,GAFArC,GAJAC,EAAAjL,EAAAK,KAAAL,EAAAK,QAIAL,EAAAqL,YAAAJ,EAAAjL,EAAAqL,cAEA+B,OAAApN,EAAAnoC,SAAAC,cACAkoC,IAAA19B,IAAA09B,MACO,KAAAuN,EAAAvC,EAAAnkC,KACP0mC,EAAA,KAAAhL,GAAAgL,EAAA,KAAAD,EAGA,OAAAE,EAAA,GAAAD,EAAA,GAMA,GAHAvC,EAAAnkC,GAAA2mC,EAGAA,EAAA,GAAA9B,EAAA1L,EAAAnR,EAAAkc,GACA,SAMA,UAIA,SAAA0C,GAAAC,GACA,OAAAA,EAAArzC,OAAA,EACA,SAAA2lC,EAAAnR,EAAAkc,GAEA,IADA,IAAAhwC,EAAA2yC,EAAArzC,OACAU,KACA,IAAA2yC,EAAA3yC,GAAAilC,EAAAnR,EAAAkc,GACA,SAGA,UAEA2C,EAAA,GAYA,SAAAC,GAAAhC,EAAAzrC,EAAAuB,EAAAotB,EAAAkc,GAOA,IANA,IAAA/K,EACA4N,KACA7yC,EAAA,EACAX,EAAAuxC,EAAAtxC,OACAwzC,EAAA,MAAA3tC,EAEQnF,EAAAX,EAASW,KACjBilC,EAAA2L,EAAA5wC,MACA0G,MAAAu+B,EAAAnR,EAAAkc,KACA6C,EAAA/wC,KAAAmjC,GACA6N,GACA3tC,EAAArD,KAAA9B,KAMA,OAAA6yC,EAGA,SAAAE,GAAAzD,EAAAlb,EAAAuc,EAAAqC,EAAAC,EAAAC,GAOA,OANAF,MAAA1N,KACA0N,EAAAD,GAAAC,IAEAC,MAAA3N,KACA2N,EAAAF,GAAAE,EAAAC,IAEAvH,GAAA,SAAAhB,EAAA5E,EAAAjS,EAAAkc,GACA,IAAAmD,EAAAnzC,EAAAilC,EACAmO,KACAC,KACAC,EAAAvN,EAAAzmC,OAGAylC,EAAA4F,GA5CA,SAAAvW,EAAAmf,EAAAxN,GAGA,IAFA,IAAA/lC,EAAA,EACAX,EAAAk0C,EAAAj0C,OACQU,EAAAX,EAASW,IACjBwmC,GAAApS,EAAAmf,EAAAvzC,GAAA+lC,GAEA,OAAAA,EAsCAyN,CAAApf,GAAA,IAAAN,EAAAlG,UAAAkG,SAGA2f,GAAAnE,IAAA3E,GAAAvW,EAEA2Q,EADA6N,GAAA7N,EAAAqO,EAAA9D,EAAAxb,EAAAkc,GAGA0D,EAAA/C,EAEAsC,IAAAtI,EAAA2E,EAAAgE,GAAAN,MAMAjN,EACA0N,EAQA,GALA9C,GACAA,EAAA8C,EAAAC,EAAA5f,EAAAkc,GAIAgD,EAMA,IALAG,EAAAP,GAAAc,EAAAL,GACAL,EAAAG,KAAArf,EAAAkc,GAGAhwC,EAAAmzC,EAAA7zC,OACAU,MACAilC,EAAAkO,EAAAnzC,MACA0zC,EAAAL,EAAArzC,MAAAyzC,EAAAJ,EAAArzC,IAAAilC,IAKA,GAAA0F,GACA,GAAAsI,GAAA3D,EAAA,CACA,GAAA2D,EAAA,CAIA,IAFAE,KACAnzC,EAAA0zC,EAAAp0C,OACAU,MACAilC,EAAAyO,EAAA1zC,KAEAmzC,EAAArxC,KAAA2xC,EAAAzzC,GAAAilC,GAGAgO,EAAA,KAAAS,KAAAP,EAAAnD,GAKA,IADAhwC,EAAA0zC,EAAAp0C,OACAU,MACAilC,EAAAyO,EAAA1zC,MACAmzC,EAAAF,EAAAlnC,EAAA4+B,EAAA1F,GAAAmO,EAAApzC,KAAA,IAEA2qC,EAAAwI,KAAApN,EAAAoN,GAAAlO,UAOAyO,EAAAd,GACAc,IAAA3N,EACA2N,EAAApyC,OAAAgyC,EAAAI,EAAAp0C,QACAo0C,GAEAT,EACAA,EAAA,KAAAlN,EAAA2N,EAAA1D,GAEAluC,EAAA8L,MAAAm4B,EAAA2N,KAMA,SAAAC,GAAAzB,GAwBA,IAvBA,IAAA0B,EAAAjD,EAAAplC,EACAlM,EAAA6yC,EAAA5yC,OACAu0C,EAAApN,EAAAwI,SAAAiD,EAAA,GAAAr1C,MACAi3C,EAAAD,GAAApN,EAAAwI,SAAA,KACAjvC,EAAA6zC,EAAA,IAGAE,EAAAvJ,GAAA,SAAAvF,GACA,OAAAA,IAAA2O,GACGE,GAAA,GACHE,EAAAxJ,GAAA,SAAAvF,GACA,OAAAl5B,EAAA6nC,EAAA3O,IAAA,GACG6O,GAAA,GACHnB,GAAA,SAAA1N,EAAAnR,EAAAkc,GACA,IAAA5vB,GAAAyzB,IAAA7D,GAAAlc,IAAAgT,MACA8M,EAAA9f,GAAAlG,SACAmmB,EAAA9O,EAAAnR,EAAAkc,GACAgE,EAAA/O,EAAAnR,EAAAkc,IAGA,OADA4D,EAAA,KACAxzB,IAGQpgB,EAAAX,EAASW,IACjB,GAAA2wC,EAAAlK,EAAAwI,SAAAiD,EAAAlyC,GAAAnD,MACA81C,GAAAnI,GAAAkI,GAAAC,GAAAhC,QACG,CAIH,IAHAA,EAAAlK,EAAA//B,OAAAwrC,EAAAlyC,GAAAnD,MAAA+Q,MAAA,KAAAskC,EAAAlyC,GAAAmmC,UAGAb,GAAA,CAGA,IADA/5B,IAAAvL,EACWuL,EAAAlM,IACXonC,EAAAwI,SAAAiD,EAAA3mC,GAAA1O,MADoB0O,KAKpB,OAAAwnC,GACA/yC,EAAA,GAAA0yC,GAAAC,GACA3yC,EAAA,GAAAqrC,GAEA6G,EAAAzsC,MAAA,EAAAzF,EAAA,GAAAgZ,QAAuC7I,MAAA,MAAA+hC,EAAAlyC,EAAA,GAAAnD,KAAA,UACvCoN,QAAAy6B,EAAA,MACAiM,EACA3wC,EAAAuL,GAAAooC,GAAAzB,EAAAzsC,MAAAzF,EAAAuL,IACAA,EAAAlM,GAAAs0C,GAAAzB,IAAAzsC,MAAA8F,IACAA,EAAAlM,GAAAgsC,GAAA6G,IAGAS,EAAA7wC,KAAA6uC,GAIA,OAAA+B,GAAAC,GA8RA,OA9mBAnC,GAAA3c,UAAA4S,EAAAxiB,QAAAwiB,EAAA4B,QACA5B,EAAA+J,WAAA,IAAAA,GAEA5J,EAAAJ,GAAAI,SAAA,SAAAxS,EAAA6f,GACA,IAAAxD,EAAA7kC,EAAAsmC,EAAAr1C,EACAq3C,EAAArJ,EAAAsJ,EACAC,EAAAxM,EAAAxT,EAAA,KAEA,GAAAggB,EACA,OAAAH,EAAA,EAAAG,EAAA3uC,MAAA,GAOA,IAJAyuC,EAAA9f,EACAyW,KACAsJ,EAAA1N,EAAA6I,UAEA4E,GAAA,CAyBA,IAAAr3C,KAtBA4zC,KAAA7kC,EAAA28B,EAAA0C,KAAAiJ,MACAtoC,IAEAsoC,IAAAzuC,MAAAmG,EAAA,GAAAtM,SAAA40C,GAEArJ,EAAA/oC,KAAAowC,OAGAzB,GAAA,GAGA7kC,EAAA48B,EAAAyC,KAAAiJ,MACAzD,EAAA7kC,EAAA0pB,QACA4c,EAAApwC,MACAqO,MAAAsgC,EAEA5zC,KAAA+O,EAAA,GAAA3B,QAAAy6B,EAAA,OAEAwP,IAAAzuC,MAAAgrC,EAAAnxC,SAIAmnC,EAAA//B,SACAkF,EAAAg9B,EAAA/rC,GAAAouC,KAAAiJ,KAAAC,EAAAt3C,MACA+O,EAAAuoC,EAAAt3C,GAAA+O,MACA6kC,EAAA7kC,EAAA0pB,QACA4c,EAAApwC,MACAqO,MAAAsgC,EACA5zC,OACAspC,QAAAv6B,IAEAsoC,IAAAzuC,MAAAgrC,EAAAnxC,SAIA,IAAAmxC,EACA,MAOA,OAAAwD,EACAC,EAAA50C,OACA40C,EACA1N,GAAA/hC,MAAA2vB,GAEAwT,EAAAxT,EAAAyW,GAAAplC,MAAA,IA+XAohC,EAAAL,GAAAK,QAAA,SAAAzS,EAAAxoB,GACA,IAAA5L,EACAq0C,KACAC,KACAF,EAAAvM,EAAAzT,EAAA,KAEA,IAAAggB,EAAA,CAMA,IAJAxoC,IACAA,EAAAg7B,EAAAxS,IAEAp0B,EAAA4L,EAAAtM,OACAU,MACAo0C,EAAAT,GAAA/nC,EAAA5L,KACAslC,GACA+O,EAAAvyC,KAAAsyC,GAEAE,EAAAxyC,KAAAsyC,IAKAA,EAAAvM,EAAAzT,EArIA,SAAAkgB,EAAAD,GACA,IAAAE,EAAAF,EAAA/0C,OAAA,EACAk1C,EAAAF,EAAAh1C,OAAA,EACAm1C,EAAA,SAAA9J,EAAA7W,EAAAkc,EAAAjK,EAAA2O,GACA,IAAAzP,EAAA15B,EAAAolC,EACAgE,EAAA,EACA30C,EAAA,IACA4wC,EAAAjG,MACAiK,KACAC,EAAA/N,EAEA/B,EAAA4F,GAAA6J,GAAA/N,EAAAzhC,KAAA,QAAA0vC,GAEAI,EAAAtN,GAAA,MAAAqN,EAAA,EAAAnlC,KAAA61B,UAAA,GACAlmC,EAAA0lC,EAAAzlC,OASA,IAPAo1C,IACA5N,EAAAhT,IAAAj7B,GAAAi7B,GAAA4gB,GAMU10C,IAAAX,GAAA,OAAA4lC,EAAAF,EAAA/kC,IAAwCA,IAAA,CAClD,GAAAw0C,GAAAvP,EAAA,CAMA,IALA15B,EAAA,EACAuoB,GAAAmR,EAAA+F,gBAAAnyC,IACAouC,EAAAhC,GACA+K,GAAA7I,GAEAwJ,EAAA2D,EAAA/oC,MACA,GAAAolC,EAAA1L,EAAAnR,GAAAj7B,EAAAm3C,GAAA,CACAjK,EAAAjkC,KAAAmjC,GACA,MAGAyP,IACAlN,EAAAsN,GAKAP,KAEAtP,GAAA0L,GAAA1L,IACA0P,IAIAhK,GACAiG,EAAA9uC,KAAAmjC,IAgBA,GATA0P,GAAA30C,EASAu0C,GAAAv0C,IAAA20C,EAAA,CAEA,IADAppC,EAAA,EACAolC,EAAA0D,EAAA9oC,MACAolC,EAAAC,EAAAgE,EAAA9gB,EAAAkc,GAGA,GAAArF,EAAA,CAEA,GAAAgK,EAAA,EACA,KAAA30C,KACA4wC,EAAA5wC,IAAA40C,EAAA50C,KACA40C,EAAA50C,GAAAm1B,EAAAv5B,KAAAmqC,IAMA6O,EAAAhC,GAAAgC,GAIA9yC,EAAA8L,MAAAm4B,EAAA6O,GAGAF,IAAA/J,GAAAiK,EAAAt1C,OAAA,GACAq1C,EAAAN,EAAA/0C,OAAA,GAEAknC,GAAAkI,WAAA3I,GAUA,OALA2O,IACAlN,EAAAsN,EACAhO,EAAA+N,GAGAjE,GAGA,OAAA2D,EACA5I,GAAA8I,GACAA,EAyBAM,CAAAT,EAAAD,KAGAjgB,WAEA,OAAAggB,GAYA9sB,EAAAkf,GAAAlf,OAAA,SAAA8M,EAAAN,EAAAiS,EAAA4E,GACA,IAAA3qC,EAAAkyC,EAAAtW,EAAA/+B,EAAAmI,EACAgwC,EAAA,mBAAA5gB,KACAxoB,GAAA++B,GAAA/D,EAAAxS,EAAA4gB,EAAA5gB,aAMA,GAJA2R,QAIA,IAAAn6B,EAAAtM,OAAA,CAIA,IADA4yC,EAAAtmC,EAAA,GAAAA,EAAA,GAAAnG,MAAA,IACAnG,OAAA,WAAAs8B,EAAAsW,EAAA,IAAAr1C,MACA,IAAAi3B,EAAAlG,UAAAuZ,GAAAV,EAAAwI,SAAAiD,EAAA,GAAAr1C,MAAA,CAGA,KADAi3B,GAAA2S,EAAAzhC,KAAA,GAAA42B,EAAAuK,QAAA,GAAAl8B,QAAAy/B,EAAAC,IAAA7V,QAAA,IAEA,OAAAiS,EAGIiP,IACJlhB,IAAAhzB,YAGAszB,IAAA3uB,MAAAysC,EAAA5c,QAAAnlB,MAAA7Q,QAKA,IADAU,EAAA4oC,EAAA,aAAAlkB,KAAA0P,GAAA,EAAA8d,EAAA5yC,OACAU,MACA47B,EAAAsW,EAAAlyC,IAGAymC,EAAAwI,SAAApyC,EAAA++B,EAAA/+B,QAGA,IAAAmI,EAAAyhC,EAAAzhC,KAAAnI,MAEA8tC,EAAA3lC,EACA42B,EAAAuK,QAAA,GAAAl8B,QAAAy/B,EAAAC,IACAF,EAAA/kB,KAAAwtB,EAAA,GAAAr1C,OAAAyuC,GAAAxX,EAAAhzB,aAAAgzB,IACA,CAKA,GAFAoe,EAAA5wC,OAAAtB,EAAA,KACAo0B,EAAAuW,EAAArrC,QAAA+rC,GAAA6G,IAGA,OADApwC,EAAA8L,MAAAm4B,EAAA4E,GACA5E,EAGA,OAeA,OAPAiP,GAAAnO,EAAAzS,EAAAxoB,IACA++B,EACA7W,GACAqT,EACApB,GACAjS,GAAA2V,EAAA/kB,KAAA0P,IAAAkX,GAAAxX,EAAAhzB,aAAAgzB,GAEAiS,GAMAhC,EAAA8K,WAAAvJ,EAAAxsB,MAAA,IAAArS,KAAAqhC,GAAAviC,KAAA,MAAA+/B,EAIAvB,EAAA6K,mBAAA5H,EAGAC,IAIAlD,EAAAmK,aAAAtC,GAAA,SAAAxmC,GAEA,SAAAA,EAAA0oC,wBAAAj1C,EAAA6X,cAAA,eAMAk7B,GAAA,SAAAxmC,GAEA,OADAA,EAAAwL,UAAA,mBACA,MAAAxL,EAAAiS,WAAAnX,aAAA,WAEA2rC,GAAA,kCAAA5G,EAAAz+B,EAAAmgC,GACA,IAAAA,EACA,OAAA1B,EAAA/kC,aAAAsG,EAAA,SAAAA,EAAAzJ,cAAA,OAOAgnC,EAAAqE,YAAAwD,GAAA,SAAAxmC,GAGA,OAFAA,EAAAwL,UAAA,WACAxL,EAAAiS,WAAAsB,aAAA,YACA,KAAAvT,EAAAiS,WAAAnX,aAAA,YAEA2rC,GAAA,iBAAA5G,EAAAz+B,EAAAmgC,GACA,IAAAA,GAAA,UAAA1B,EAAAnoC,SAAAC,cACA,OAAAkoC,EAAAgQ,eAOArJ,GAAA,SAAAxmC,GACA,aAAAA,EAAAlF,aAAA,eAEA2rC,GAAA5D,EAAA,SAAAhD,EAAAz+B,EAAAmgC,GACA,IAAAr/B,EACA,IAAAq/B,EACA,WAAA1B,EAAAz+B,KAAAzJ,eACAuK,EAAA29B,EAAAqI,iBAAA9mC,KAAAc,EAAAknC,UACAlnC,EAAA6I,MACA,OAKAq2B,GAhsEA,CAksEC5tC,GAID6rC,EAAAz/B,KAAAwhC,EACA/B,EAAA6J,KAAA9H,EAAAuI,UAGAtK,EAAA6J,KAAA,KAAA7J,EAAA6J,KAAAjG,QACA5D,EAAAiK,WAAAjK,EAAAplB,OAAAmnB,EAAAkI,WACAjK,EAAA7B,KAAA4D,EAAAE,QACAjC,EAAAyQ,SAAA1O,EAAAG,MACAlC,EAAA6C,SAAAd,EAAAc,SACA7C,EAAA0Q,eAAA3O,EAAAiI,OAKA,IAAAlnC,EAAA,SAAA09B,EAAA19B,EAAA6tC,GAIA,IAHA,IAAA3E,KACA4E,OAAA38C,IAAA08C,GAEAnQ,IAAA19B,KAAA,IAAA09B,EAAArX,UACA,OAAAqX,EAAArX,SAAA,CACA,GAAAynB,GAAA5Q,EAAAQ,GAAApK,GAAAua,GACA,MAEA3E,EAAA3uC,KAAAmjC,GAGA,OAAAwL,GAIA6E,EAAA,SAAA3mC,EAAAs2B,GAGA,IAFA,IAAAwL,KAEQ9hC,EAAGA,IAAAuJ,YACX,IAAAvJ,EAAAif,UAAAjf,IAAAs2B,GACAwL,EAAA3uC,KAAA6M,GAIA,OAAA8hC,GAIA8E,EAAA9Q,EAAA6J,KAAA1iC,MAAAw9B,aAIA,SAAAtsC,EAAAmoC,EAAAz+B,GAEA,OAAAy+B,EAAAnoC,UAAAmoC,EAAAnoC,SAAAC,gBAAAyJ,EAAAzJ,cAGA,IAAAy4C,EAAA,kEAKA,SAAAC,EAAAlH,EAAAmH,EAAAhF,GACA,OAAA1M,EAAA0R,GACAjR,EAAAwB,KAAAsI,EAAA,SAAAtJ,EAAAjlC,GACA,QAAA01C,EAAA95C,KAAAqpC,EAAAjlC,EAAAilC,KAAAyL,IAKAgF,EAAA9nB,SACA6W,EAAAwB,KAAAsI,EAAA,SAAAtJ,GACA,OAAAA,IAAAyQ,IAAAhF,IAKA,iBAAAgF,EACAjR,EAAAwB,KAAAsI,EAAA,SAAAtJ,GACA,OAAAl5B,EAAAnQ,KAAA85C,EAAAzQ,IAAA,IAAAyL,IAKAjM,EAAA/9B,OAAAgvC,EAAAnH,EAAAmC,GAGAjM,EAAA/9B,OAAA,SAAA4nC,EAAAvJ,EAAA2L,GACA,IAAAzL,EAAAF,EAAA,GAMA,OAJA2L,IACApC,EAAA,QAAAA,EAAA,KAGA,IAAAvJ,EAAAzlC,QAAA,IAAA2lC,EAAArX,SACA6W,EAAAz/B,KAAAwoC,gBAAAvI,EAAAqJ,IAAArJ,MAGAR,EAAAz/B,KAAAmhC,QAAAmI,EAAA7J,EAAAwB,KAAAlB,EAAA,SAAAE,GACA,WAAAA,EAAArX,aAIA6W,EAAAllC,GAAAkB,QACAuE,KAAA,SAAAovB,GACA,IAAAp0B,EAAAogB,EACA/gB,EAAAjG,KAAAkG,OACAq2C,EAAAv8C,KAEA,oBAAAg7B,EACA,OAAAh7B,KAAA0rC,UAAAL,EAAArQ,GAAA1tB,OAAA,WACA,IAAA1G,EAAA,EAAgBA,EAAAX,EAASW,IACzB,GAAAykC,EAAA6C,SAAAqO,EAAA31C,GAAA5G,MACA,YAQA,IAFAgnB,EAAAhnB,KAAA0rC,cAEA9kC,EAAA,EAAcA,EAAAX,EAASW,IACvBykC,EAAAz/B,KAAAovB,EAAAuhB,EAAA31C,GAAAogB,GAGA,OAAA/gB,EAAA,EAAAolC,EAAAiK,WAAAtuB,MAEA1Z,OAAA,SAAA0tB,GACA,OAAAh7B,KAAA0rC,UAAA2Q,EAAAr8C,KAAAg7B,OAAA,KAEAsc,IAAA,SAAAtc,GACA,OAAAh7B,KAAA0rC,UAAA2Q,EAAAr8C,KAAAg7B,OAAA,KAEAyG,GAAA,SAAAzG,GACA,QAAAqhB,EACAr8C,KAIA,iBAAAg7B,GAAAmhB,EAAA7wB,KAAA0P,GACAqQ,EAAArQ,GACAA,OACA,GACA90B,UASA,IAAAs2C,EAMApM,EAAA,uCAEA/E,EAAAllC,GAAA0O,KAAA,SAAAmmB,EAAAN,EAAAid,GACA,IAAAnlC,EAAAq5B,EAGA,IAAA7Q,EACA,OAAAh7B,KAQA,GAHA23C,KAAA6E,EAGA,iBAAAxhB,EAAA,CAaA,KAPAxoB,EALA,MAAAwoB,EAAA,IACA,MAAAA,IAAA90B,OAAA,IACA80B,EAAA90B,QAAA,GAGA,KAAA80B,EAAA,MAGAoV,EAAAyB,KAAA7W,MAIAxoB,EAAA,IAAAkoB,EA6CI,OAAAA,KAAA8Q,QACJ9Q,GAAAid,GAAA/rC,KAAAovB,GAKAh7B,KAAAyrC,YAAA/Q,GAAA9uB,KAAAovB,GAhDA,GAAAxoB,EAAA,IAYA,GAXAkoB,eAAA2Q,EAAA3Q,EAAA,GAAAA,EAIA2Q,EAAAtgB,MAAA/qB,KAAAqrC,EAAAoR,UACAjqC,EAAA,GACAkoB,KAAAlG,SAAAkG,EAAAkX,eAAAlX,EAAAj7B,GACA,IAIA28C,EAAA9wB,KAAA9Y,EAAA,KAAA64B,EAAAxqC,cAAA65B,GACA,IAAAloB,KAAAkoB,EAGAkQ,EAAA5qC,KAAAwS,IACAxS,KAAAwS,GAAAkoB,EAAAloB,IAIAxS,KAAA8X,KAAAtF,EAAAkoB,EAAAloB,IAKA,OAAAxS,KAYA,OARA6rC,EAAApsC,EAAAqyC,eAAAt/B,EAAA,OAKAxS,KAAA,GAAA6rC,EACA7rC,KAAAkG,OAAA,GAEAlG,KAcG,OAAAg7B,EAAAxG,UACHx0B,KAAA,GAAAg7B,EACAh7B,KAAAkG,OAAA,EACAlG,MAIG4qC,EAAA5P,QACH17B,IAAAq4C,EAAA+E,MACA/E,EAAA+E,MAAA1hB,GAGAA,EAAAqQ,GAGAA,EAAAqB,UAAA1R,EAAAh7B,QAIAy6B,UAAA4Q,EAAAllC,GAGAq2C,EAAAnR,EAAA5rC,GAGA,IAAAk9C,EAAA,iCAGAC,GACAjxC,UAAA,EACA4S,UAAA,EACA+Y,MAAA,EACAulB,MAAA,GAoFA,SAAAC,EAAAhK,EAAA3kC,GACA,MAAA2kC,IAAA3kC,KAAA,IAAA2kC,EAAAte,WACA,OAAAse,EAnFAzH,EAAAllC,GAAAkB,QACAowC,IAAA,SAAAr1C,GACA,IAAAoZ,EAAA6vB,EAAAjpC,EAAApC,MACA4lB,EAAApK,EAAAtV,OAEA,OAAAlG,KAAAsN,OAAA,WAEA,IADA,IAAA1G,EAAA,EACUA,EAAAgf,EAAOhf,IACjB,GAAAykC,EAAA6C,SAAAluC,KAAAwb,EAAA5U,IACA,YAMA43B,QAAA,SAAAmX,EAAAjb,GACA,IAAAoY,EACAlsC,EAAA,EACAgf,EAAA5lB,KAAAkG,OACAmxC,KACA77B,EAAA,iBAAAm6B,GAAAtK,EAAAsK,GAGA,IAAAwG,EAAA7wB,KAAAqqB,GACA,KAAU/uC,EAAAgf,EAAOhf,IACjB,IAAAksC,EAAA9yC,KAAA4G,GAA0BksC,OAAApY,EAAwBoY,IAAAprC,WAGlD,GAAAorC,EAAAte,SAAA,KAAAhZ,EACAA,EAAArX,MAAA2uC,IAAA,EAGA,IAAAA,EAAAte,UACA6W,EAAAz/B,KAAAwoC,gBAAAtB,EAAA6C,IAAA,CAEA0B,EAAA3uC,KAAAoqC,GACA,MAMA,OAAA9yC,KAAA0rC,UAAA2L,EAAAnxC,OAAA,EAAAmlC,EAAAiK,WAAA+B,OAIAlzC,MAAA,SAAA0nC,GAGA,OAAAA,EAKA,iBAAAA,EACAl5B,EAAAnQ,KAAA6oC,EAAAQ,GAAA7rC,KAAA,IAIA2S,EAAAnQ,KAAAxC,KAGA6rC,EAAAL,OAAAK,EAAA,GAAAA,GAZA7rC,KAAA,IAAAA,KAAA,GAAA0H,WAAA1H,KAAA8rC,QAAAiR,UAAA72C,QAAA,GAgBApF,IAAA,SAAAk6B,EAAAN,GACA,OAAA16B,KAAA0rC,UACAL,EAAAiK,WACAjK,EAAAtgB,MAAA/qB,KAAAwhC,MAAA6J,EAAArQ,EAAAN,OAKAsiB,QAAA,SAAAhiB,GACA,OAAAh7B,KAAAc,IAAA,MAAAk6B,EACAh7B,KAAA4rC,WAAA5rC,KAAA4rC,WAAAt+B,OAAA0tB,OAUAqQ,EAAA7kC,MACAie,OAAA,SAAAonB,GACA,IAAApnB,EAAAonB,EAAAnkC,WACA,OAAA+c,GAAA,KAAAA,EAAA+P,SAAA/P,EAAA,MAEAw4B,QAAA,SAAApR,GACA,OAAA19B,EAAA09B,EAAA,eAEAqR,aAAA,SAAArR,EAAAjlC,EAAAo1C,GACA,OAAA7tC,EAAA09B,EAAA,aAAAmQ,IAEA1kB,KAAA,SAAAuU,GACA,OAAAiR,EAAAjR,EAAA,gBAEAgR,KAAA,SAAAhR,GACA,OAAAiR,EAAAjR,EAAA,oBAEAsR,QAAA,SAAAtR,GACA,OAAA19B,EAAA09B,EAAA,gBAEAkR,QAAA,SAAAlR,GACA,OAAA19B,EAAA09B,EAAA,oBAEAuR,UAAA,SAAAvR,EAAAjlC,EAAAo1C,GACA,OAAA7tC,EAAA09B,EAAA,cAAAmQ,IAEAqB,UAAA,SAAAxR,EAAAjlC,EAAAo1C,GACA,OAAA7tC,EAAA09B,EAAA,kBAAAmQ,IAEAE,SAAA,SAAArQ,GACA,OAAAqQ,GAAArQ,EAAAnkC,gBAA0CuW,WAAA4tB,IAE1ClgC,SAAA,SAAAkgC,GACA,OAAAqQ,EAAArQ,EAAA5tB,aAEAM,SAAA,SAAAstB,GACA,OAAAnoC,EAAAmoC,EAAA,UACAA,EAAAyR,iBAMA55C,EAAAmoC,EAAA,cACAA,IAAA0R,SAAA1R,GAGAR,EAAAtgB,SAAA8gB,EAAA9tB,eAEC,SAAA3Q,EAAAjH,GACDklC,EAAAllC,GAAAiH,GAAA,SAAA4uC,EAAAhhB,GACA,IAAAqc,EAAAhM,EAAAt/B,IAAA/L,KAAAmG,EAAA61C,GAuBA,MArBA,UAAA5uC,EAAAf,OAAA,KACA2uB,EAAAghB,GAGAhhB,GAAA,iBAAAA,IACAqc,EAAAhM,EAAA/9B,OAAA0tB,EAAAqc,IAGAr3C,KAAAkG,OAAA,IAGA02C,EAAAxvC,IACAi+B,EAAAiK,WAAA+B,GAIAsF,EAAArxB,KAAAle,IACAiqC,EAAArd,WAIAh6B,KAAA0rC,UAAA2L,MAGA,IAAAmG,EAAA,oBAsOA,SAAAC,EAAAC,GACA,OAAAA,EAEA,SAAAC,EAAAC,GACA,MAAAA,EAGA,SAAAC,EAAA9mC,EAAA+mC,EAAAC,EAAAC,GACA,IAAAlhB,EAEA,IAGA/lB,GAAA6zB,EAAA9N,EAAA/lB,EAAAknC,SACAnhB,EAAAt6B,KAAAuU,GAAAs3B,KAAAyP,GAAAI,KAAAH,GAGGhnC,GAAA6zB,EAAA9N,EAAA/lB,EAAAonC,MACHrhB,EAAAt6B,KAAAuU,EAAA+mC,EAAAC,GAQAD,EAAAtpC,WAAAlV,GAAAyX,GAAA1K,MAAA2xC,IAME,MAAAjnC,GAIFgnC,EAAAvpC,WAAAlV,GAAAyX,KAvOAs0B,EAAA+S,UAAA,SAAAr+C,GAIAA,EAAA,iBAAAA,EAlCA,SAAAA,GACA,IAAAs+C,KAIA,OAHAhT,EAAA7kC,KAAAzG,EAAAyS,MAAAgrC,OAAA,SAAAp9C,EAAAk+C,GACAD,EAAAC,IAAA,IAEAD,EA8BAE,CAAAx+C,GACAsrC,EAAAhkC,UAAmBtH,GAEnB,IACAy+C,EAGAC,EAGAC,EAGAC,EAGA/P,KAGAgQ,KAGAC,GAAA,EAGAC,EAAA,WAQA,IALAH,KAAA5+C,EAAAg/C,KAIAL,EAAAF,GAAA,EACUI,EAAA14C,OAAc24C,GAAA,EAExB,IADAJ,EAAAG,EAAA1iB,UACA2iB,EAAAjQ,EAAA1oC,SAGA,IAAA0oC,EAAAiQ,GAAArqC,MAAAiqC,EAAA,GAAAA,EAAA,KACA1+C,EAAAi/C,cAGAH,EAAAjQ,EAAA1oC,OACAu4C,GAAA,GAMA1+C,EAAA0+C,SACAA,GAAA,GAGAD,GAAA,EAGAG,IAIA/P,EADA6P,KAKA,KAMAlC,GAGAz7C,IAAA,WA2BA,OA1BA8tC,IAGA6P,IAAAD,IACAK,EAAAjQ,EAAA1oC,OAAA,EACA04C,EAAAl2C,KAAA+1C,IAGA,SAAA39C,EAAAsT,GACAi3B,EAAA7kC,KAAA4N,EAAA,SAAAhU,EAAA6sC,GACArC,EAAAqC,GACAltC,EAAAkmB,QAAAs2B,EAAA9E,IAAAxK,IACA2B,EAAAlmC,KAAAukC,GAEQA,KAAA/mC,QAAA,WAAAklC,EAAA6B,IAGRnsC,EAAAmsC,KATA,CAYM54B,WAENoqC,IAAAD,GACAM,KAGA9+C,MAIAuC,OAAA,WAYA,OAXA8oC,EAAA7kC,KAAA6N,UAAA,SAAAjU,EAAA6sC,GAEA,IADA,IAAA9oC,GACAA,EAAAknC,EAAAv/B,QAAAmhC,EAAA2B,EAAAzqC,KAAA,GACAyqC,EAAA1mC,OAAA/D,EAAA,GAGAA,GAAA06C,GACAA,MAIA7+C,MAKAy3C,IAAA,SAAAtxC,GACA,OAAAA,EACAklC,EAAAv/B,QAAA3F,EAAAyoC,IAAA,EACAA,EAAA1oC,OAAA,GAIAshC,MAAA,WAIA,OAHAoH,IACAA,MAEA5uC,MAMAi/C,QAAA,WAGA,OAFAN,EAAAC,KACAhQ,EAAA6P,EAAA,GACAz+C,MAEAqxC,SAAA,WACA,OAAAzC,GAMAsQ,KAAA,WAKA,OAJAP,EAAAC,KACAH,GAAAD,IACA5P,EAAA6P,EAAA,IAEAz+C,MAEA2+C,OAAA,WACA,QAAAA,GAIAQ,SAAA,SAAAzkB,EAAAtmB,GASA,OARAuqC,IAEAvqC,GAAAsmB,GADAtmB,SACA/H,MAAA+H,EAAA/H,QAAA+H,GACAwqC,EAAAl2C,KAAA0L,GACAoqC,GACAM,KAGA9+C,MAIA8+C,KAAA,WAEA,OADAvC,EAAA4C,SAAAn/C,KAAAqU,WACArU,MAIA0+C,MAAA,WACA,QAAAA,IAIA,OAAAnC,GA4CAlR,EAAAhkC,QAEA+3C,SAAA,SAAAC,GACA,IAAAC,IAIA,oBAAAjU,EAAA+S,UAAA,UACA/S,EAAA+S,UAAA,cACA,iBAAA/S,EAAA+S,UAAA,eACA/S,EAAA+S,UAAA,8BACA,gBAAA/S,EAAA+S,UAAA,eACA/S,EAAA+S,UAAA,8BAEAhmB,EAAA,UACA6lB,GACA7lB,MAAA,WACA,OAAAA,GAEAmnB,OAAA,WAEA,OADAC,EAAAnR,KAAAh6B,WAAA6pC,KAAA7pC,WACArU,MAEAy/C,MAAA,SAAAt5C,GACA,OAAA83C,EAAAE,KAAA,KAAAh4C,IAIAu5C,KAAA,WACA,IAAAC,EAAAtrC,UAEA,OAAAg3B,EAAA+T,SAAA,SAAAQ,GACAvU,EAAA7kC,KAAA84C,EAAA,SAAA14C,EAAAi5C,GAGA,IAAA15C,EAAAykC,EAAA+U,EAAAE,EAAA,MAAAF,EAAAE,EAAA,IAKAL,EAAAK,EAAA,eACA,IAAAC,EAAA35C,KAAAqO,MAAAxU,KAAAqU,WACAyrC,GAAAlV,EAAAkV,EAAA7B,SACA6B,EAAA7B,UACA8B,SAAAH,EAAAI,QACA3R,KAAAuR,EAAA9B,SACAI,KAAA0B,EAAA7B,QAEA6B,EAAAC,EAAA,WACA7/C,KACAmG,GAAA25C,GAAAzrC,eAKAsrC,EAAA,OACM1B,WAENE,KAAA,SAAA8B,EAAAC,EAAAC,GACA,IAAAC,EAAA,EACA,SAAAtC,EAAAuC,EAAAb,EAAA7M,EAAA2N,GACA,kBACA,IAAArsC,EAAAjU,KACAoU,EAAAC,UACAksC,EAAA,WACA,IAAAT,EAAA3B,EAKA,KAAAkC,EAAAD,GAAA,CAQA,IAJAN,EAAAnN,EAAAn+B,MAAAP,EAAAG,MAIAorC,EAAAvB,UACA,UAAAuC,UAAA,4BAOArC,EAAA2B,IAKA,iBAAAA,GACA,mBAAAA,IACAA,EAAA3B,KAGAvT,EAAAuT,GAGAmC,EACAnC,EAAA37C,KACAs9C,EACAhC,EAAAsC,EAAAZ,EAAA/B,EAAA6C,GACAxC,EAAAsC,EAAAZ,EAAA7B,EAAA2C,KAOAF,IAEAjC,EAAA37C,KACAs9C,EACAhC,EAAAsC,EAAAZ,EAAA/B,EAAA6C,GACAxC,EAAAsC,EAAAZ,EAAA7B,EAAA2C,GACAxC,EAAAsC,EAAAZ,EAAA/B,EACA+B,EAAAiB,eASA9N,IAAA8K,IACAxpC,OAAA3U,EACA8U,GAAA0rC,KAKAQ,GAAAd,EAAAkB,aAAAzsC,EAAAG,MAKAusC,EAAAL,EACAC,EACA,WACA,IACAA,IACW,MAAAz2B,GAEXuhB,EAAA+T,SAAAwB,eACAvV,EAAA+T,SAAAwB,cAAA92B,EACA62B,EAAAE,YAMAR,EAAA,GAAAD,IAIAzN,IAAAgL,IACA1pC,OAAA3U,EACA8U,GAAA0V,IAGA01B,EAAAsB,WAAA7sC,EAAAG,MASAisC,EACAM,KAKAtV,EAAA+T,SAAA2B,eACAJ,EAAAE,WAAAxV,EAAA+T,SAAA2B,gBAEAvhD,EAAA+U,WAAAosC,KAKA,OAAAtV,EAAA+T,SAAA,SAAAQ,GAGAN,EAAA,MAAAx+C,IACAg9C,EACA,EACA8B,EACAhV,EAAAuV,GACAA,EACA1C,EACAmC,EAAAa,aAKAnB,EAAA,MAAAx+C,IACAg9C,EACA,EACA8B,EACAhV,EAAAqV,GACAA,EACAxC,IAKA6B,EAAA,MAAAx+C,IACAg9C,EACA,EACA8B,EACAhV,EAAAsV,GACAA,EACAvC,MAGMM,WAKNA,QAAA,SAAAzxB,GACA,aAAAA,EAAA6e,EAAAhkC,OAAAmlB,EAAAyxB,OAGAuB,KAkEA,OA/DAnU,EAAA7kC,KAAA84C,EAAA,SAAA14C,EAAAi5C,GACA,IAAAjR,EAAAiR,EAAA,GACAmB,EAAAnB,EAAA,GAKA5B,EAAA4B,EAAA,IAAAjR,EAAA9tC,IAGAkgD,GACApS,EAAA9tC,IACA,WAIAs3B,EAAA4oB,GAKA1B,EAAA,EAAA14C,GAAA,GAAAq4C,QAIAK,EAAA,EAAA14C,GAAA,GAAAq4C,QAGAK,EAAA,MAAAJ,KAGAI,EAAA,MAAAJ,MAOAtQ,EAAA9tC,IAAA++C,EAAA,GAAAf,MAKAU,EAAAK,EAAA,eAEA,OADAL,EAAAK,EAAA,WAAA7/C,OAAAw/C,OAAAlgD,EAAAU,KAAAqU,WACArU,MAMAw/C,EAAAK,EAAA,WAAAjR,EAAAuQ,WAIAlB,UAAAuB,GAGAH,GACAA,EAAA78C,KAAAg9C,KAIAA,GAIAyB,KAAA,SAAAC,GACA,IAGAC,EAAA9sC,UAAAnO,OAGAU,EAAAu6C,EAGAC,EAAA5mB,MAAA5zB,GACAy6C,EAAAh1C,EAAA7J,KAAA6R,WAGAitC,EAAAjW,EAAA+T,WAGAmC,EAAA,SAAA36C,GACA,gBAAAmQ,GACAqqC,EAAAx6C,GAAA5G,KACAqhD,EAAAz6C,GAAAyN,UAAAnO,OAAA,EAAAmG,EAAA7J,KAAA6R,WAAA0C,IACAoqC,GACAG,EAAAZ,YAAAU,EAAAC,KAMA,GAAAF,GAAA,IACAtD,EAAAqD,EAAAI,EAAAjT,KAAAkT,EAAA36C,IAAAk3C,QAAAwD,EAAAvD,QACAoD,GAGA,YAAAG,EAAAlpB,SACAwS,EAAAyW,EAAAz6C,IAAAy6C,EAAAz6C,GAAAu3C,OAEA,OAAAmD,EAAAnD,OAKA,KAAAv3C,KACAi3C,EAAAwD,EAAAz6C,GAAA26C,EAAA36C,GAAA06C,EAAAvD,QAGA,OAAAuD,EAAArD,aAOA,IAAAuD,EAAA,yDAEAnW,EAAA+T,SAAAwB,cAAA,SAAAv1C,EAAAo2C,GAIAjiD,EAAAy5B,SAAAz5B,EAAAy5B,QAAAyoB,MAAAr2C,GAAAm2C,EAAAl2B,KAAAjgB,EAAA+B,OACA5N,EAAAy5B,QAAAyoB,KAAA,8BAAAr2C,EAAAs2C,QAAAt2C,EAAAo2C,UAOApW,EAAAuW,eAAA,SAAAv2C,GACA7L,EAAA+U,WAAA,WACA,MAAAlJ,KAQA,IAAAw2C,EAAAxW,EAAA+T,WAkDA,SAAA0C,IACAriD,EAAAsiD,oBAAA,mBAAAD,GACAtiD,EAAAuiD,oBAAA,OAAAD,GACAzW,EAAAqR,QAnDArR,EAAAllC,GAAAu2C,MAAA,SAAAv2C,GAYA,OAVA07C,EACA1D,KAAAh4C,GAKAs5C,MAAA,SAAAp0C,GACAggC,EAAAuW,eAAAv2C,KAGArL,MAGAqrC,EAAAhkC,QAGA+kC,SAAA,EAIA4V,UAAA,EAGAtF,MAAA,SAAAuF,KAGA,IAAAA,IAAA5W,EAAA2W,UAAA3W,EAAAe,WAKAf,EAAAe,SAAA,GAGA,IAAA6V,KAAA5W,EAAA2W,UAAA,GAKAH,EAAAnB,YAAAjhD,GAAA4rC,QAIAA,EAAAqR,MAAAyB,KAAA0D,EAAA1D,KAaA,aAAA1+C,EAAAwnB,YACA,YAAAxnB,EAAAwnB,aAAAxnB,EAAA+zC,gBAAA0O,SAGA1iD,EAAA+U,WAAA82B,EAAAqR,QAKAj9C,EAAAm0C,iBAAA,mBAAAkO,GAGAtiD,EAAAo0C,iBAAA,OAAAkO,IAQA,IAAAK,EAAA,SAAAxW,EAAAxlC,EAAAuM,EAAAqE,EAAAqrC,EAAAC,EAAAC,GACA,IAAA17C,EAAA,EACAX,EAAA0lC,EAAAzlC,OACAq8C,EAAA,MAAA7vC,EAGA,cAAA04B,EAAA14B,GAEA,IAAA9L,KADAw7C,GAAA,EACA1vC,EACAyvC,EAAAxW,EAAAxlC,EAAAS,EAAA8L,EAAA9L,IAAA,EAAAy7C,EAAAC,QAIE,QAAAhjD,IAAAyX,IACFqrC,GAAA,EAEAxX,EAAA7zB,KACAurC,GAAA,GAGAC,IAGAD,GACAn8C,EAAA3D,KAAAmpC,EAAA50B,GACA5Q,EAAA,OAIAo8C,EAAAp8C,EACAA,EAAA,SAAA0lC,EAAAn5B,EAAAqE,GACA,OAAAwrC,EAAA//C,KAAA6oC,EAAAQ,GAAA90B,MAKA5Q,GACA,KAAUS,EAAAX,EAASW,IACnBT,EACAwlC,EAAA/kC,GAAA8L,EAAA4vC,EACAvrC,EACAA,EAAAvU,KAAAmpC,EAAA/kC,KAAAT,EAAAwlC,EAAA/kC,GAAA8L,KAMA,OAAA0vC,EACAzW,EAIA4W,EACAp8C,EAAA3D,KAAAmpC,GAGA1lC,EAAAE,EAAAwlC,EAAA,GAAAj5B,GAAA2vC,GAKAG,EAAA,QACAC,EAAA,YAGA,SAAAC,EAAAn1B,EAAAo1B,GACA,OAAAA,EAAAz+C,cAMA,SAAA0+C,EAAAjb,GACA,OAAAA,EAAA92B,QAAA2xC,EAAA,OAAA3xC,QAAA4xC,EAAAC,GAEA,IAAAG,EAAA,SAAAC,GAQA,WAAAA,EAAAtuB,UAAA,IAAAsuB,EAAAtuB,YAAAsuB,EAAAtuB,UAMA,SAAAuuB,IACA/iD,KAAAksC,QAAAb,EAAAa,QAAA6W,EAAAC,MAGAD,EAAAC,IAAA,EAEAD,EAAAtoB,WAEA3f,MAAA,SAAAgoC,GAGA,IAAA/rC,EAAA+rC,EAAA9iD,KAAAksC,SA4BA,OAzBAn1B,IACAA,KAKA8rC,EAAAC,KAIAA,EAAAtuB,SACAsuB,EAAA9iD,KAAAksC,SAAAn1B,EAMAszB,OAAA4Y,eAAAH,EAAA9iD,KAAAksC,SACAn1B,QACAmsC,cAAA,MAMAnsC,GAEA+pB,IAAA,SAAAgiB,EAAAxiD,EAAAyW,GACA,IAAAxF,EACAuJ,EAAA9a,KAAA8a,MAAAgoC,GAIA,oBAAAxiD,EACAwa,EAAA8nC,EAAAtiD,IAAAyW,OAMA,IAAAxF,KAAAjR,EACAwa,EAAA8nC,EAAArxC,IAAAjR,EAAAiR,GAGA,OAAAuJ,GAEA0mB,IAAA,SAAAshB,EAAApwC,GACA,YAAApT,IAAAoT,EACA1S,KAAA8a,MAAAgoC,GAGAA,EAAA9iD,KAAAksC,UAAA4W,EAAA9iD,KAAAksC,SAAA0W,EAAAlwC,KAEAyvC,OAAA,SAAAW,EAAApwC,EAAAqE,GAaA,YAAAzX,IAAAoT,GACAA,GAAA,iBAAAA,QAAApT,IAAAyX,EAEA/W,KAAAwhC,IAAAshB,EAAApwC,IASA1S,KAAA8gC,IAAAgiB,EAAApwC,EAAAqE,QAIAzX,IAAAyX,IAAArE,IAEAnQ,OAAA,SAAAugD,EAAApwC,GACA,IAAA9L,EACAkU,EAAAgoC,EAAA9iD,KAAAksC,SAEA,QAAA5sC,IAAAwb,EAAA,CAIA,QAAAxb,IAAAoT,EAAA,CAkBA9L,GAXA8L,EAJA8nB,MAAA55B,QAAA8R,GAIAA,EAAA3G,IAAA62C,IAEAlwC,EAAAkwC,EAAAlwC,MAIAoI,GACApI,GACAA,EAAAF,MAAAgrC,QAGAt3C,OAEA,KAAAU,YACAkU,EAAApI,EAAA9L,UAKAtH,IAAAoT,GAAA24B,EAAAmB,cAAA1xB,MAMAgoC,EAAAtuB,SACAsuB,EAAA9iD,KAAAksC,cAAA5sC,SAEAwjD,EAAA9iD,KAAAksC,YAIAiX,QAAA,SAAAL,GACA,IAAAhoC,EAAAgoC,EAAA9iD,KAAAksC,SACA,YAAA5sC,IAAAwb,IAAAuwB,EAAAmB,cAAA1xB,KAGA,IAAAsoC,EAAA,IAAAL,EAEAM,EAAA,IAAAN,EAcAO,GAAA,gCACAC,GAAA,SA2BA,SAAAC,GAAA3X,EAAAn5B,EAAApS,GACA,IAAA8M,EAIA,QAAA9N,IAAAgB,GAAA,IAAAurC,EAAArX,SAIA,GAHApnB,EAAA,QAAAsF,EAAA7B,QAAA0yC,GAAA,OAAA5/C,cAGA,iBAFArD,EAAAurC,EAAA/kC,aAAAsG,IAEA,CACA,IACA9M,EApCA,SAAAA,GACA,eAAAA,GAIA,UAAAA,IAIA,SAAAA,EACA,KAIAA,OAAA,IACAA,EAGAgjD,GAAAh4B,KAAAhrB,GACAuiC,KAAAC,MAAAxiC,GAGAA,GAcAmjD,CAAAnjD,GACI,MAAAwpB,IAGJu5B,EAAAviB,IAAA+K,EAAAn5B,EAAApS,QAEAA,OAAAhB,EAGA,OAAAgB,EAGA+qC,EAAAhkC,QACA87C,QAAA,SAAAtX,GACA,OAAAwX,EAAAF,QAAAtX,IAAAuX,EAAAD,QAAAtX,IAGAvrC,KAAA,SAAAurC,EAAAz+B,EAAA9M,GACA,OAAA+iD,EAAAlB,OAAAtW,EAAAz+B,EAAA9M,IAGAojD,WAAA,SAAA7X,EAAAz+B,GACAi2C,EAAA9gD,OAAAspC,EAAAz+B,IAKAu2C,MAAA,SAAA9X,EAAAz+B,EAAA9M,GACA,OAAA8iD,EAAAjB,OAAAtW,EAAAz+B,EAAA9M,IAGAsjD,YAAA,SAAA/X,EAAAz+B,GACAg2C,EAAA7gD,OAAAspC,EAAAz+B,MAIAi+B,EAAAllC,GAAAkB,QACA/G,KAAA,SAAAoS,EAAAqE,GACA,IAAAnQ,EAAAwG,EAAA9M,EACAurC,EAAA7rC,KAAA,GACA0yC,EAAA7G,KAAAmD,WAGA,QAAA1vC,IAAAoT,EAAA,CACA,GAAA1S,KAAAkG,SACA5F,EAAA+iD,EAAA7hB,IAAAqK,GAEA,IAAAA,EAAArX,WAAA4uB,EAAA5hB,IAAAqK,EAAA,kBAEA,IADAjlC,EAAA8rC,EAAAxsC,OACAU,KAIA8rC,EAAA9rC,IAEA,KADAwG,EAAAslC,EAAA9rC,GAAAwG,MACAuF,QAAA,WACAvF,EAAAw1C,EAAAx1C,EAAAf,MAAA,IACAm3C,GAAA3X,EAAAz+B,EAAA9M,EAAA8M,KAIAg2C,EAAAtiB,IAAA+K,EAAA,mBAIA,OAAAvrC,EAIA,uBAAAoS,EACA1S,KAAAwG,KAAA,WACA68C,EAAAviB,IAAA9gC,KAAA0S,KAIAyvC,EAAAniD,KAAA,SAAA+W,GACA,IAAAzW,EAOA,GAAAurC,QAAAvsC,IAAAyX,EAKA,YAAAzX,KADAgB,EAAA+iD,EAAA7hB,IAAAqK,EAAAn5B,IAEApS,OAMAhB,KADAgB,EAAAkjD,GAAA3X,EAAAn5B,IAEApS,OAIA,EAIAN,KAAAwG,KAAA,WAGA68C,EAAAviB,IAAA9gC,KAAA0S,EAAAqE,MAEG,KAAAA,EAAA1C,UAAAnO,OAAA,YAGHw9C,WAAA,SAAAhxC,GACA,OAAA1S,KAAAwG,KAAA,WACA68C,EAAA9gD,OAAAvC,KAAA0S,QAMA24B,EAAAhkC,QACAu3C,MAAA,SAAA/S,EAAApoC,EAAAnD,GACA,IAAAs+C,EAEA,GAAA/S,EAYA,OAXApoC,MAAA,cACAm7C,EAAAwE,EAAA5hB,IAAAqK,EAAApoC,GAGAnD,KACAs+C,GAAApkB,MAAA55B,QAAAN,GACAs+C,EAAAwE,EAAAjB,OAAAtW,EAAApoC,EAAA4nC,EAAAqB,UAAApsC,IAEAs+C,EAAAl2C,KAAApI,IAGAs+C,OAIAiF,QAAA,SAAAhY,EAAApoC,GACAA,KAAA,KAEA,IAAAm7C,EAAAvT,EAAAuT,MAAA/S,EAAApoC,GACAqgD,EAAAlF,EAAA14C,OACAC,EAAAy4C,EAAA1iB,QACA6nB,EAAA1Y,EAAA2Y,YAAAnY,EAAApoC,GAMA,eAAA0C,IACAA,EAAAy4C,EAAA1iB,QACA4nB,KAGA39C,IAIA,OAAA1C,GACAm7C,EAAAviB,QAAA,qBAIA0nB,EAAAE,KACA99C,EAAA3D,KAAAqpC,EApBA,WACAR,EAAAwY,QAAAhY,EAAApoC,IAmBAsgD,KAGAD,GAAAC,GACAA,EAAAvc,MAAAsX,QAKAkF,YAAA,SAAAnY,EAAApoC,GACA,IAAAiP,EAAAjP,EAAA,aACA,OAAA2/C,EAAA5hB,IAAAqK,EAAAn5B,IAAA0wC,EAAAjB,OAAAtW,EAAAn5B,GACA80B,MAAA6D,EAAA+S,UAAA,eAAAt9C,IAAA,WACAsiD,EAAA7gD,OAAAspC,GAAApoC,EAAA,QAAAiP,WAMA24B,EAAAllC,GAAAkB,QACAu3C,MAAA,SAAAn7C,EAAAnD,GACA,IAAAqe,EAAA,EAQA,MANA,iBAAAlb,IACAnD,EAAAmD,EACAA,EAAA,KACAkb,KAGAtK,UAAAnO,OAAAyY,EACA0sB,EAAAuT,MAAA5+C,KAAA,GAAAyD,QAGAnE,IAAAgB,EACAN,KACAA,KAAAwG,KAAA,WACA,IAAAo4C,EAAAvT,EAAAuT,MAAA5+C,KAAAyD,EAAAnD,GAGA+qC,EAAA2Y,YAAAhkD,KAAAyD,GAEA,OAAAA,GAAA,eAAAm7C,EAAA,IACAvT,EAAAwY,QAAA7jD,KAAAyD,MAIAogD,QAAA,SAAApgD,GACA,OAAAzD,KAAAwG,KAAA,WACA6kC,EAAAwY,QAAA7jD,KAAAyD,MAGAygD,WAAA,SAAAzgD,GACA,OAAAzD,KAAA4+C,MAAAn7C,GAAA,UAKAw6C,QAAA,SAAAx6C,EAAA+oB,GACA,IAAA7hB,EACAywB,EAAA,EACA+oB,EAAA9Y,EAAA+T,WACAjK,EAAAn1C,KACA4G,EAAA5G,KAAAkG,OACA43C,EAAA,aACA1iB,GACA+oB,EAAAzD,YAAAvL,QAUA,IANA,iBAAA1xC,IACA+oB,EAAA/oB,EACAA,OAAAnE,GAEAmE,KAAA,KAEAmD,MACA+D,EAAAy4C,EAAA5hB,IAAA2T,EAAAvuC,GAAAnD,EAAA,gBACAkH,EAAA68B,QACApM,IACAzwB,EAAA68B,MAAA1mC,IAAAg9C,IAIA,OADAA,IACAqG,EAAAlG,QAAAzxB,MAGA,IAAA43B,GAAA,sCAAAC,OAEAC,GAAA,IAAAt0C,OAAA,iBAAAo0C,GAAA,mBAGAG,IAAA,+BAEAC,GAAA,SAAA3Y,EAAA7/B,GAOA,gBAHA6/B,EAAA7/B,GAAA6/B,GAGAtjC,MAAA4iB,SACA,KAAA0gB,EAAAtjC,MAAA4iB,SAMAkgB,EAAA6C,SAAArC,EAAA+F,cAAA/F,IAEA,SAAAR,EAAA38B,IAAAm9B,EAAA,YAGA4Y,GAAA,SAAA5Y,EAAA9rC,EAAAsC,EAAA+R,GACA,IAAA4S,EAAA5Z,EACAwH,KAGA,IAAAxH,KAAArN,EACA6U,EAAAxH,GAAAy+B,EAAAtjC,MAAA6E,GACAy+B,EAAAtjC,MAAA6E,GAAArN,EAAAqN,GAMA,IAAAA,KAHA4Z,EAAA3kB,EAAAmS,MAAAq3B,EAAAz3B,OAGArU,EACA8rC,EAAAtjC,MAAA6E,GAAAwH,EAAAxH,GAGA,OAAA4Z,GAMA,SAAA09B,GAAA7Y,EAAAt6B,EAAAozC,EAAAC,GACA,IAAAC,EAAAC,EACAC,EAAA,GACAC,EAAAJ,EACA,WACA,OAAAA,EAAA9R,OAEA,WACA,OAAAzH,EAAA38B,IAAAm9B,EAAAt6B,EAAA,KAEA0zC,EAAAD,IACAE,EAAAP,KAAA,KAAAtZ,EAAA8Z,UAAA5zC,GAAA,SAGA6zC,GAAA/Z,EAAA8Z,UAAA5zC,IAAA,OAAA2zC,IAAAD,IACAX,GAAAzS,KAAAxG,EAAA38B,IAAAm9B,EAAAt6B,IAEA,GAAA6zC,KAAA,KAAAF,EAAA,CAYA,IARAD,GAAA,EAGAC,KAAAE,EAAA,GAGAA,GAAAH,GAAA,EAEAF,KAIA1Z,EAAA9iC,MAAAsjC,EAAAt6B,EAAA6zC,EAAAF,IACA,EAAAJ,IAAA,GAAAA,EAAAE,IAAAC,GAAA,UACAF,EAAA,GAEAK,GAAAN,EAIAM,GAAA,EACA/Z,EAAA9iC,MAAAsjC,EAAAt6B,EAAA6zC,EAAAF,GAGAP,QAgBA,OAbAA,IACAS,OAAAH,GAAA,EAGAJ,EAAAF,EAAA,GACAS,GAAAT,EAAA,MAAAA,EAAA,IACAA,EAAA,GACAC,IACAA,EAAAM,OACAN,EAAA/yC,MAAAuzC,EACAR,EAAA9yC,IAAA+yC,IAGAA,EAIA,IAAAQ,MAEA,SAAAC,GAAAzZ,GACA,IAAAkO,EACA7O,EAAAW,EAAA+F,cACAluC,EAAAmoC,EAAAnoC,SACAynB,EAAAk6B,GAAA3hD,GAEA,OAAAynB,IAIA4uB,EAAA7O,EAAAvoB,KAAAtD,YAAA6rB,EAAA5zB,cAAA5T,IACAynB,EAAAkgB,EAAA38B,IAAAqrC,EAAA,WAEAA,EAAAryC,WAAAsW,YAAA+7B,GAEA,SAAA5uB,IACAA,EAAA,SAEAk6B,GAAA3hD,GAAAynB,EAEAA,GAGA,SAAAo6B,GAAApQ,EAAAzwC,GAOA,IANA,IAAAymB,EAAA0gB,EACA2Z,KACArhD,EAAA,EACA+B,EAAAivC,EAAAjvC,OAGQ/B,EAAA+B,EAAgB/B,KACxB0nC,EAAAsJ,EAAAhxC,IACAoE,QAIA4iB,EAAA0gB,EAAAtjC,MAAA4iB,QACAzmB,GAKA,SAAAymB,IACAq6B,EAAArhD,GAAAi/C,EAAA5hB,IAAAqK,EAAA,iBACA2Z,EAAArhD,KACA0nC,EAAAtjC,MAAA4iB,QAAA,KAGA,KAAA0gB,EAAAtjC,MAAA4iB,SAAAq5B,GAAA3Y,KACA2Z,EAAArhD,GAAAmhD,GAAAzZ,KAGA,SAAA1gB,IACAq6B,EAAArhD,GAAA,OAGAi/C,EAAAtiB,IAAA+K,EAAA,UAAA1gB,KAMA,IAAAhnB,EAAA,EAAiBA,EAAA+B,EAAgB/B,IACjC,MAAAqhD,EAAArhD,KACAgxC,EAAAhxC,GAAAoE,MAAA4iB,QAAAq6B,EAAArhD,IAIA,OAAAgxC,EAGA9J,EAAAllC,GAAAkB,QACA3C,KAAA,WACA,OAAA6gD,GAAAvlD,MAAA,IAEAkC,KAAA,WACA,OAAAqjD,GAAAvlD,OAEAylD,OAAA,SAAArtB,GACA,wBAAAA,EACAA,EAAAp4B,KAAA0E,OAAA1E,KAAAkC,OAGAlC,KAAAwG,KAAA,WACAg+C,GAAAxkD,MACAqrC,EAAArrC,MAAA0E,OAEA2mC,EAAArrC,MAAAkC,YAKA,IAAAwjD,GAAA,wBAEAC,GAAA,iCAEAC,GAAA,qCAKAC,IAGAC,QAAA,8CAKAn3C,OAAA,wBACAnL,KAAA,6CACAgc,IAAA,uCACAf,IAAA,gDAEAsnC,UAAA,UAUA,SAAAC,GAAAtrB,EAAAyZ,GAIA,IAAAntB,EAYA,OATAA,OADA,IAAA0T,EAAAjuB,qBACAiuB,EAAAjuB,qBAAA0nC,GAAA,UAEE,IAAAzZ,EAAAyX,iBACFzX,EAAAyX,iBAAAgC,GAAA,aAMA70C,IAAA60C,MAAAzwC,EAAAg3B,EAAAyZ,GACA9I,EAAAtgB,OAAA2P,GAAA1T,GAGAA,EAKA,SAAAi/B,GAAAta,EAAAua,GAIA,IAHA,IAAAt/C,EAAA,EACAgf,EAAA+lB,EAAAzlC,OAEQU,EAAAgf,EAAOhf,IACfw8C,EAAAtiB,IACA6K,EAAA/kC,GACA,cACAs/C,GAAA9C,EAAA5hB,IAAA0kB,EAAAt/C,GAAA,eAvCAi/C,GAAAM,SAAAN,GAAAC,OAEAD,GAAAh3C,MAAAg3C,GAAA92C,MAAA82C,GAAAO,SAAAP,GAAAn2B,QAAAm2B,GAAAl3C,MACAk3C,GAAAjuC,GAAAiuC,GAAApnC,GA0CA,IAAA4nC,GAAA,YAEA,SAAAC,GAAA3a,EAAAjR,EAAA6rB,EAAAC,EAAAC,GAOA,IANA,IAAA5a,EAAAlhC,EAAAwpC,EAAAuS,EAAAxY,EAAA/7B,EACAw0C,EAAAjsB,EAAAksB,yBACA5iD,KACA4C,EAAA,EACAgf,EAAA+lB,EAAAzlC,OAEQU,EAAAgf,EAAOhf,IAGf,IAFAilC,EAAAF,EAAA/kC,KAEA,IAAAilC,EAGA,cAAAT,EAAAS,GAIAR,EAAAtgB,MAAA/mB,EAAA6nC,EAAArX,UAAAqX,WAGI,GAAAwa,GAAA/6B,KAAAugB,GAIA,CAUJ,IATAlhC,KAAAg8C,EAAAtnC,YAAAqb,EAAApjB,cAAA,QAGA68B,GAAAwR,GAAA9T,KAAAhG,KAAA,WAAAloC,cACA+iD,EAAAb,GAAA1R,IAAA0R,GAAAE,SACAp7C,EAAA6M,UAAAkvC,EAAA,GAAArb,EAAAwb,cAAAhb,GAAA6a,EAAA,GAGAv0C,EAAAu0C,EAAA,GACAv0C,KACAxH,IAAAssC,UAKA5L,EAAAtgB,MAAA/mB,EAAA2G,EAAAoT,aAGApT,EAAAg8C,EAAA1oC,YAGAgO,YAAA,QAzBAjoB,EAAA0E,KAAAgyB,EAAAosB,eAAAjb,IAkCA,IAHA8a,EAAA16B,YAAA,GAEArlB,EAAA,EACAilC,EAAA7nC,EAAA4C,MAGA,GAAA4/C,GAAAnb,EAAAv/B,QAAA+/B,EAAA2a,IAAA,EACAC,GACAA,EAAA/9C,KAAAmjC,QAgBA,GAXAqC,EAAA7C,EAAA6C,SAAArC,EAAA+F,cAAA/F,GAGAlhC,EAAAq7C,GAAAW,EAAAtnC,YAAAwsB,GAAA,UAGAqC,GACA+X,GAAAt7C,GAIA47C,EAEA,IADAp0C,EAAA,EACA05B,EAAAlhC,EAAAwH,MACAyzC,GAAAt6B,KAAAugB,EAAApoC,MAAA,KACA8iD,EAAA79C,KAAAmjC,GAMA,OAAA8a,GAIA,WACA,IACAr4B,EADA7uB,EAAAmnD,yBACAvnC,YAAA5f,EAAA6X,cAAA,QACA8R,EAAA3pB,EAAA6X,cAAA,SAMA8R,EAAA7J,aAAA,gBACA6J,EAAA7J,aAAA,qBACA6J,EAAA7J,aAAA,YAEA+O,EAAAjP,YAAA+J,GAIAuhB,EAAAoc,WAAAz4B,EAAAuB,WAAA,GAAAA,WAAA,GAAAonB,UAAAe,QAIA1pB,EAAA9W,UAAA,yBACAmzB,EAAAqc,iBAAA14B,EAAAuB,WAAA,GAAAonB,UAAA4E,aAtBA,GAwBA,IAAArI,GAAA/zC,EAAA+zC,gBAKAyT,GAAA,OACAC,GAAA,iDACAC,GAAA,sBAEA,SAAAC,KACA,SAGA,SAAAC,KACA,SAKA,SAAAC,KACA,IACA,OAAA7nD,EAAAwqB,cACE,MAAAs9B,KAGF,SAAA39B,GAAAiiB,EAAA9wB,EAAAigB,EAAA16B,EAAA6F,EAAAs3B,GACA,IAAA+pB,EAAA/jD,EAGA,oBAAAsX,EAAA,CASA,IAAAtX,IANA,iBAAAu3B,IAGA16B,KAAA06B,EACAA,OAAA17B,GAEAyb,EACA6O,GAAAiiB,EAAApoC,EAAAu3B,EAAA16B,EAAAya,EAAAtX,GAAAg6B,GAEA,OAAAoO,EAsBA,GAnBA,MAAAvrC,GAAA,MAAA6F,GAGAA,EAAA60B,EACA16B,EAAA06B,OAAA17B,GACE,MAAA6G,IACF,iBAAA60B,GAGA70B,EAAA7F,EACAA,OAAAhB,IAIA6G,EAAA7F,EACAA,EAAA06B,EACAA,OAAA17B,KAGA,IAAA6G,EACAA,EAAAkhD,QACE,IAAAlhD,EACF,OAAA0lC,EAeA,OAZA,IAAApO,IACA+pB,EAAArhD,GACAA,EAAA,SAAAshD,GAIA,OADApc,IAAA9L,IAAAkoB,GACAD,EAAAhzC,MAAAxU,KAAAqU,aAIA64B,KAAAsa,EAAAta,OAAAsa,EAAAta,KAAA7B,EAAA6B,SAEArB,EAAArlC,KAAA,WACA6kC,EAAAoc,MAAA3mD,IAAAd,KAAA+a,EAAA5U,EAAA7F,EAAA06B,KAQAqQ,EAAAoc,OAEAzd,UAEAlpC,IAAA,SAAA+qC,EAAA9wB,EAAA43B,EAAAryC,EAAA06B,GAEA,IAAA0sB,EAAAC,EAAAh9C,EACAi9C,EAAA7vC,EAAA8vC,EACAvH,EAAAwH,EAAArkD,EAAAskD,EAAAC,EACAC,EAAA7E,EAAA5hB,IAAAqK,GAGA,GAAAoc,EAuCA,IAlCAtV,YAEAA,GADA+U,EAAA/U,GACAA,QACA3X,EAAA0sB,EAAA1sB,UAKAA,GACAqQ,EAAAz/B,KAAAwoC,gBAAAZ,GAAAxY,GAIA2X,EAAAzF,OACAyF,EAAAzF,KAAA7B,EAAA6B,SAIA0a,EAAAK,EAAAL,UACAA,EAAAK,EAAAL,YAEAD,EAAAM,EAAAC,UACAP,EAAAM,EAAAC,OAAA,SAAAp+B,GAIA,gBAAAuhB,KAAAoc,MAAAU,YAAAr+B,EAAArmB,KACA4nC,EAAAoc,MAAAW,SAAA5zC,MAAAq3B,EAAAx3B,gBAAA/U,IAMAyY,GADAgD,MAAA,IAAAvI,MAAAgrC,KAAA,KACAt3C,OACA6R,KAEAtU,EAAAukD,GADAr9C,EAAAw8C,GAAAtV,KAAA92B,EAAAhD,SACA,GACAgwC,GAAAp9C,EAAA,QAAA+U,MAAA,KAAArS,OAGA5J,IAKA68C,EAAAjV,EAAAoc,MAAAnH,QAAA78C,OAGAA,GAAAu3B,EAAAslB,EAAA+H,aAAA/H,EAAAgI,WAAA7kD,EAGA68C,EAAAjV,EAAAoc,MAAAnH,QAAA78C,OAGAokD,EAAAxc,EAAAhkC,QACA5D,OACAukD,WACA1nD,OACAqyC,UACAzF,KAAAyF,EAAAzF,KACAlS,WACAgV,aAAAhV,GAAAqQ,EAAA6J,KAAA1iC,MAAAw9B,aAAA1kB,KAAA0P,GACAutB,UAAAR,EAAA57C,KAAA,MACIu7C,IAGJI,EAAAF,EAAAnkD,OACAqkD,EAAAF,EAAAnkD,OACA+kD,cAAA,EAGAlI,EAAAmI,QACA,IAAAnI,EAAAmI,MAAAjmD,KAAAqpC,EAAAvrC,EAAAynD,EAAAJ,IAEA9b,EAAA+H,kBACA/H,EAAA+H,iBAAAnwC,EAAAkkD,IAKArH,EAAAx/C,MACAw/C,EAAAx/C,IAAA0B,KAAAqpC,EAAAgc,GAEAA,EAAAlV,QAAAzF,OACA2a,EAAAlV,QAAAzF,KAAAyF,EAAAzF,OAKAlS,EACA8sB,EAAA5/C,OAAA4/C,EAAAU,gBAAA,EAAAX,GAEAC,EAAAp/C,KAAAm/C,GAIAxc,EAAAoc,MAAAzd,OAAAvmC,IAAA,IAMAlB,OAAA,SAAAspC,EAAA9wB,EAAA43B,EAAA3X,EAAA0tB,GAEA,IAAAv2C,EAAAw2C,EAAAh+C,EACAi9C,EAAA7vC,EAAA8vC,EACAvH,EAAAwH,EAAArkD,EAAAskD,EAAAC,EACAC,EAAA7E,EAAAD,QAAAtX,IAAAuX,EAAA5hB,IAAAqK,GAEA,GAAAoc,IAAAL,EAAAK,EAAAL,QAAA,CAOA,IADA7vC,GADAgD,MAAA,IAAAvI,MAAAgrC,KAAA,KACAt3C,OACA6R,KAMA,GAJAtU,EAAAukD,GADAr9C,EAAAw8C,GAAAtV,KAAA92B,EAAAhD,SACA,GACAgwC,GAAAp9C,EAAA,QAAA+U,MAAA,KAAArS,OAGA5J,EAAA,CAeA,IARA68C,EAAAjV,EAAAoc,MAAAnH,QAAA78C,OAEAqkD,EAAAF,EADAnkD,GAAAu3B,EAAAslB,EAAA+H,aAAA/H,EAAAgI,WAAA7kD,OAEAkH,IAAA,IACA,IAAAqF,OAAA,UAAA+3C,EAAA57C,KAAA,4BAGAw8C,EAAAx2C,EAAA21C,EAAA5hD,OACAiM,KACA01C,EAAAC,EAAA31C,IAEAu2C,GAAAV,IAAAH,EAAAG,UACArV,KAAAzF,OAAA2a,EAAA3a,MACAviC,MAAA2gB,KAAAu8B,EAAAU,YACAvtB,OAAA6sB,EAAA7sB,WACA,OAAAA,IAAA6sB,EAAA7sB,YACA8sB,EAAA5/C,OAAAiK,EAAA,GAEA01C,EAAA7sB,UACA8sB,EAAAU,gBAEAlI,EAAA/9C,QACA+9C,EAAA/9C,OAAAC,KAAAqpC,EAAAgc,IAOAc,IAAAb,EAAA5hD,SACAo6C,EAAAsI,WACA,IAAAtI,EAAAsI,SAAApmD,KAAAqpC,EAAAkc,EAAAE,EAAAC,SAEA7c,EAAAwd,YAAAhd,EAAApoC,EAAAwkD,EAAAC,eAGAN,EAAAnkD,SA1CA,IAAAA,KAAAmkD,EACAvc,EAAAoc,MAAAllD,OAAAspC,EAAApoC,EAAAsX,EAAAhD,GAAA46B,EAAA3X,GAAA,GA8CAqQ,EAAAmB,cAAAob,IACAxE,EAAA7gD,OAAAspC,EAAA,mBAIAuc,SAAA,SAAAU,GAGA,IAEAliD,EAAAuL,EAAA6U,EAAAqwB,EAAAwQ,EAAAkB,EAFAtB,EAAApc,EAAAoc,MAAAuB,IAAAF,GAGA10C,EAAA,IAAAomB,MAAAnmB,UAAAnO,QACA4hD,GAAA1E,EAAA5hB,IAAAxhC,KAAA,eAAoDynD,EAAAhkD,UACpD68C,EAAAjV,EAAAoc,MAAAnH,QAAAmH,EAAAhkD,UAKA,IAFA2Q,EAAA,GAAAqzC,EAEA7gD,EAAA,EAAcA,EAAAyN,UAAAnO,OAAsBU,IACpCwN,EAAAxN,GAAAyN,UAAAzN,GAMA,GAHA6gD,EAAAwB,eAAAjpD,MAGAsgD,EAAA4I,cAAA,IAAA5I,EAAA4I,YAAA1mD,KAAAxC,KAAAynD,GAAA,CASA,IAJAsB,EAAA1d,EAAAoc,MAAAK,SAAAtlD,KAAAxC,KAAAynD,EAAAK,GAGAlhD,EAAA,GACAywC,EAAA0R,EAAAniD,QAAA6gD,EAAA0B,wBAIA,IAHA1B,EAAA2B,cAAA/R,EAAAxL,KAEA15B,EAAA,GACA01C,EAAAxQ,EAAAyQ,SAAA31C,QACAs1C,EAAA4B,iCAIA5B,EAAA6B,aAAA7B,EAAA6B,WAAAh+B,KAAAu8B,EAAAU,aAEAd,EAAAI,YACAJ,EAAAnnD,KAAAunD,EAAAvnD,UAKAhB,KAHA0nB,IAAAqkB,EAAAoc,MAAAnH,QAAAuH,EAAAG,eAA+DE,QAC/DL,EAAAlV,SAAAn+B,MAAA6iC,EAAAxL,KAAAz3B,MAGA,KAAAqzC,EAAAttB,OAAAnT,KACAygC,EAAA7tB,iBACA6tB,EAAA8B,oBAYA,OAJAjJ,EAAAkJ,cACAlJ,EAAAkJ,aAAAhnD,KAAAxC,KAAAynD,GAGAA,EAAAttB,SAGA2tB,SAAA,SAAAL,EAAAK,GACA,IAAAlhD,EAAAihD,EAAAxpB,EAAAorB,EAAAC,EACAX,KACAP,EAAAV,EAAAU,cACA1V,EAAA2U,EAAArlD,OAGA,GAAAomD,GAIA1V,EAAAte,YAOA,UAAAizB,EAAAhkD,MAAAgkD,EAAAtgB,QAAA,GAEA,KAAU2L,IAAA9yC,KAAc8yC,IAAAprC,YAAA1H,KAIxB,OAAA8yC,EAAAte,WAAA,UAAAizB,EAAAhkD,OAAA,IAAAqvC,EAAAzB,UAAA,CAGA,IAFAoY,KACAC,KACA9iD,EAAA,EAAiBA,EAAA4hD,EAAmB5hD,SAMpCtH,IAAAoqD,EAFArrB,GAHAwpB,EAAAC,EAAAlhD,IAGAo0B,SAAA,OAGA0uB,EAAArrB,GAAAwpB,EAAA7X,aACA3E,EAAAhN,EAAAr+B,MAAAmE,MAAA2uC,IAAA,EACAzH,EAAAz/B,KAAAyyB,EAAAr+B,KAAA,MAAA8yC,IAAA5sC,QAEAwjD,EAAArrB,IACAorB,EAAA/gD,KAAAm/C,GAGA4B,EAAAvjD,QACA6iD,EAAArgD,MAA0BmjC,KAAAiH,EAAAgV,SAAA2B,IAY1B,OALA3W,EAAA9yC,KACAwoD,EAAAV,EAAA5hD,QACA6iD,EAAArgD,MAAuBmjC,KAAAiH,EAAAgV,WAAAz7C,MAAAm8C,KAGvBO,GAGAY,QAAA,SAAAv8C,EAAAw8C,GACAvf,OAAA4Y,eAAA5X,EAAApR,MAAAQ,UAAArtB,GACAy8C,YAAA,EACA3G,cAAA,EAEA1hB,IAAAoJ,EAAAgf,GACA,WACA,GAAA5pD,KAAA8pD,cACA,OAAAF,EAAA5pD,KAAA8pD,gBAGA,WACA,GAAA9pD,KAAA8pD,cACA,OAAA9pD,KAAA8pD,cAAA18C,IAIA0zB,IAAA,SAAA/pB,GACAszB,OAAA4Y,eAAAjjD,KAAAoN,GACAy8C,YAAA,EACA3G,cAAA,EACA6G,UAAA,EACAhzC,cAMAiyC,IAAA,SAAAc,GACA,OAAAA,EAAAze,EAAAa,SACA4d,EACA,IAAAze,EAAApR,MAAA6vB,IAGAxJ,SACA0J,MAGAC,UAAA,GAEAxiB,OAGAvN,QAAA,WACA,GAAAl6B,OAAAsnD,MAAAtnD,KAAAynC,MAEA,OADAznC,KAAAynC,SACA,GAGA4gB,aAAA,WAEA3uB,MACAQ,QAAA,WACA,GAAAl6B,OAAAsnD,MAAAtnD,KAAA05B,KAEA,OADA15B,KAAA05B,QACA,GAGA2uB,aAAA,YAEA6B,OAGAhwB,QAAA,WACA,gBAAAl6B,KAAAyD,MAAAzD,KAAAkqD,OAAAxmD,EAAA1D,KAAA,SAEA,OADAA,KAAAkqD,SACA,GAKAnE,SAAA,SAAA0B,GACA,OAAA/jD,EAAA+jD,EAAArlD,OAAA,OAIA+nD,cACAX,aAAA,SAAA/B,QAIAnoD,IAAAmoD,EAAAttB,QAAAstB,EAAAqC,gBACArC,EAAAqC,cAAAM,YAAA3C,EAAAttB,YAOAkR,EAAAwd,YAAA,SAAAhd,EAAApoC,EAAAykD,GAGArc,EAAAkW,qBACAlW,EAAAkW,oBAAAt+C,EAAAykD,IAIA7c,EAAApR,MAAA,SAAA12B,EAAA8mD,GAGA,KAAArqD,gBAAAqrC,EAAApR,OACA,WAAAoR,EAAApR,MAAA12B,EAAA8mD,GAIA9mD,KAAAE,MACAzD,KAAA8pD,cAAAvmD,EACAvD,KAAAyD,KAAAF,EAAAE,KAIAzD,KAAAsqD,mBAAA/mD,EAAAgnD,uBACAjrD,IAAAiE,EAAAgnD,mBAGA,IAAAhnD,EAAA6mD,YACAhD,GACAC,GAKArnD,KAAAoC,OAAAmB,EAAAnB,QAAA,IAAAmB,EAAAnB,OAAAoyB,SACAjxB,EAAAnB,OAAAsF,WACAnE,EAAAnB,OAEApC,KAAAopD,cAAA7lD,EAAA6lD,cACAppD,KAAAwqD,cAAAjnD,EAAAinD,eAIAxqD,KAAAyD,KAAAF,EAIA8mD,GACAhf,EAAAhkC,OAAArH,KAAAqqD,GAIArqD,KAAAyqD,UAAAlnD,KAAAknD,WAAAt2C,KAAAD,MAGAlU,KAAAqrC,EAAAa,UAAA,GAKAb,EAAApR,MAAAQ,WACAgR,YAAAJ,EAAApR,MACAqwB,mBAAAjD,GACA8B,qBAAA9B,GACAgC,8BAAAhC,GACAqD,aAAA,EAEA9wB,eAAA,WACA,IAAA9P,EAAA9pB,KAAA8pD,cAEA9pD,KAAAsqD,mBAAAlD,GAEAt9B,IAAA9pB,KAAA0qD,aACA5gC,EAAA8P,kBAGA2vB,gBAAA,WACA,IAAAz/B,EAAA9pB,KAAA8pD,cAEA9pD,KAAAmpD,qBAAA/B,GAEAt9B,IAAA9pB,KAAA0qD,aACA5gC,EAAAy/B,mBAGAoB,yBAAA,WACA,IAAA7gC,EAAA9pB,KAAA8pD,cAEA9pD,KAAAqpD,8BAAAjC,GAEAt9B,IAAA9pB,KAAA0qD,aACA5gC,EAAA6gC,2BAGA3qD,KAAAupD,oBAKAle,EAAA7kC,MACAokD,QAAA,EACAC,SAAA,EACAC,YAAA,EACAC,gBAAA,EACAC,SAAA,EACAC,QAAA,EACAC,YAAA,EACAC,SAAA,EACAC,OAAA,EACAC,OAAA,EACA1zB,UAAA,EACA2zB,MAAA,EACAC,MAAA,EACAC,UAAA,EACA94C,KAAA,EACAqX,SAAA,EACAod,QAAA,EACAlY,SAAA,EACAw8B,SAAA,EACAC,SAAA,EACAC,SAAA,EACAC,SAAA,EACAC,WAAA,EACAC,aAAA,EACAC,SAAA,EACAC,SAAA,EACAC,eAAA,EACAC,WAAA,EACAC,SAAA,EAEAxyB,MAAA,SAAA8tB,GACA,IAAAtgB,EAAAsgB,EAAAtgB,OAGA,aAAAsgB,EAAA9tB,OAAAstB,GAAA37B,KAAAm8B,EAAAhkD,MACA,MAAAgkD,EAAA+D,SAAA/D,EAAA+D,SAAA/D,EAAA19B,SAIA09B,EAAA9tB,YAAAr6B,IAAA6nC,GAAA+f,GAAA57B,KAAAm8B,EAAAhkD,MACA,EAAA0jC,EACA,EAGA,EAAAA,EACA,EAGA,EAAAA,EACA,EAGA,EAGAsgB,EAAA9tB,QAEC0R,EAAAoc,MAAAkC,SAUDte,EAAA7kC,MACA4lD,WAAA,YACAC,WAAA,WACAC,aAAA,cACAC,aAAA,cACC,SAAAxqB,EAAAinB,GACD3d,EAAAoc,MAAAnH,QAAAve,IACAsmB,aAAAW,EACAV,SAAAU,EAEAd,OAAA,SAAAT,GACA,IAAAzgC,EAEAwlC,EAAA/E,EAAA+C,cACA3C,EAAAJ,EAAAI,UASA,OALA2E,QANAxsD,MAMAqrC,EAAA6C,SANAluC,KAMAwsD,MACA/E,EAAAhkD,KAAAokD,EAAAG,SACAhhC,EAAA6gC,EAAAlV,QAAAn+B,MAAAxU,KAAAqU,WACAozC,EAAAhkD,KAAAulD,GAEAhiC,MAKAqkB,EAAAllC,GAAAkB,QAEAuiB,GAAA,SAAA7O,EAAAigB,EAAA16B,EAAA6F,GACA,OAAAyjB,GAAA5pB,KAAA+a,EAAAigB,EAAA16B,EAAA6F,IAEAs3B,IAAA,SAAA1iB,EAAAigB,EAAA16B,EAAA6F,GACA,OAAAyjB,GAAA5pB,KAAA+a,EAAAigB,EAAA16B,EAAA6F,EAAA,IAEAo5B,IAAA,SAAAxkB,EAAAigB,EAAA70B,GACA,IAAA0hD,EAAApkD,EACA,GAAAsX,KAAA6e,gBAAA7e,EAAA8sC,UAWA,OARAA,EAAA9sC,EAAA8sC,UACAxc,EAAAtwB,EAAAkuC,gBAAA1pB,IACAsoB,EAAAU,UACAV,EAAAG,SAAA,IAAAH,EAAAU,UACAV,EAAAG,SACAH,EAAA7sB,SACA6sB,EAAAlV,SAEA3yC,KAEA,oBAAA+a,EAAA,CAGA,IAAAtX,KAAAsX,EACA/a,KAAAu/B,IAAA97B,EAAAu3B,EAAAjgB,EAAAtX,IAEA,OAAAzD,KAWA,OATA,IAAAg7B,GAAA,mBAAAA,IAGA70B,EAAA60B,EACAA,OAAA17B,IAEA,IAAA6G,IACAA,EAAAkhD,IAEArnD,KAAAwG,KAAA,WACA6kC,EAAAoc,MAAAllD,OAAAvC,KAAA+a,EAAA5U,EAAA60B,QAMA,IAKAyxB,GAAA,8FAOAC,GAAA,wBAGAC,GAAA,oCACAC,GAAA,2CAGA,SAAAC,GAAAhhB,EAAA0R,GACA,OAAA75C,EAAAmoC,EAAA,UACAnoC,EAAA,KAAA65C,EAAA/oB,SAAA+oB,IAAAt/B,WAAA,OAEAotB,EAAAQ,GAAAlgC,SAAA,aAGAkgC,EAIA,SAAAihB,GAAAjhB,GAEA,OADAA,EAAApoC,MAAA,OAAAooC,EAAA/kC,aAAA,aAAA+kC,EAAApoC,KACAooC,EAEA,SAAAkhB,GAAAlhB,GAOA,MANA,WAAAA,EAAApoC,MAAA,IAAA4I,MAAA,KACAw/B,EAAApoC,KAAAooC,EAAApoC,KAAA4I,MAAA,GAEAw/B,EAAA5U,gBAAA,QAGA4U,EAGA,SAAAmhB,GAAAzpD,EAAA0pD,GACA,IAAArmD,EAAAgf,EAAAniB,EAAAypD,EAAAC,EAAAC,EAAAC,EAAAzF,EAEA,OAAAqF,EAAAz4B,SAAA,CAKA,GAAA4uB,EAAAD,QAAA5/C,KACA2pD,EAAA9J,EAAAjB,OAAA5+C,GACA4pD,EAAA/J,EAAAtiB,IAAAmsB,EAAAC,GACAtF,EAAAsF,EAAAtF,QAMA,IAAAnkD,YAHA0pD,EAAAjF,OACAiF,EAAAvF,UAEAA,EACA,IAAAhhD,EAAA,EAAAgf,EAAAgiC,EAAAnkD,GAAAyC,OAA2CU,EAAAgf,EAAOhf,IAClDykC,EAAAoc,MAAA3mD,IAAAmsD,EAAAxpD,EAAAmkD,EAAAnkD,GAAAmD,IAOAy8C,EAAAF,QAAA5/C,KACA6pD,EAAA/J,EAAAlB,OAAA5+C,GACA8pD,EAAAhiB,EAAAhkC,UAA8B+lD,GAE9B/J,EAAAviB,IAAAmsB,EAAAI,KAKA,SAAAC,GAAA/pD,EAAA0pD,GACA,IAAAvpD,EAAAupD,EAAAvpD,SAAAC,cAGA,UAAAD,GAAAgiD,GAAAp6B,KAAA/nB,EAAAE,MACAwpD,EAAAjV,QAAAz0C,EAAAy0C,QAGE,UAAAt0C,GAAA,aAAAA,IACFupD,EAAApR,aAAAt4C,EAAAs4C,cAIA,SAAA0R,GAAAC,EAAAp5C,EAAA/R,EAAAokD,GAGAryC,EAAAwL,EAAApL,SAAAJ,GAEA,IAAAuyC,EAAA7a,EAAAya,EAAAkH,EAAA1pD,EAAAmnC,EACAtkC,EAAA,EACAgf,EAAA4nC,EAAAtnD,OACAwnD,EAAA9nC,EAAA,EACA7O,EAAA3C,EAAA,GACAu5C,EAAA/iB,EAAA7zB,GAGA,GAAA42C,GACA/nC,EAAA,oBAAA7O,IACA4zB,EAAAoc,YAAA4F,GAAArhC,KAAAvU,GACA,OAAAy2C,EAAAhnD,KAAA,SAAArC,GACA,IAAAo4C,EAAAiR,EAAA3hD,GAAA1H,GACAwpD,IACAv5C,EAAA,GAAA2C,EAAAvU,KAAAxC,KAAAmE,EAAAo4C,EAAAprC,SAEAo8C,GAAAhR,EAAAnoC,EAAA/R,EAAAokD,KAIA,GAAA7gC,IAEAkmB,GADA6a,EAAAL,GAAAlyC,EAAAo5C,EAAA,GAAA5b,eAAA,EAAA4b,EAAA/G,IACAxoC,WAEA,IAAA0oC,EAAA5oC,WAAA7X,SACAygD,EAAA7a,GAIAA,GAAA2a,GAAA,CAOA,IALAgH,GADAlH,EAAAlb,EAAAt/B,IAAAi6C,GAAAW,EAAA,UAAAmG,KACA5mD,OAKUU,EAAAgf,EAAOhf,IACjB7C,EAAA4iD,EAEA//C,IAAA8mD,IACA3pD,EAAAsnC,EAAA3X,MAAA3vB,GAAA,MAGA0pD,GAIApiB,EAAAtgB,MAAAw7B,EAAAP,GAAAjiD,EAAA,YAIA1B,EAAAG,KAAAgrD,EAAA5mD,GAAA7C,EAAA6C,GAGA,GAAA6mD,EAOA,IANAviB,EAAAqb,IAAArgD,OAAA,GAAA0rC,cAGAvG,EAAAt/B,IAAAw6C,EAAAwG,IAGAnmD,EAAA,EAAgBA,EAAA6mD,EAAgB7mD,IAChC7C,EAAAwiD,EAAA3/C,GACAg/C,GAAAt6B,KAAAvnB,EAAAN,MAAA,MACA2/C,EAAAjB,OAAAp+C,EAAA,eACAsnC,EAAA6C,SAAAhD,EAAAnnC,KAEAA,EAAAR,KAAA,YAAAQ,EAAAN,MAAA,IAAAE,cAGA0nC,EAAAuiB,UACAviB,EAAAuiB,SAAA7pD,EAAAR,KAGAynC,EAAAjnC,EAAAkoB,YAAApb,QAAA+7C,GAAA,IAAA1hB,EAAAnnC,IAQA,OAAAypD,EAGA,SAAAjrD,GAAAspC,EAAA7Q,EAAA6yB,GAKA,IAJA,IAAA9pD,EACAC,EAAAg3B,EAAAqQ,EAAA/9B,OAAA0tB,EAAA6Q,KACAjlC,EAAA,EAEQ,OAAA7C,EAAAC,EAAA4C,IAA+BA,IACvCinD,GAAA,IAAA9pD,EAAAywB,UACA6W,EAAAyiB,UAAA9H,GAAAjiD,IAGAA,EAAA2D,aACAmmD,GAAAxiB,EAAA6C,SAAAnqC,EAAA6tC,cAAA7tC,IACAkiD,GAAAD,GAAAjiD,EAAA,WAEAA,EAAA2D,WAAAsW,YAAAja,IAIA,OAAA8nC,EAGAR,EAAAhkC,QACAw/C,cAAA,SAAA11C,GACA,OAAAA,EAAAN,QAAA47C,GAAA,cAGA/4B,MAAA,SAAAmY,EAAAkiB,EAAAC,GACA,IAAApnD,EAAAgf,EAAAqoC,EAAAC,EACAx6B,EAAAmY,EAAAhc,WAAA,GACAs+B,EAAA9iB,EAAA6C,SAAArC,EAAA+F,cAAA/F,GAGA,KAAAlB,EAAAqc,gBAAA,IAAAnb,EAAArX,UAAA,KAAAqX,EAAArX,UACA6W,EAAAyQ,SAAAjQ,IAMA,IAHAqiB,EAAAlI,GAAAtyB,GAGA9sB,EAAA,EAAAgf,GAFAqoC,EAAAjI,GAAAna,IAEA3lC,OAAuCU,EAAAgf,EAAOhf,IAC9C0mD,GAAAW,EAAArnD,GAAAsnD,EAAAtnD,IAKA,GAAAmnD,EACA,GAAAC,EAIA,IAHAC,KAAAjI,GAAAna,GACAqiB,KAAAlI,GAAAtyB,GAEA9sB,EAAA,EAAAgf,EAAAqoC,EAAA/nD,OAAwCU,EAAAgf,EAAOhf,IAC/ComD,GAAAiB,EAAArnD,GAAAsnD,EAAAtnD,SAGAomD,GAAAnhB,EAAAnY,GAWA,OANAw6B,EAAAlI,GAAAtyB,EAAA,WACAxtB,OAAA,GACA+/C,GAAAiI,GAAAC,GAAAnI,GAAAna,EAAA,WAIAnY,GAGAo6B,UAAA,SAAAniB,GAKA,IAJA,IAAArrC,EAAAurC,EAAApoC,EACA68C,EAAAjV,EAAAoc,MAAAnH,QACA15C,EAAA,OAEStH,KAAAusC,EAAAF,EAAA/kC,IAAqCA,IAC9C,GAAAi8C,EAAAhX,GAAA,CACA,GAAAvrC,EAAAurC,EAAAuX,EAAAlX,SAAA,CACA,GAAA5rC,EAAAsnD,OACA,IAAAnkD,KAAAnD,EAAAsnD,OACAtH,EAAA78C,GACA4nC,EAAAoc,MAAAllD,OAAAspC,EAAApoC,GAIA4nC,EAAAwd,YAAAhd,EAAApoC,EAAAnD,EAAA4nD,QAOArc,EAAAuX,EAAAlX,cAAA5sC,EAEAusC,EAAAwX,EAAAnX,WAIAL,EAAAwX,EAAAnX,cAAA5sC,OAOA+rC,EAAAllC,GAAAkB,QACAub,OAAA,SAAAoY,GACA,OAAAz4B,GAAAvC,KAAAg7B,GAAA,IAGAz4B,OAAA,SAAAy4B,GACA,OAAAz4B,GAAAvC,KAAAg7B,IAGAwO,KAAA,SAAAzyB,GACA,OAAAorC,EAAAniD,KAAA,SAAA+W,GACA,YAAAzX,IAAAyX,EACAs0B,EAAA7B,KAAAxpC,MACAA,KAAAwnC,QAAAhhC,KAAA,WACA,IAAAxG,KAAAw0B,UAAA,KAAAx0B,KAAAw0B,UAAA,IAAAx0B,KAAAw0B,WACAx0B,KAAAisB,YAAAlV,MAGG,KAAAA,EAAA1C,UAAAnO,SAGH4P,OAAA,WACA,OAAAy3C,GAAAvtD,KAAAqU,UAAA,SAAAw3B,GACA,IAAA7rC,KAAAw0B,UAAA,KAAAx0B,KAAAw0B,UAAA,IAAAx0B,KAAAw0B,UACAq4B,GAAA7sD,KAAA6rC,GACAxsB,YAAAwsB,MAKAuiB,QAAA,WACA,OAAAb,GAAAvtD,KAAAqU,UAAA,SAAAw3B,GACA,OAAA7rC,KAAAw0B,UAAA,KAAAx0B,KAAAw0B,UAAA,IAAAx0B,KAAAw0B,SAAA,CACA,IAAApyB,EAAAyqD,GAAA7sD,KAAA6rC,GACAzpC,EAAAohB,aAAAqoB,EAAAzpC,EAAA6b,gBAKAowC,OAAA,WACA,OAAAd,GAAAvtD,KAAAqU,UAAA,SAAAw3B,GACA7rC,KAAA0H,YACA1H,KAAA0H,WAAA8b,aAAAqoB,EAAA7rC,SAKAsuD,MAAA,WACA,OAAAf,GAAAvtD,KAAAqU,UAAA,SAAAw3B,GACA7rC,KAAA0H,YACA1H,KAAA0H,WAAA8b,aAAAqoB,EAAA7rC,KAAA8e,gBAKA0oB,MAAA,WAIA,IAHA,IAAAqE,EACAjlC,EAAA,EAES,OAAAilC,EAAA7rC,KAAA4G,IAA8BA,IACvC,IAAAilC,EAAArX,WAGA6W,EAAAyiB,UAAA9H,GAAAna,GAAA,IAGAA,EAAA5f,YAAA,IAIA,OAAAjsB,MAGA0zB,MAAA,SAAAq6B,EAAAC,GAIA,OAHAD,EAAA,MAAAA,KACAC,EAAA,MAAAA,EAAAD,EAAAC,EAEAhuD,KAAA+L,IAAA,WACA,OAAAs/B,EAAA3X,MAAA1zB,KAAA+tD,EAAAC,MAIA78C,KAAA,SAAA4F,GACA,OAAAorC,EAAAniD,KAAA,SAAA+W,GACA,IAAA80B,EAAA7rC,KAAA,OACA4G,EAAA,EACAgf,EAAA5lB,KAAAkG,OAEA,QAAA5G,IAAAyX,GAAA,IAAA80B,EAAArX,SACA,OAAAqX,EAAAr0B,UAIA,oBAAAT,IAAA21C,GAAAphC,KAAAvU,KACA8uC,IAAAF,GAAA9T,KAAA96B,KAAA,WAAApT,eAAA,CAEAoT,EAAAs0B,EAAAwb,cAAA9vC,GAEA,IACA,KAAYnQ,EAAAgf,EAAOhf,IAInB,KAHAilC,EAAA7rC,KAAA4G,QAGA4tB,WACA6W,EAAAyiB,UAAA9H,GAAAna,GAAA,IACAA,EAAAr0B,UAAAT,GAIA80B,EAAA,EAGK,MAAA/hB,KAGL+hB,GACA7rC,KAAAwnC,QAAA1xB,OAAAiB,IAEG,KAAAA,EAAA1C,UAAAnO,SAGHuf,YAAA,WACA,IAAAghC,KAGA,OAAA8G,GAAAvtD,KAAAqU,UAAA,SAAAw3B,GACA,IAAApnB,EAAAzkB,KAAA0H,WAEA2jC,EAAAv/B,QAAA9L,KAAAymD,GAAA,IACApb,EAAAyiB,UAAA9H,GAAAhmD,OACAykB,GACAA,EAAA8pC,aAAA1iB,EAAA7rC,QAKGymD,MAIHpb,EAAA7kC,MACAoI,SAAA,SACA+kB,UAAA,UACAnQ,aAAA,SACA6b,YAAA,QACAmvB,WAAA,eACC,SAAAphD,EAAAqhD,GACDpjB,EAAAllC,GAAAiH,GAAA,SAAA4tB,GAOA,IANA,IAAA2Q,EACA3kB,KACAvD,EAAA4nB,EAAArQ,GACA/oB,EAAAwR,EAAAvd,OAAA,EACAU,EAAA,EAESA,GAAAqL,EAAWrL,IACpB+kC,EAAA/kC,IAAAqL,EAAAjS,UAAA0zB,OAAA,GACA2X,EAAA5nB,EAAA7c,IAAA6nD,GAAA9iB,GAIAjjC,EAAA8L,MAAAwS,EAAA2kB,EAAAnK,OAGA,OAAAxhC,KAAA0rC,UAAA1kB,MAGA,IAAA0nC,GAAA,IAAA1+C,OAAA,KAAAo0C,GAAA,uBAEAuK,GAAA,SAAA9iB,GAKA,IAAAyf,EAAAzf,EAAA+F,cAAA+B,YAMA,OAJA2X,KAAAsD,SACAtD,EAAA9rD,GAGA8rD,EAAAuD,iBAAAhjB,IAGAijB,GAAA,IAAA9+C,OAAAu0C,GAAAp4C,KAAA,UA+FA,SAAA4iD,GAAAljB,EAAAz+B,EAAA4hD,GACA,IAAAxmD,EAAAymD,EAAAC,EAAAloC,EAMAze,EAAAsjC,EAAAtjC,MAqCA,OAnCAymD,KAAAL,GAAA9iB,MAQA,MAFA7kB,EAAAgoC,EAAAG,iBAAA/hD,IAAA4hD,EAAA5hD,KAEAi+B,EAAA6C,SAAArC,EAAA+F,cAAA/F,KACA7kB,EAAAqkB,EAAA9iC,MAAAsjC,EAAAz+B,KAQAu9B,EAAAykB,kBAAAV,GAAApjC,KAAAtE,IAAA8nC,GAAAxjC,KAAAle,KAGA5E,EAAAD,EAAAC,MACAymD,EAAA1mD,EAAA0mD,SACAC,EAAA3mD,EAAA2mD,SAGA3mD,EAAA0mD,SAAA1mD,EAAA2mD,SAAA3mD,EAAAC,MAAAwe,EACAA,EAAAgoC,EAAAxmD,MAGAD,EAAAC,QACAD,EAAA0mD,WACA1mD,EAAA2mD,kBAIA5vD,IAAA0nB,EAIAA,EAAA,GACAA,EAIA,SAAAqoC,GAAAC,EAAAC,GAGA,OACA/tB,IAAA,WACA,IAAA8tB,IASA,OAAAtvD,KAAAwhC,IAAA+tB,GAAA/6C,MAAAxU,KAAAqU,kBALArU,KAAAwhC,OAzJA,WAIA,SAAAguB,IAGA,GAAAlhC,EAAA,CAIA4Y,EAAA3+B,MAAAknD,QAAA,+EAEAnhC,EAAA/lB,MAAAknD,QACA,4HAGAjc,GAAAn0B,YAAA6nB,GAAA7nB,YAAAiP,GAEA,IAAAohC,EAAAlwD,EAAAqvD,iBAAAvgC,GACAqhC,EAAA,OAAAD,EAAAj6C,IAGAm6C,EAAA,KAAAC,EAAAH,EAAAI,YAIAxhC,EAAA/lB,MAAAgtB,MAAA,MACAw6B,EAAA,KAAAF,EAAAH,EAAAn6B,OAIAy6B,EAAA,KAAAH,EAAAH,EAAAlnD,OAIA8lB,EAAA/lB,MAAAiN,SAAA,WACAy6C,EAAA,KAAA3hC,EAAApY,aAAA,WAEAs9B,GAAAx1B,YAAAkpB,GAIA5Y,EAAA,MAGA,SAAAuhC,EAAAK,GACA,OAAA55C,KAAAC,MAAAtF,WAAAi/C,IAGA,IAAAP,EAAAK,EAAAC,EAAAF,EACAH,EACA1oB,EAAAznC,EAAA6X,cAAA,OACAgX,EAAA7uB,EAAA6X,cAAA,OAGAgX,EAAA/lB,QAMA+lB,EAAA/lB,MAAA4nD,eAAA,cACA7hC,EAAAuB,WAAA,GAAAtnB,MAAA4nD,eAAA,GACAxlB,EAAAylB,gBAAA,gBAAA9hC,EAAA/lB,MAAA4nD,eAEA9kB,EAAAhkC,OAAAsjC,GACA0lB,kBAAA,WAEA,OADAb,IACAQ,GAEAZ,eAAA,WAEA,OADAI,IACAO,GAEAO,cAAA,WAEA,OADAd,IACAG,GAEAY,mBAAA,WAEA,OADAf,IACAI,GAEAY,cAAA,WAEA,OADAhB,IACAS,MArFA,GAoKA,IAKAQ,GAAA,4BACAC,GAAA,MACAC,IAAYn7C,SAAA,WAAAo7C,WAAA,SAAAzlC,QAAA,SACZ0lC,IACAC,cAAA,IACAC,WAAA,OAGAC,IAAA,qBACAC,GAAAxxD,EAAA6X,cAAA,OAAA/O,MAwBA,SAAA2oD,GAAA9jD,GACA,IAAA4Z,EAAAqkB,EAAA8lB,SAAA/jD,GAIA,OAHA4Z,IACAA,EAAAqkB,EAAA8lB,SAAA/jD,GAxBA,SAAAA,GAGA,GAAAA,KAAA6jD,GACA,OAAA7jD,EAOA,IAHA,IAAAgkD,EAAAhkD,EAAA,GAAAlJ,cAAAkJ,EAAAf,MAAA,GACAzF,EAAAoqD,GAAA9qD,OAEAU,KAEA,IADAwG,EAAA4jD,GAAApqD,GAAAwqD,KACAH,GACA,OAAA7jD,EAUAikD,CAAAjkD,OAEA4Z,EAGA,SAAAsqC,GAAAzlB,EAAA90B,EAAAw6C,GAIA,IAAAxkB,EAAAuX,GAAAzS,KAAA96B,GACA,OAAAg2B,EAGAz2B,KAAAwW,IAAA,EAAAigB,EAAA,IAAAwkB,GAAA,KAAAxkB,EAAA,UACAh2B,EAGA,SAAAy6C,GAAA3lB,EAAA4lB,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAjrD,EAAA,UAAA6qD,EAAA,IACAK,EAAA,EACAC,EAAA,EAGA,GAAAL,KAAAC,EAAA,oBACA,SAGA,KAAQ/qD,EAAA,EAAOA,GAAA,EAGf,WAAA8qD,IACAK,GAAA1mB,EAAA38B,IAAAm9B,EAAA6lB,EAAAnN,GAAA39C,IAAA,EAAAgrD,IAIAD,GAmBA,YAAAD,IACAK,GAAA1mB,EAAA38B,IAAAm9B,EAAA,UAAA0Y,GAAA39C,IAAA,EAAAgrD,IAIA,WAAAF,IACAK,GAAA1mB,EAAA38B,IAAAm9B,EAAA,SAAA0Y,GAAA39C,GAAA,WAAAgrD,MAtBAG,GAAA1mB,EAAA38B,IAAAm9B,EAAA,UAAA0Y,GAAA39C,IAAA,EAAAgrD,GAGA,YAAAF,EACAK,GAAA1mB,EAAA38B,IAAAm9B,EAAA,SAAA0Y,GAAA39C,GAAA,WAAAgrD,GAIAE,GAAAzmB,EAAA38B,IAAAm9B,EAAA,SAAA0Y,GAAA39C,GAAA,WAAAgrD,IAiCA,OAbAD,GAAAE,GAAA,IAIAE,GAAAz7C,KAAAwW,IAAA,EAAAxW,KAAAkX,KACAqe,EAAA,SAAA4lB,EAAA,GAAAvtD,cAAAutD,EAAAplD,MAAA,IACAwlD,EACAE,EACAD,EACA,MAIAC,EAGA,SAAAC,GAAAnmB,EAAA4lB,EAAAK,GAGA,IAAAF,EAAAjD,GAAA9iB,GACA39B,EAAA6gD,GAAAljB,EAAA4lB,EAAAG,GACAD,EAAA,eAAAtmB,EAAA38B,IAAAm9B,EAAA,eAAA+lB,GACAK,EAAAN,EAIA,GAAAjD,GAAApjC,KAAApd,GAAA,CACA,IAAA4jD,EACA,OAAA5jD,EAEAA,EAAA,OAyBA,OApBA+jD,MACAtnB,EAAA0lB,qBAAAniD,IAAA29B,EAAAtjC,MAAAkpD,KAMA,SAAAvjD,IACA+C,WAAA/C,IAAA,WAAAm9B,EAAA38B,IAAAm9B,EAAA,aAAA+lB,MAEA1jD,EAAA29B,EAAA,SAAA4lB,EAAA,GAAAvtD,cAAAutD,EAAAplD,MAAA,IAGA4lD,GAAA,IAIA/jD,EAAA+C,WAAA/C,IAAA,GAIAsjD,GACA3lB,EACA4lB,EACAK,IAAAH,EAAA,oBACAM,EACAL,EAGA1jD,GAEA,KA2RA,SAAAgkD,GAAArmB,EAAA9rC,EAAAwR,EAAAO,EAAAqgD,GACA,WAAAD,GAAAz3B,UAAA5lB,KAAAg3B,EAAA9rC,EAAAwR,EAAAO,EAAAqgD,GAzRA9mB,EAAAhkC,QAIA+qD,UACAC,SACA7wB,IAAA,SAAAqK,EAAAmjB,GACA,GAAAA,EAAA,CAGA,IAAAhoC,EAAA+nC,GAAAljB,EAAA,WACA,WAAA7kB,EAAA,IAAAA,MAOAm+B,WACAmN,yBAAA,EACA5qC,aAAA,EACA6qC,aAAA,EACAC,UAAA,EACAC,YAAA,EACA1B,YAAA,EACA2B,YAAA,EACAL,SAAA,EACAhtD,OAAA,EACAstD,SAAA,EACAC,QAAA,EACAC,QAAA,EACAC,MAAA,GAKA3B,YAGA5oD,MAAA,SAAAsjC,EAAAz+B,EAAA2J,EAAA+6C,GAGA,GAAAjmB,GAAA,IAAAA,EAAArX,UAAA,IAAAqX,EAAArX,UAAAqX,EAAAtjC,MAAA,CAKA,IAAAye,EAAAvjB,EAAAsgD,EACAgP,EAAAnQ,EAAAx1C,GACA4lD,EAAAtC,GAAAplC,KAAAle,GACA7E,EAAAsjC,EAAAtjC,MAaA,GARAyqD,IACA5lD,EAAA8jD,GAAA6B,IAIAhP,EAAA1Y,EAAA+mB,SAAAhlD,IAAAi+B,EAAA+mB,SAAAW,QAGAzzD,IAAAyX,EAwCA,OAAAgtC,GAAA,QAAAA,QACAzkD,KAAA0nB,EAAA+8B,EAAAviB,IAAAqK,GAAA,EAAAimB,IAEA9qC,EAIAze,EAAA6E,GA3CA,YAHA3J,SAAAsT,KAGAiQ,EAAAs9B,GAAAzS,KAAA96B,KAAAiQ,EAAA,KACAjQ,EAAA2tC,GAAA7Y,EAAAz+B,EAAA4Z,GAGAvjB,EAAA,UAIA,MAAAsT,UAKA,WAAAtT,IACAsT,GAAAiQ,KAAA,KAAAqkB,EAAA8Z,UAAA4N,GAAA,UAIApoB,EAAAylB,iBAAA,KAAAr5C,GAAA,IAAA3J,EAAAuF,QAAA,gBACApK,EAAA6E,GAAA,WAIA22C,GAAA,QAAAA,QACAzkD,KAAAyX,EAAAgtC,EAAAjjB,IAAA+K,EAAA90B,EAAA+6C,MAEAkB,EACAzqD,EAAA0qD,YAAA7lD,EAAA2J,GAEAxO,EAAA6E,GAAA2J,MAkBArI,IAAA,SAAAm9B,EAAAz+B,EAAA0kD,EAAAF,GACA,IAAA1jD,EAAAwC,EAAAqzC,EACAgP,EAAAnQ,EAAAx1C,GA6BA,OA5BAsjD,GAAAplC,KAAAle,KAMAA,EAAA8jD,GAAA6B,KAIAhP,EAAA1Y,EAAA+mB,SAAAhlD,IAAAi+B,EAAA+mB,SAAAW,KAGA,QAAAhP,IACA71C,EAAA61C,EAAAviB,IAAAqK,GAAA,EAAAimB,SAIAxyD,IAAA4O,IACAA,EAAA6gD,GAAAljB,EAAAz+B,EAAAwkD,IAIA,WAAA1jD,GAAAd,KAAAyjD,KACA3iD,EAAA2iD,GAAAzjD,IAIA,KAAA0kD,MACAphD,EAAAO,WAAA/C,IACA,IAAA4jD,GAAAthD,SAAAE,MAAA,EAAAxC,GAGAA,KAIAm9B,EAAA7kC,MAAA,2BAAAI,EAAA6qD,GACApmB,EAAA+mB,SAAAX,IACAjwB,IAAA,SAAAqK,EAAAmjB,EAAA8C,GACA,GAAA9C,EAIA,OAAAyB,GAAAnlC,KAAA+f,EAAA38B,IAAAm9B,EAAA,aAQAA,EAAAqnB,iBAAAhtD,QAAA2lC,EAAAn1B,wBAAAlO,MAIAwpD,GAAAnmB,EAAA4lB,EAAAK,GAHArN,GAAA5Y,EAAA8kB,GAAA,WACA,OAAAqB,GAAAnmB,EAAA4lB,EAAAK,MAMAhxB,IAAA,SAAA+K,EAAA90B,EAAA+6C,GACA,IAAA/kB,EACA6kB,EAAAjD,GAAA9iB,GACA8lB,EAAA,eAAAtmB,EAAA38B,IAAAm9B,EAAA,eAAA+lB,GACAL,EAAAO,GAAAN,GACA3lB,EACA4lB,EACAK,EACAH,EACAC,GAsBA,OAjBAD,GAAAhnB,EAAA6lB,kBAAAoB,EAAAp8C,WACA+7C,GAAAj7C,KAAAkX,KACAqe,EAAA,SAAA4lB,EAAA,GAAAvtD,cAAAutD,EAAAplD,MAAA,IACA4E,WAAA2gD,EAAAH,IACAD,GAAA3lB,EAAA4lB,EAAA,YAAAG,GACA,KAKAL,IAAAxkB,EAAAuX,GAAAzS,KAAA96B,KACA,QAAAg2B,EAAA,YAEAlB,EAAAtjC,MAAAkpD,GAAA16C,EACAA,EAAAs0B,EAAA38B,IAAAm9B,EAAA4lB,IAGAH,GAAAzlB,EAAA90B,EAAAw6C,OAKAlmB,EAAA+mB,SAAAtC,WAAAT,GAAA1kB,EAAA4lB,mBACA,SAAA1kB,EAAAmjB,GACA,GAAAA,EACA,OAAA/9C,WAAA89C,GAAAljB,EAAA,gBACAA,EAAAn1B,wBAAAhB,KACA+uC,GAAA5Y,GAAkBikB,WAAA,GAAgB,WAClC,OAAAjkB,EAAAn1B,wBAAAhB,QAEA,OAMA21B,EAAA7kC,MACA2uB,OAAA,GACAjB,QAAA,GACA7D,OAAA,SACC,SAAA2Y,EAAAmqB,GACD9nB,EAAA+mB,SAAAppB,EAAAmqB,IACAC,OAAA,SAAAr8C,GAOA,IANA,IAAAnQ,EAAA,EACAysD,KAGAC,EAAA,iBAAAv8C,IAAA2I,MAAA,MAAA3I,GAEUnQ,EAAA,EAAOA,IACjBysD,EAAArqB,EAAAub,GAAA39C,GAAAusD,GACAG,EAAA1sD,IAAA0sD,EAAA1sD,EAAA,IAAA0sD,EAAA,GAGA,OAAAD,IAIA,WAAArqB,IACAqC,EAAA+mB,SAAAppB,EAAAmqB,GAAAryB,IAAAwwB,MAIAjmB,EAAAllC,GAAAkB,QACAqH,IAAA,SAAAtB,EAAA2J,GACA,OAAAorC,EAAAniD,KAAA,SAAA6rC,EAAAz+B,EAAA2J,GACA,IAAA66C,EAAA3rD,EACA8F,KACAnF,EAAA,EAEA,GAAA4zB,MAAA55B,QAAAwM,GAAA,CAIA,IAHAwkD,EAAAjD,GAAA9iB,GACA5lC,EAAAmH,EAAAlH,OAEWU,EAAAX,EAASW,IACpBmF,EAAAqB,EAAAxG,IAAAykC,EAAA38B,IAAAm9B,EAAAz+B,EAAAxG,IAAA,EAAAgrD,GAGA,OAAA7lD,EAGA,YAAAzM,IAAAyX,EACAs0B,EAAA9iC,MAAAsjC,EAAAz+B,EAAA2J,GACAs0B,EAAA38B,IAAAm9B,EAAAz+B,IACGA,EAAA2J,EAAA1C,UAAAnO,OAAA,MAQHmlC,EAAA6mB,SAEAA,GAAAz3B,WACAgR,YAAAymB,GACAr9C,KAAA,SAAAg3B,EAAA9rC,EAAAwR,EAAAO,EAAAqgD,EAAAjN,GACAllD,KAAA6rC,OACA7rC,KAAAuR,OACAvR,KAAAmyD,UAAA9mB,EAAA8mB,OAAApM,SACA/lD,KAAAD,UACAC,KAAA6R,MAAA7R,KAAAkU,IAAAlU,KAAA8yC,MACA9yC,KAAA8R,MACA9R,KAAAklD,SAAA7Z,EAAA8Z,UAAA5zC,GAAA,UAEAuhC,IAAA,WACA,IAAAiR,EAAAmO,GAAAqB,UAAAvzD,KAAAuR,MAEA,OAAAwyC,KAAAviB,IACAuiB,EAAAviB,IAAAxhC,MACAkyD,GAAAqB,UAAAxN,SAAAvkB,IAAAxhC,OAEAwzD,IAAA,SAAAC,GACA,IAAAC,EACA3P,EAAAmO,GAAAqB,UAAAvzD,KAAAuR,MAoBA,OAlBAvR,KAAAD,QAAA24B,SACA14B,KAAA2zD,IAAAD,EAAAroB,EAAA8mB,OAAAnyD,KAAAmyD,QACAsB,EAAAzzD,KAAAD,QAAA24B,SAAA+6B,EAAA,IAAAzzD,KAAAD,QAAA24B,UAGA14B,KAAA2zD,IAAAD,EAAAD,EAEAzzD,KAAAkU,KAAAlU,KAAA8R,IAAA9R,KAAA6R,OAAA6hD,EAAA1zD,KAAA6R,MAEA7R,KAAAD,QAAA6zD,MACA5zD,KAAAD,QAAA6zD,KAAApxD,KAAAxC,KAAA6rC,KAAA7rC,KAAAkU,IAAAlU,MAGA+jD,KAAAjjB,IACAijB,EAAAjjB,IAAA9gC,MAEAkyD,GAAAqB,UAAAxN,SAAAjlB,IAAA9gC,MAEAA,OAIAkyD,GAAAz3B,UAAA5lB,KAAA4lB,UAAAy3B,GAAAz3B,UAEAy3B,GAAAqB,WACAxN,UACAvkB,IAAA,SAAAojB,GACA,IAAAzqB,EAIA,WAAAyqB,EAAA/Y,KAAArX,UACA,MAAAowB,EAAA/Y,KAAA+Y,EAAArzC,OAAA,MAAAqzC,EAAA/Y,KAAAtjC,MAAAq8C,EAAArzC,MACAqzC,EAAA/Y,KAAA+Y,EAAArzC,OAOA4oB,EAAAkR,EAAA38B,IAAAk2C,EAAA/Y,KAAA+Y,EAAArzC,KAAA,MAGA,SAAA4oB,IAAA,GAEA2G,IAAA,SAAA8jB,GAKAvZ,EAAAwoB,GAAAD,KAAAhP,EAAArzC,MACA85B,EAAAwoB,GAAAD,KAAAhP,EAAArzC,MAAAqzC,GACI,IAAAA,EAAA/Y,KAAArX,UACJ,MAAAowB,EAAA/Y,KAAAtjC,MAAA8iC,EAAA8lB,SAAAvM,EAAArzC,SACA85B,EAAA+mB,SAAAxN,EAAArzC,MAGAqzC,EAAA/Y,KAAA+Y,EAAArzC,MAAAqzC,EAAA1wC,IAFAm3B,EAAA9iC,MAAAq8C,EAAA/Y,KAAA+Y,EAAArzC,KAAAqzC,EAAA1wC,IAAA0wC,EAAAM,SAUAgN,GAAAqB,UAAAp/B,UAAA+9B,GAAAqB,UAAA59C,YACAmrB,IAAA,SAAA8jB,GACAA,EAAA/Y,KAAArX,UAAAowB,EAAA/Y,KAAAnkC,aACAk9C,EAAA/Y,KAAA+Y,EAAArzC,MAAAqzC,EAAA1wC,OAKAm3B,EAAA8mB,QACA2B,OAAA,SAAAhlC,GACA,OAAAA,GAEAilC,MAAA,SAAAjlC,GACA,SAAAxY,KAAA09C,IAAAllC,EAAAxY,KAAA29C,IAAA,GAEAlO,SAAA,SAGA1a,EAAAwoB,GAAA3B,GAAAz3B,UAAA5lB,KAGAw2B,EAAAwoB,GAAAD,QAKA,IACAM,GAAAC,GACAC,GAAA,yBACAC,GAAA,cAEA,SAAAC,KACAH,MACA,IAAA10D,EAAA80D,QAAA/0D,EAAAg1D,sBACAh1D,EAAAg1D,sBAAAF,IAEA90D,EAAA+U,WAAA+/C,GAAAjpB,EAAAwoB,GAAAY,UAGAppB,EAAAwoB,GAAAa,QAKA,SAAAC,KAIA,OAHAn1D,EAAA+U,WAAA,WACA2/C,QAAA50D,IAEA40D,GAAA//C,KAAAD,MAIA,SAAA0gD,GAAAnxD,EAAAoxD,GACA,IAAAl7B,EACA/yB,EAAA,EACA8rC,GAAW98B,OAAAnS,GAKX,IADAoxD,IAAA,IACQjuD,EAAA,EAAOA,GAAA,EAAAiuD,EAEfniB,EAAA,UADA/Y,EAAA4qB,GAAA39C,KACA8rC,EAAA,UAAA/Y,GAAAl2B,EAOA,OAJAoxD,IACAniB,EAAA2f,QAAA3f,EAAAlqC,MAAA/E,GAGAivC,EAGA,SAAAoiB,GAAA/9C,EAAAxF,EAAAwjD,GAKA,IAJA,IAAAnQ,EACA4I,GAAAwH,GAAAC,SAAA1jD,QAAAqO,OAAAo1C,GAAAC,SAAA,MACA9wD,EAAA,EACA+B,EAAAsnD,EAAAtnD,OACQ/B,EAAA+B,EAAgB/B,IACxB,GAAAygD,EAAA4I,EAAArpD,GAAA3B,KAAAuyD,EAAAxjD,EAAAwF,GAGA,OAAA6tC,EAsNA,SAAAoQ,GAAAnpB,EAAAqpB,EAAAn1D,GACA,IAAAo6B,EACAg7B,EACAhxD,EAAA,EACA+B,EAAA8uD,GAAAI,WAAAlvD,OACAs5C,EAAAnU,EAAA+T,WAAAG,OAAA,kBAGAmV,EAAA7oB,OAEA6oB,EAAA,WACA,GAAAS,EACA,SAYA,IAVA,IAAAE,EAAAnB,IAAAS,KACAxT,EAAA7qC,KAAAwW,IAAA,EAAAioC,EAAAO,UAAAP,EAAAr8B,SAAA28B,GAKA5B,EAAA,GADAtS,EAAA4T,EAAAr8B,UAAA,GAEAv0B,EAAA,EACA+B,EAAA6uD,EAAAQ,OAAArvD,OAEU/B,EAAA+B,EAAgB/B,IAC1B4wD,EAAAQ,OAAApxD,GAAAqvD,IAAAC,GAMA,OAHAjU,EAAAiB,WAAA5U,GAAAkpB,EAAAtB,EAAAtS,IAGAsS,EAAA,GAAAvtD,EACAi7C,GAIAj7C,GACAs5C,EAAAiB,WAAA5U,GAAAkpB,EAAA,MAIAvV,EAAAkB,YAAA7U,GAAAkpB,KACA,IAEAA,EAAAvV,EAAAvB,SACApS,OACAwe,MAAAhf,EAAAhkC,UAA2B6tD,GAC3Bj6B,KAAAoQ,EAAAhkC,QAAA,GACAmuD,iBACArD,OAAA9mB,EAAA8mB,OAAApM,UACIhmD,GACJ01D,mBAAAP,EACAQ,gBAAA31D,EACAu1D,UAAApB,IAAAS,KACAj8B,SAAA34B,EAAA24B,SACA68B,UACAT,YAAA,SAAAvjD,EAAAO,GACA,IAAA8yC,EAAAvZ,EAAA6mB,MAAArmB,EAAAkpB,EAAA95B,KAAA1pB,EAAAO,EACAijD,EAAA95B,KAAAu6B,cAAAjkD,IAAAwjD,EAAA95B,KAAAk3B,QAEA,OADA4C,EAAAQ,OAAA7sD,KAAAk8C,GACAA,GAEAX,KAAA,SAAA0R,GACA,IAAAxxD,EAAA,EAIA+B,EAAAyvD,EAAAZ,EAAAQ,OAAArvD,OAAA,EACA,GAAAivD,EACA,OAAAn1D,KAGA,IADAm1D,GAAA,EACWhxD,EAAA+B,EAAgB/B,IAC3B4wD,EAAAQ,OAAApxD,GAAAqvD,IAAA,GAUA,OANAmC,GACAnW,EAAAiB,WAAA5U,GAAAkpB,EAAA,MACAvV,EAAAkB,YAAA7U,GAAAkpB,EAAAY,KAEAnW,EAAAsB,WAAAjV,GAAAkpB,EAAAY,IAEA31D,QAGAqqD,EAAA0K,EAAA1K,MAIA,KA/HA,SAAAA,EAAAmL,GACA,IAAArxD,EAAAiJ,EAAA+kD,EAAAp7C,EAAAgtC,EAGA,IAAA5/C,KAAAkmD,EAeA,GAbA8H,EAAAqD,EADApoD,EAAAw1C,EAAAz+C,IAEA4S,EAAAszC,EAAAlmD,GACAq2B,MAAA55B,QAAAmW,KACAo7C,EAAAp7C,EAAA,GACAA,EAAAszC,EAAAlmD,GAAA4S,EAAA,IAGA5S,IAAAiJ,IACAi9C,EAAAj9C,GAAA2J,SACAszC,EAAAlmD,KAGA4/C,EAAA1Y,EAAA+mB,SAAAhlD,KACA,WAAA22C,EAMA,IAAA5/C,KALA4S,EAAAgtC,EAAAqP,OAAAr8C,UACAszC,EAAAj9C,GAIA2J,EACA5S,KAAAkmD,IACAA,EAAAlmD,GAAA4S,EAAA5S,GACAqxD,EAAArxD,GAAAguD,QAIAqD,EAAApoD,GAAA+kD,EA6FAyD,CAAAvL,EAAA0K,EAAA95B,KAAAu6B,eAEQrxD,EAAA+B,EAAgB/B,IAExB,GADAg2B,EAAA66B,GAAAI,WAAAjxD,GAAA3B,KAAAuyD,EAAAlpB,EAAAwe,EAAA0K,EAAA95B,MAMA,OAJA2P,EAAAzQ,EAAA8pB,QACA5Y,EAAA2Y,YAAA+Q,EAAAlpB,KAAAkpB,EAAA95B,KAAA2jB,OAAAqF,KACA9pB,EAAA8pB,KAAA4R,KAAA17B,IAEAA,EAyBA,OArBAkR,EAAAt/B,IAAAs+C,EAAAyK,GAAAC,GAEAnqB,EAAAmqB,EAAA95B,KAAAppB,QACAkjD,EAAA95B,KAAAppB,MAAArP,KAAAqpC,EAAAkpB,GAIAA,EACAhV,SAAAgV,EAAA95B,KAAA8kB,UACA1R,KAAA0mB,EAAA95B,KAAAoT,KAAA0mB,EAAA95B,KAAAr4B,UACAs7C,KAAA6W,EAAA95B,KAAAijB,MACAqB,OAAAwV,EAAA95B,KAAAskB,QAEAlU,EAAAwoB,GAAA9/C,MACAs3B,EAAAhkC,OAAAqtD,GACA7oB,OACAiqB,KAAAf,EACAnW,MAAAmW,EAAA95B,KAAA2jB,SAIAmW,EAGA1pB,EAAA2pB,UAAA3pB,EAAAhkC,OAAA2tD,IAEAC,UACAc,KAAA,SAAAxkD,EAAAwF,GACA,IAAA6tC,EAAA5kD,KAAA80D,YAAAvjD,EAAAwF,GAEA,OADA2tC,GAAAE,EAAA/Y,KAAAt6B,EAAA+yC,GAAAzS,KAAA96B,GAAA6tC,GACAA,KAIAoR,QAAA,SAAA3L,EAAAhoD,GACAuoC,EAAAyf,IACAhoD,EAAAgoD,EACAA,GAAA,MAEAA,IAAA73C,MAAAgrC,GAOA,IAJA,IAAAjsC,EACApN,EAAA,EACA+B,EAAAmkD,EAAAnkD,OAES/B,EAAA+B,EAAgB/B,IACzBoN,EAAA84C,EAAAlmD,GACA6wD,GAAAC,SAAA1jD,GAAAyjD,GAAAC,SAAA1jD,OACAyjD,GAAAC,SAAA1jD,GAAA8qB,QAAAh6B,IAIA+yD,YA3WA,SAAAvpB,EAAAwe,EAAApvB,GACA,IAAA1pB,EAAAwF,EAAA0uC,EAAA1B,EAAAkS,EAAAC,EAAAC,EAAAhrC,EACAirC,EAAA,UAAA/L,GAAA,WAAAA,EACAyL,EAAA91D,KACA+hC,KACAx5B,EAAAsjC,EAAAtjC,MACAgsD,EAAA1oB,EAAArX,UAAAgwB,GAAA3Y,GACAwqB,EAAAjT,EAAA5hB,IAAAqK,EAAA,UA6BA,IAAAt6B,KA1BA0pB,EAAA2jB,QAEA,OADAmF,EAAA1Y,EAAA2Y,YAAAnY,EAAA,OACAyqB,WACAvS,EAAAuS,SAAA,EACAL,EAAAlS,EAAAvc,MAAAsX,KACAiF,EAAAvc,MAAAsX,KAAA,WACAiF,EAAAuS,UACAL,MAIAlS,EAAAuS,WAEAR,EAAAvW,OAAA,WAGAuW,EAAAvW,OAAA,WACAwE,EAAAuS,WACAjrB,EAAAuT,MAAA/S,EAAA,MAAA3lC,QACA69C,EAAAvc,MAAAsX,YAOAuL,EAEA,GADAtzC,EAAAszC,EAAA94C,GACA6iD,GAAA9oC,KAAAvU,GAAA,CAGA,UAFAszC,EAAA94C,GACAk0C,KAAA,WAAA1uC,EACAA,KAAAw9C,EAAA,gBAIA,YAAAx9C,IAAAs/C,QAAA/2D,IAAA+2D,EAAA9kD,GAKA,SAJAgjD,GAAA,EAOAxyB,EAAAxwB,GAAA8kD,KAAA9kD,IAAA85B,EAAA9iC,MAAAsjC,EAAAt6B,GAMA,IADA2kD,GAAA7qB,EAAAmB,cAAA6d,MACAhf,EAAAmB,cAAAzK,GA8DA,IAAAxwB,KAzDA6kD,GAAA,IAAAvqB,EAAArX,WAMAyG,EAAAplB,UAAAtN,EAAAsN,SAAAtN,EAAAguD,UAAAhuD,EAAAiuD,WAIA,OADAL,EAAAE,KAAAlrC,WAEAgrC,EAAA/S,EAAA5hB,IAAAqK,EAAA,YAGA,UADA1gB,EAAAkgB,EAAA38B,IAAAm9B,EAAA,cAEAsqB,EACAhrC,EAAAgrC,GAIA5Q,IAAA1Z,IAAA,GACAsqB,EAAAtqB,EAAAtjC,MAAA4iB,SAAAgrC,EACAhrC,EAAAkgB,EAAA38B,IAAAm9B,EAAA,WACA0Z,IAAA1Z,OAKA,WAAA1gB,GAAA,iBAAAA,GAAA,MAAAgrC,IACA,SAAA9qB,EAAA38B,IAAAm9B,EAAA,WAGAqqB,IACAJ,EAAAznB,KAAA,WACA9lC,EAAA4iB,QAAAgrC,IAEA,MAAAA,IACAhrC,EAAA5iB,EAAA4iB,QACAgrC,EAAA,SAAAhrC,EAAA,GAAAA,IAGA5iB,EAAA4iB,QAAA,iBAKA8P,EAAAplB,WACAtN,EAAAsN,SAAA,SACAigD,EAAAvW,OAAA,WACAh3C,EAAAsN,SAAAolB,EAAAplB,SAAA,GACAtN,EAAAguD,UAAAt7B,EAAAplB,SAAA,GACAtN,EAAAiuD,UAAAv7B,EAAAplB,SAAA,MAKAqgD,GAAA,EACAn0B,EAGAm0B,IACAG,EACA,WAAAA,IACA9B,EAAA8B,EAAA9B,QAGA8B,EAAAjT,EAAAjB,OAAAtW,EAAA,UAAiD1gB,QAAAgrC,IAIjD1Q,IACA4Q,EAAA9B,WAIAA,GACAhP,IAAA1Z,IAAA,GAKAiqB,EAAAznB,KAAA,WASA,IAAA98B,KAJAgjD,GACAhP,IAAA1Z,IAEAuX,EAAA7gD,OAAAspC,EAAA,UACA9J,EACAsJ,EAAA9iC,MAAAsjC,EAAAt6B,EAAAwwB,EAAAxwB,OAMA2kD,EAAApB,GAAAP,EAAA8B,EAAA9kD,GAAA,EAAAA,EAAAukD,GACAvkD,KAAA8kD,IACAA,EAAA9kD,GAAA2kD,EAAArkD,MACA0iD,IACA2B,EAAApkD,IAAAokD,EAAArkD,MACAqkD,EAAArkD,MAAA,MAuMA4kD,UAAA,SAAAp0D,EAAA+rD,GACAA,EACA4G,GAAAI,WAAA/4B,QAAAh6B,GAEA2yD,GAAAI,WAAA1sD,KAAArG,MAKAgpC,EAAAqrB,MAAA,SAAAA,EAAAvE,EAAAhsD,GACA,IAAAwwD,EAAAD,GAAA,iBAAAA,EAAArrB,EAAAhkC,UAAiEqvD,IACjE9zD,SAAAuD,OAAAgsD,GACAvnB,EAAA8rB,MACAh+B,SAAAg+B,EACAvE,OAAAhsD,GAAAgsD,OAAAvnB,EAAAunB,OAoCA,OAhCA9mB,EAAAwoB,GAAAt0B,IACAo3B,EAAAj+B,SAAA,EAGA,iBAAAi+B,EAAAj+B,WACAi+B,EAAAj+B,YAAA2S,EAAAwoB,GAAA+C,OACAD,EAAAj+B,SAAA2S,EAAAwoB,GAAA+C,OAAAD,EAAAj+B,UAGAi+B,EAAAj+B,SAAA2S,EAAAwoB,GAAA+C,OAAA7Q,UAMA,MAAA4Q,EAAA/X,QAAA,IAAA+X,EAAA/X,QACA+X,EAAA/X,MAAA,MAIA+X,EAAA/hD,IAAA+hD,EAAA/zD,SAEA+zD,EAAA/zD,SAAA,WACAgoC,EAAA+rB,EAAA/hD,MACA+hD,EAAA/hD,IAAApS,KAAAxC,MAGA22D,EAAA/X,OACAvT,EAAAwY,QAAA7jD,KAAA22D,EAAA/X,QAIA+X,GAGAtrB,EAAAllC,GAAAkB,QACAwvD,OAAA,SAAAH,EAAAI,EAAA3E,EAAA9vD,GAGA,OAAArC,KAAAsN,OAAAk3C,IAAA91C,IAAA,aAAAhK,OAGAoN,MAAAilD,SAAoB1E,QAAAyE,GAAcJ,EAAAvE,EAAA9vD,IAElC00D,QAAA,SAAAxlD,EAAAmlD,EAAAvE,EAAA9vD,GACA,IAAAmlC,EAAA6D,EAAAmB,cAAAj7B,GACAylD,EAAA3rB,EAAAqrB,QAAAvE,EAAA9vD,GACA40D,EAAA,WAGA,IAAAnB,EAAAd,GAAAh1D,KAAAqrC,EAAAhkC,UAAiDkK,GAAAylD,IAGjDxvB,GAAA4b,EAAA5hB,IAAAxhC,KAAA,YACA81D,EAAA7R,MAAA,IAKA,OAFAgT,EAAAC,OAAAD,EAEAzvB,IAAA,IAAAwvB,EAAApY,MACA5+C,KAAAwG,KAAAywD,GACAj3D,KAAA4+C,MAAAoY,EAAApY,MAAAqY,IAEAhT,KAAA,SAAAxgD,EAAAygD,EAAAyR,GACA,IAAAwB,EAAA,SAAApT,GACA,IAAAE,EAAAF,EAAAE,YACAF,EAAAE,KACAA,EAAA0R,IAYA,MATA,iBAAAlyD,IACAkyD,EAAAzR,EACAA,EAAAzgD,EACAA,OAAAnE,GAEA4kD,IAAA,IAAAzgD,GACAzD,KAAA4+C,MAAAn7C,GAAA,SAGAzD,KAAAwG,KAAA,WACA,IAAAq9C,GAAA,EACA1/C,EAAA,MAAAV,KAAA,aACA2zD,EAAA/rB,EAAA+rB,OACA92D,EAAA8iD,EAAA5hB,IAAAxhC,MAEA,GAAAmE,EACA7D,EAAA6D,IAAA7D,EAAA6D,GAAA8/C,MACAkT,EAAA72D,EAAA6D,SAGA,IAAAA,KAAA7D,EACAA,EAAA6D,IAAA7D,EAAA6D,GAAA8/C,MAAAoQ,GAAA/oC,KAAAnnB,IACAgzD,EAAA72D,EAAA6D,IAKA,IAAAA,EAAAizD,EAAAlxD,OAA+B/B,KAC/BizD,EAAAjzD,GAAA0nC,OAAA7rC,MACA,MAAAyD,GAAA2zD,EAAAjzD,GAAAy6C,QAAAn7C,IAEA2zD,EAAAjzD,GAAA2xD,KAAA7R,KAAA0R,GACA9R,GAAA,EACAuT,EAAAlvD,OAAA/D,EAAA,KAOA0/C,GAAA8R,GACAtqB,EAAAwY,QAAA7jD,KAAAyD,MAIAyzD,OAAA,SAAAzzD,GAIA,OAHA,IAAAA,IACAA,KAAA,MAEAzD,KAAAwG,KAAA,WACA,IAAArC,EACA7D,EAAA8iD,EAAA5hB,IAAAxhC,MACA4+C,EAAAt+C,EAAAmD,EAAA,SACAsgD,EAAAzjD,EAAAmD,EAAA,cACA2zD,EAAA/rB,EAAA+rB,OACAlxD,EAAA04C,IAAA14C,OAAA,EAaA,IAVA5F,EAAA42D,QAAA,EAGA7rB,EAAAuT,MAAA5+C,KAAAyD,MAEAsgD,KAAAE,MACAF,EAAAE,KAAAzhD,KAAAxC,MAAA,GAIAmE,EAAAizD,EAAAlxD,OAA+B/B,KAC/BizD,EAAAjzD,GAAA0nC,OAAA7rC,MAAAo3D,EAAAjzD,GAAAy6C,QAAAn7C,IACA2zD,EAAAjzD,GAAA2xD,KAAA7R,MAAA,GACAmT,EAAAlvD,OAAA/D,EAAA,IAKA,IAAAA,EAAA,EAAmBA,EAAA+B,EAAgB/B,IACnCy6C,EAAAz6C,IAAAy6C,EAAAz6C,GAAA+yD,QACAtY,EAAAz6C,GAAA+yD,OAAA10D,KAAAxC,aAKAM,EAAA42D,YAKA7rB,EAAA7kC,MAAA,iCAAAI,EAAAwG,GACA,IAAAiqD,EAAAhsB,EAAAllC,GAAAiH,GACAi+B,EAAAllC,GAAAiH,GAAA,SAAAspD,EAAAvE,EAAA9vD,GACA,aAAAq0D,GAAA,kBAAAA,EACAW,EAAA7iD,MAAAxU,KAAAqU,WACArU,KAAA+2D,QAAAnC,GAAAxnD,GAAA,GAAAspD,EAAAvE,EAAA9vD,MAKAgpC,EAAA7kC,MACA8wD,UAAA1C,GAAA,QACA2C,QAAA3C,GAAA,QACA4C,YAAA5C,GAAA,UACA6C,QAAUpF,QAAA,QACVqF,SAAWrF,QAAA,QACXsF,YAActF,QAAA,WACb,SAAAjlD,EAAAi9C,GACDhf,EAAAllC,GAAAiH,GAAA,SAAAspD,EAAAvE,EAAA9vD,GACA,OAAArC,KAAA+2D,QAAA1M,EAAAqM,EAAAvE,EAAA9vD,MAIAgpC,EAAA+rB,UACA/rB,EAAAwoB,GAAAa,KAAA,WACA,IAAA3gD,EACAnN,EAAA,EACAwwD,EAAA/rB,EAAA+rB,OAIA,IAFAlD,GAAA//C,KAAAD,MAEQtN,EAAAwwD,EAAAlxD,OAAmBU,KAC3BmN,EAAAqjD,EAAAxwD,OAGAwwD,EAAAxwD,KAAAmN,GACAqjD,EAAAlvD,OAAAtB,IAAA,GAIAwwD,EAAAlxD,QACAmlC,EAAAwoB,GAAA5P,OAEAiQ,QAAA50D,GAGA+rC,EAAAwoB,GAAA9/C,MAAA,SAAAA,GACAs3B,EAAA+rB,OAAA1uD,KAAAqL,GACAs3B,EAAAwoB,GAAAhiD,SAGAw5B,EAAAwoB,GAAAY,SAAA,GACAppB,EAAAwoB,GAAAhiD,MAAA,WACAsiD,KAIAA,IAAA,EACAG,OAGAjpB,EAAAwoB,GAAA5P,KAAA,WACAkQ,GAAA,MAGA9oB,EAAAwoB,GAAA+C,QACAgB,KAAA,IACAC,KAAA,IAGA9R,SAAA,KAMA1a,EAAAllC,GAAA2xD,MAAA,SAAAz/B,EAAA50B,GAIA,OAHA40B,EAAAgT,EAAAwoB,IAAAxoB,EAAAwoB,GAAA+C,OAAAv+B,MACA50B,KAAA,KAEAzD,KAAA4+C,MAAAn7C,EAAA,SAAA6zB,EAAAysB,GACA,IAAAgU,EAAAv4D,EAAA+U,WAAA+iB,EAAAe,GACA0rB,EAAAE,KAAA,WACAzkD,EAAA8U,aAAAyjD,OAMA,WACA,IAAA3uC,EAAA3pB,EAAA6X,cAAA,SAEAq/C,EADAl3D,EAAA6X,cAAA,UACA+H,YAAA5f,EAAA6X,cAAA,WAEA8R,EAAA3lB,KAAA,WAIAknC,EAAAqtB,QAAA,KAAA5uC,EAAArS,MAIA4zB,EAAAstB,YAAAtB,EAAA1e,UAIA7uB,EAAA3pB,EAAA6X,cAAA,UACAP,MAAA,IACAqS,EAAA3lB,KAAA,QACAknC,EAAAutB,WAAA,MAAA9uC,EAAArS,MApBA,GAwBA,IAAAohD,GACAvlB,GAAAvH,EAAA6J,KAAAtC,WAEAvH,EAAAllC,GAAAkB,QACAyQ,KAAA,SAAA1K,EAAA2J,GACA,OAAAorC,EAAAniD,KAAAqrC,EAAAvzB,KAAA1K,EAAA2J,EAAA1C,UAAAnO,OAAA,IAGAuqB,WAAA,SAAArjB,GACA,OAAApN,KAAAwG,KAAA,WACA6kC,EAAA5a,WAAAzwB,KAAAoN,QAKAi+B,EAAAhkC,QACAyQ,KAAA,SAAA+zB,EAAAz+B,EAAA2J,GACA,IAAAiQ,EAAA+8B,EACAqU,EAAAvsB,EAAArX,SAGA,OAAA4jC,GAAA,IAAAA,GAAA,IAAAA,EAKA,gBAAAvsB,EAAA/kC,aACAukC,EAAA95B,KAAAs6B,EAAAz+B,EAAA2J,IAKA,IAAAqhD,GAAA/sB,EAAAyQ,SAAAjQ,KACAkY,EAAA1Y,EAAAgtB,UAAAjrD,EAAAzJ,iBACA0nC,EAAA6J,KAAA1iC,MAAAu9B,KAAAzkB,KAAAle,GAAA+qD,QAAA74D,SAGAA,IAAAyX,EACA,OAAAA,OACAs0B,EAAA5a,WAAAob,EAAAz+B,GAIA22C,GAAA,QAAAA,QACAzkD,KAAA0nB,EAAA+8B,EAAAjjB,IAAA+K,EAAA90B,EAAA3J,IACA4Z,GAGA6kB,EAAAtsB,aAAAnS,EAAA2J,EAAA,IACAA,GAGAgtC,GAAA,QAAAA,GAAA,QAAA/8B,EAAA+8B,EAAAviB,IAAAqK,EAAAz+B,IACA4Z,EAMA,OAHAA,EAAAqkB,EAAAz/B,KAAAkM,KAAA+zB,EAAAz+B,SAGA9N,EAAA0nB,IAGAqxC,WACA50D,MACAq9B,IAAA,SAAA+K,EAAA90B,GACA,IAAA4zB,EAAAutB,YAAA,UAAAnhD,GACArT,EAAAmoC,EAAA,UACA,IAAA39B,EAAA29B,EAAA90B,MAKA,OAJA80B,EAAAtsB,aAAA,OAAAxI,GACA7I,IACA29B,EAAA90B,MAAA7I,GAEA6I,MAMA0Z,WAAA,SAAAob,EAAA90B,GACA,IAAA3J,EACAxG,EAAA,EAIA0xD,EAAAvhD,KAAAvE,MAAAgrC,GAEA,GAAA8a,GAAA,IAAAzsB,EAAArX,SACA,KAAApnB,EAAAkrD,EAAA1xD,MACAilC,EAAA5U,gBAAA7pB,MAOA+qD,IACAr3B,IAAA,SAAA+K,EAAA90B,EAAA3J,GAQA,OAPA,IAAA2J,EAGAs0B,EAAA5a,WAAAob,EAAAz+B,GAEAy+B,EAAAtsB,aAAAnS,KAEAA,IAIAi+B,EAAA7kC,KAAA6kC,EAAA6J,KAAA1iC,MAAAu9B,KAAAsU,OAAA7xC,MAAA,iBAAA5L,EAAAwG,GACA,IAAAmrD,EAAA3lB,GAAAxlC,IAAAi+B,EAAAz/B,KAAAkM,KAEA86B,GAAAxlC,GAAA,SAAAy+B,EAAAz+B,EAAAmgC,GACA,IAAAvmB,EAAAkhC,EACAsQ,EAAAprD,EAAAzJ,cAYA,OAVA4pC,IAGA2a,EAAAtV,GAAA4lB,GACA5lB,GAAA4lB,GAAAxxC,EACAA,EAAA,MAAAuxC,EAAA1sB,EAAAz+B,EAAAmgC,GACAirB,EACA,KACA5lB,GAAA4lB,GAAAtQ,GAEAlhC,KAOA,IAAAyxC,GAAA,sCACAC,GAAA,gBAyIA,SAAAC,GAAA5hD,GAEA,OADAA,EAAAvE,MAAAgrC,QACArxC,KAAA,KAIA,SAAAysD,GAAA/sB,GACA,OAAAA,EAAA/kC,cAAA+kC,EAAA/kC,aAAA,aAGA,SAAA+xD,GAAA9hD,GACA,OAAAyjB,MAAA55B,QAAAmW,GACAA,EAEA,iBAAAA,GACAA,EAAAvE,MAAAgrC,OAtJAnS,EAAAllC,GAAAkB,QACAkK,KAAA,SAAAnE,EAAA2J,GACA,OAAAorC,EAAAniD,KAAAqrC,EAAA95B,KAAAnE,EAAA2J,EAAA1C,UAAAnO,OAAA,IAGA4yD,WAAA,SAAA1rD,GACA,OAAApN,KAAAwG,KAAA,kBACAxG,KAAAqrC,EAAA0tB,QAAA3rD,YAKAi+B,EAAAhkC,QACAkK,KAAA,SAAAs6B,EAAAz+B,EAAA2J,GACA,IAAAiQ,EAAA+8B,EACAqU,EAAAvsB,EAAArX,SAGA,OAAA4jC,GAAA,IAAAA,GAAA,IAAAA,EAWA,OAPA,IAAAA,GAAA/sB,EAAAyQ,SAAAjQ,KAGAz+B,EAAAi+B,EAAA0tB,QAAA3rD,MACA22C,EAAA1Y,EAAAkoB,UAAAnmD,SAGA9N,IAAAyX,EACAgtC,GAAA,QAAAA,QACAzkD,KAAA0nB,EAAA+8B,EAAAjjB,IAAA+K,EAAA90B,EAAA3J,IACA4Z,EAGA6kB,EAAAz+B,GAAA2J,EAGAgtC,GAAA,QAAAA,GAAA,QAAA/8B,EAAA+8B,EAAAviB,IAAAqK,EAAAz+B,IACA4Z,EAGA6kB,EAAAz+B,IAGAmmD,WACAzb,UACAtW,IAAA,SAAAqK,GAOA,IAAAtE,EAAA8D,EAAAz/B,KAAAkM,KAAA+zB,EAAA,YAEA,OAAAtE,EACAj3B,SAAAi3B,EAAA,IAIAkxB,GAAAntC,KAAAugB,EAAAnoC,WACAg1D,GAAAptC,KAAAugB,EAAAnoC,WACAmoC,EAAAgM,KAEA,GAGA,KAKAkhB,SACAC,IAAA,UACAz2C,MAAA,eAYAooB,EAAAstB,cACA5sB,EAAAkoB,UAAAtb,UACAzW,IAAA,SAAAqK,GAIA,IAAApnB,EAAAonB,EAAAnkC,WAIA,OAHA+c,KAAA/c,YACA+c,EAAA/c,WAAAwwC,cAEA,MAEApX,IAAA,SAAA+K,GAIA,IAAApnB,EAAAonB,EAAAnkC,WACA+c,IACAA,EAAAyzB,cAEAzzB,EAAA/c,YACA+c,EAAA/c,WAAAwwC,kBAOA7M,EAAA7kC,MACA,WACA,WACA,YACA,cACA,cACA,UACA,UACA,SACA,cACA,mBACA,WACA6kC,EAAA0tB,QAAA/4D,KAAA2D,eAAA3D,OA4BAqrC,EAAAllC,GAAAkB,QACA+C,SAAA,SAAA2M,GACA,IAAA5M,EAAA0hC,EAAAiH,EAAAmmB,EAAAC,EAAA/mD,EAAAgnD,EACAvyD,EAAA,EAEA,GAAAgkC,EAAA7zB,GACA,OAAA/W,KAAAwG,KAAA,SAAA2L,GACAk5B,EAAArrC,MAAAoK,SAAA2M,EAAAvU,KAAAxC,KAAAmS,EAAAymD,GAAA54D,UAMA,IAFAmK,EAAA0uD,GAAA9hD,IAEA7Q,OACA,KAAA2lC,EAAA7rC,KAAA4G,MAIA,GAHAqyD,EAAAL,GAAA/sB,GACAiH,EAAA,IAAAjH,EAAArX,UAAA,IAAAmkC,GAAAM,GAAA,IAEA,CAEA,IADA9mD,EAAA,EACA+mD,EAAA/uD,EAAAgI,MACA2gC,EAAAngC,QAAA,IAAAumD,EAAA,SACApmB,GAAAomB,EAAA,KAMAD,KADAE,EAAAR,GAAA7lB,KAEAjH,EAAAtsB,aAAA,QAAA45C,GAMA,OAAAn5D,MAGAkM,YAAA,SAAA6K,GACA,IAAA5M,EAAA0hC,EAAAiH,EAAAmmB,EAAAC,EAAA/mD,EAAAgnD,EACAvyD,EAAA,EAEA,GAAAgkC,EAAA7zB,GACA,OAAA/W,KAAAwG,KAAA,SAAA2L,GACAk5B,EAAArrC,MAAAkM,YAAA6K,EAAAvU,KAAAxC,KAAAmS,EAAAymD,GAAA54D,UAIA,IAAAqU,UAAAnO,OACA,OAAAlG,KAAA8X,KAAA,YAKA,IAFA3N,EAAA0uD,GAAA9hD,IAEA7Q,OACA,KAAA2lC,EAAA7rC,KAAA4G,MAMA,GALAqyD,EAAAL,GAAA/sB,GAGAiH,EAAA,IAAAjH,EAAArX,UAAA,IAAAmkC,GAAAM,GAAA,IAEA,CAEA,IADA9mD,EAAA,EACA+mD,EAAA/uD,EAAAgI,MAGA,KAAA2gC,EAAAngC,QAAA,IAAAumD,EAAA,SACApmB,IAAAjiC,QAAA,IAAAqoD,EAAA,SAMAD,KADAE,EAAAR,GAAA7lB,KAEAjH,EAAAtsB,aAAA,QAAA45C,GAMA,OAAAn5D,MAGAo5D,YAAA,SAAAriD,EAAAsiD,GACA,IAAA51D,SAAAsT,EACAuiD,EAAA,WAAA71D,GAAA+2B,MAAA55B,QAAAmW,GAEA,wBAAAsiD,GAAAC,EACAD,EAAAr5D,KAAAoK,SAAA2M,GAAA/W,KAAAkM,YAAA6K,GAGA6zB,EAAA7zB,GACA/W,KAAAwG,KAAA,SAAAI,GACAykC,EAAArrC,MAAAo5D,YACAriD,EAAAvU,KAAAxC,KAAA4G,EAAAgyD,GAAA54D,MAAAq5D,GACAA,KAKAr5D,KAAAwG,KAAA,WACA,IAAA2R,EAAAvR,EAAA21C,EAAAgd,EAEA,GAAAD,EAOA,IAJA1yD,EAAA,EACA21C,EAAAlR,EAAArrC,MACAu5D,EAAAV,GAAA9hD,GAEAoB,EAAAohD,EAAA3yD,MAGA21C,EAAAtwC,SAAAkM,GACAokC,EAAArwC,YAAAiM,GAEAokC,EAAAnyC,SAAA+N,aAKI7Y,IAAAyX,GAAA,YAAAtT,KACJ0U,EAAAygD,GAAA54D,QAIAojD,EAAAtiB,IAAA9gC,KAAA,gBAAAmY,GAOAnY,KAAAuf,cACAvf,KAAAuf,aAAA,QACApH,IAAA,IAAApB,EACA,GACAqsC,EAAA5hB,IAAAxhC,KAAA,0BAOAiM,SAAA,SAAA+uB,GACA,IAAA7iB,EAAA0zB,EACAjlC,EAAA,EAGA,IADAuR,EAAA,IAAA6iB,EAAA,IACA6Q,EAAA7rC,KAAA4G,MACA,OAAAilC,EAAArX,WACA,IAAAmkC,GAAAC,GAAA/sB,IAAA,KAAAl5B,QAAAwF,IAAA,EACA,SAIA,YAOA,IAAAqhD,GAAA,MAEAnuB,EAAAllC,GAAAkB,QACA6G,IAAA,SAAA6I,GACA,IAAAgtC,EAAA/8B,EAAA2mC,EACA9hB,EAAA7rC,KAAA,GAEA,OAAAqU,UAAAnO,QA0BAynD,EAAA/iB,EAAA7zB,GAEA/W,KAAAwG,KAAA,SAAAI,GACA,IAAAsH,EAEA,IAAAlO,KAAAw0B,WAWA,OANAtmB,EADAy/C,EACA52C,EAAAvU,KAAAxC,KAAA4G,EAAAykC,EAAArrC,MAAAkO,OAEA6I,GAKA7I,EAAA,GAEI,iBAAAA,EACJA,GAAA,GAEIssB,MAAA55B,QAAAsN,KACJA,EAAAm9B,EAAAt/B,IAAAmC,EAAA,SAAA6I,GACA,aAAAA,EAAA,GAAAA,EAAA,OAIAgtC,EAAA1Y,EAAAouB,SAAAz5D,KAAAyD,OAAA4nC,EAAAouB,SAAAz5D,KAAA0D,SAAAC,iBAGA,QAAAogD,QAAAzkD,IAAAykD,EAAAjjB,IAAA9gC,KAAAkO,EAAA,WACAlO,KAAA+W,MAAA7I,OAzDA29B,GACAkY,EAAA1Y,EAAAouB,SAAA5tB,EAAApoC,OACA4nC,EAAAouB,SAAA5tB,EAAAnoC,SAAAC,iBAGA,QAAAogD,QACAzkD,KAAA0nB,EAAA+8B,EAAAviB,IAAAqK,EAAA,UAEA7kB,EAMA,iBAHAA,EAAA6kB,EAAA90B,OAIAiQ,EAAAnW,QAAA2oD,GAAA,IAIA,MAAAxyC,EAAA,GAAAA,OAGA,KAyCAqkB,EAAAhkC,QACAoyD,UACA3T,QACAtkB,IAAA,SAAAqK,GAEA,IAAA39B,EAAAm9B,EAAAz/B,KAAAkM,KAAA+zB,EAAA,SACA,aAAA39B,EACAA,EAMAyqD,GAAAttB,EAAA7B,KAAAqC,MAGA3d,QACAsT,IAAA,SAAAqK,GACA,IAAA90B,EAAA+uC,EAAAl/C,EACA7G,EAAA8rC,EAAA9rC,QACAoE,EAAA0nC,EAAAqM,cACAza,EAAA,eAAAoO,EAAApoC,KACA+hD,EAAA/nB,EAAA,QACA3Q,EAAA2Q,EAAAt5B,EAAA,EAAApE,EAAAmG,OAUA,IAPAU,EADAzC,EAAA,EACA2oB,EAGA2Q,EAAAt5B,EAAA,EAIWyC,EAAAkmB,EAASlmB,IAKpB,KAJAk/C,EAAA/lD,EAAA6G,IAIAqxC,UAAArxC,IAAAzC,KAGA2hD,EAAAzU,YACAyU,EAAAp+C,WAAA2pC,WACA3tC,EAAAoiD,EAAAp+C,WAAA,cAMA,GAHAqP,EAAAs0B,EAAAya,GAAA53C,MAGAuvB,EACA,OAAA1mB,EAIAyuC,EAAA98C,KAAAqO,GAIA,OAAAyuC,GAGA1kB,IAAA,SAAA+K,EAAA90B,GAMA,IALA,IAAA2iD,EAAA5T,EACA/lD,EAAA8rC,EAAA9rC,QACAylD,EAAAna,EAAAqB,UAAA31B,GACAnQ,EAAA7G,EAAAmG,OAEAU,OACAk/C,EAAA/lD,EAAA6G,IAIAqxC,SACA5M,EAAAv/B,QAAAu/B,EAAAouB,SAAA3T,OAAAtkB,IAAAskB,GAAAN,IAAA,KAEAkU,GAAA,GAUA,OAHAA,IACA7tB,EAAAqM,eAAA,GAEAsN,OAOAna,EAAA7kC,MAAA,+BACA6kC,EAAAouB,SAAAz5D,OACA8gC,IAAA,SAAA+K,EAAA90B,GACA,GAAAyjB,MAAA55B,QAAAmW,GACA,OAAA80B,EAAAmM,QAAA3M,EAAAv/B,QAAAu/B,EAAAQ,GAAA39B,MAAA6I,IAAA,IAIA4zB,EAAAqtB,UACA3sB,EAAAouB,SAAAz5D,MAAAwhC,IAAA,SAAAqK,GACA,cAAAA,EAAA/kC,aAAA,cAAA+kC,EAAA90B,UAWA4zB,EAAAgvB,QAAA,cAAAn6D,EAGA,IAAAo6D,GAAA,kCACAC,GAAA,SAAA/vC,GACAA,EAAAy/B,mBAGAle,EAAAhkC,OAAAgkC,EAAAoc,OAEAvtB,QAAA,SAAAutB,EAAAnnD,EAAAurC,EAAAiuB,GAEA,IAAAlzD,EAAAksC,EAAAnoC,EAAAovD,EAAAC,EAAA9R,EAAA5H,EAAA2Z,EACAC,GAAAruB,GAAApsC,GACAgE,EAAA+mC,EAAAhoC,KAAAilD,EAAA,QAAAA,EAAAhkD,KAAAgkD,EACAM,EAAAvd,EAAAhoC,KAAAilD,EAAA,aAAAA,EAAAc,UAAA7oC,MAAA,QAKA,GAHAozB,EAAAmnB,EAAAtvD,EAAAkhC,KAAApsC,EAGA,IAAAosC,EAAArX,UAAA,IAAAqX,EAAArX,WAKAolC,GAAAtuC,KAAA7nB,EAAA4nC,EAAAoc,MAAAU,aAIA1kD,EAAAkP,QAAA,UAIAlP,GADAskD,EAAAtkD,EAAAic,MAAA,MACAwc,QACA6rB,EAAA16C,QAEA2sD,EAAAv2D,EAAAkP,QAAA,aAAAlP,GAGAgkD,IAAApc,EAAAa,SACAub,EACA,IAAApc,EAAApR,MAAAx2B,EAAA,iBAAAgkD,OAGA0S,UAAAL,EAAA,IACArS,EAAAc,UAAAR,EAAA57C,KAAA,KACAs7C,EAAA6B,WAAA7B,EAAAc,UACA,IAAAv4C,OAAA,UAAA+3C,EAAA57C,KAAA,4BACA,KAGAs7C,EAAAttB,YAAA76B,EACAmoD,EAAArlD,SACAqlD,EAAArlD,OAAAypC,GAIAvrC,EAAA,MAAAA,GACAmnD,GACApc,EAAAqB,UAAApsC,GAAAmnD,IAGAnH,EAAAjV,EAAAoc,MAAAnH,QAAA78C,OACAq2D,IAAAxZ,EAAApmB,UAAA,IAAAomB,EAAApmB,QAAA1lB,MAAAq3B,EAAAvrC,IAAA,CAMA,IAAAw5D,IAAAxZ,EAAA2J,WAAApf,EAAAgB,GAAA,CAMA,IAJAkuB,EAAAzZ,EAAA+H,cAAA5kD,EACAm2D,GAAAtuC,KAAAyuC,EAAAt2D,KACAqvC,IAAAprC,YAEUorC,EAAKA,IAAAprC,WACfwyD,EAAAxxD,KAAAoqC,GACAnoC,EAAAmoC,EAIAnoC,KAAAkhC,EAAA+F,eAAAnyC,IACAy6D,EAAAxxD,KAAAiC,EAAAgpC,aAAAhpC,EAAAyvD,cAAA56D,GAMA,IADAoH,EAAA,GACAksC,EAAAonB,EAAAtzD,QAAA6gD,EAAA0B,wBACA8Q,EAAAnnB,EACA2U,EAAAhkD,KAAAmD,EAAA,EACAmzD,EACAzZ,EAAAgI,UAAA7kD,GAGAykD,GAAA9E,EAAA5hB,IAAAsR,EAAA,eAAiD2U,EAAAhkD,OACjD2/C,EAAA5hB,IAAAsR,EAAA,YAEAoV,EAAA1zC,MAAAs+B,EAAAxyC,IAIA4nD,EAAA8R,GAAAlnB,EAAAknB,KACA9R,EAAA1zC,OAAAquC,EAAA/P,KACA2U,EAAAttB,OAAA+tB,EAAA1zC,MAAAs+B,EAAAxyC,IACA,IAAAmnD,EAAAttB,QACAstB,EAAA7tB,kBA8CA,OA1CA6tB,EAAAhkD,OAGAq2D,GAAArS,EAAA6C,sBAEAhK,EAAAyF,WACA,IAAAzF,EAAAyF,SAAAvxC,MAAA0lD,EAAAn+B,MAAAz7B,KACAuiD,EAAAhX,IAIAmuB,GAAApvB,EAAAiB,EAAApoC,MAAAonC,EAAAgB,MAGAlhC,EAAAkhC,EAAAmuB,MAGAnuB,EAAAmuB,GAAA,MAIA3uB,EAAAoc,MAAAU,UAAA1kD,EAEAgkD,EAAA0B,wBACA8Q,EAAArmB,iBAAAnwC,EAAAo2D,IAGAhuB,EAAApoC,KAEAgkD,EAAA0B,wBACA8Q,EAAAlY,oBAAAt+C,EAAAo2D,IAGAxuB,EAAAoc,MAAAU,eAAA7oD,EAEAqL,IACAkhC,EAAAmuB,GAAArvD,IAMA88C,EAAAttB,SAKAkgC,SAAA,SAAA52D,EAAAooC,EAAA4b,GACA,IAAA39B,EAAAuhB,EAAAhkC,OACA,IAAAgkC,EAAApR,MACAwtB,GAEAhkD,OACAinD,aAAA,IAIArf,EAAAoc,MAAAvtB,QAAApQ,EAAA,KAAA+hB,MAKAR,EAAAllC,GAAAkB,QAEA6yB,QAAA,SAAAz2B,EAAAnD,GACA,OAAAN,KAAAwG,KAAA,WACA6kC,EAAAoc,MAAAvtB,QAAAz2B,EAAAnD,EAAAN,SAGAs6D,eAAA,SAAA72D,EAAAnD,GACA,IAAAurC,EAAA7rC,KAAA,GACA,GAAA6rC,EACA,OAAAR,EAAAoc,MAAAvtB,QAAAz2B,EAAAnD,EAAAurC,GAAA,MAcAlB,EAAAgvB,SACAtuB,EAAA7kC,MAAeihC,MAAA,UAAA/N,KAAA,YAAqC,SAAAqI,EAAAinB,GAGpD,IAAArW,EAAA,SAAA8U,GACApc,EAAAoc,MAAA4S,SAAArR,EAAAvB,EAAArlD,OAAAipC,EAAAoc,MAAAuB,IAAAvB,KAGApc,EAAAoc,MAAAnH,QAAA0I,IACAP,MAAA,WACA,IAAAvd,EAAAlrC,KAAA4xC,eAAA5xC,KACAu6D,EAAAnX,EAAAjB,OAAAjX,EAAA8d,GAEAuR,GACArvB,EAAA0I,iBAAA7R,EAAA4Q,GAAA,GAEAyQ,EAAAjB,OAAAjX,EAAA8d,GAAAuR,GAAA,OAEA3R,SAAA,WACA,IAAA1d,EAAAlrC,KAAA4xC,eAAA5xC,KACAu6D,EAAAnX,EAAAjB,OAAAjX,EAAA8d,GAAA,EAEAuR,EAKAnX,EAAAjB,OAAAjX,EAAA8d,EAAAuR,IAJArvB,EAAA6W,oBAAAhgB,EAAA4Q,GAAA,GACAyQ,EAAA7gD,OAAA2oC,EAAA8d,QASA,IAAA9lB,GAAA1jC,EAAA0jC,SAEAs3B,GAAArmD,KAAAD,MAEAumD,GAAA,KAKApvB,EAAAqvB,SAAA,SAAAp6D,GACA,IAAAs2C,EACA,IAAAt2C,GAAA,iBAAAA,EACA,YAKA,IACAs2C,GAAA,IAAAp3C,EAAAm7D,WAAAC,gBAAAt6D,EAAA,YACE,MAAAwpB,GACF8sB,OAAAt3C,EAMA,OAHAs3C,MAAAnqC,qBAAA,eAAAvG,QACAmlC,EAAAhgC,MAAA,gBAAA/K,GAEAs2C,GAIA,IACAtwB,GAAA,QACAu0C,GAAA,SACAC,GAAA,wCACAC,GAAA,qCAEA,SAAAC,GAAAhyB,EAAAxc,EAAAjsB,EAAAO,GACA,IAAAsM,EAEA,GAAAotB,MAAA55B,QAAA4rB,GAGA6e,EAAA7kC,KAAAgmB,EAAA,SAAA5lB,EAAA82C,GACAn9C,GAAA+lB,GAAAgF,KAAA0d,GAGAloC,EAAAkoC,EAAA0U,GAKAsd,GACAhyB,EAAA,sBAAA0U,GAAA,MAAAA,EAAA92C,EAAA,QACA82C,EACAn9C,EACAO,UAKE,GAAAP,GAAA,WAAA6qC,EAAA5e,GAUF1rB,EAAAkoC,EAAAxc,QAPA,IAAApf,KAAAof,EACAwuC,GAAAhyB,EAAA,IAAA57B,EAAA,IAAAof,EAAApf,GAAA7M,EAAAO,GAYAuqC,EAAArjB,MAAA,SAAA7a,EAAA5M,GACA,IAAAyoC,EACAzhC,KACAzG,EAAA,SAAA4R,EAAAuoD,GAGA,IAAAlkD,EAAA6zB,EAAAqwB,GACAA,IACAA,EAEA1zD,IAAArB,QAAAg1D,mBAAAxoD,GAAA,IACAwoD,mBAAA,MAAAnkD,EAAA,GAAAA,IAIA,GAAAyjB,MAAA55B,QAAAuM,MAAAq+B,SAAAH,EAAAxqC,cAAAsM,GAGAk+B,EAAA7kC,KAAA2G,EAAA,WACArM,EAAAd,KAAAoN,KAAApN,KAAA+W,cAOA,IAAAiyB,KAAA77B,EACA6tD,GAAAhyB,EAAA77B,EAAA67B,GAAAzoC,EAAAO,GAKA,OAAAyG,EAAA4E,KAAA,MAGAk/B,EAAAllC,GAAAkB,QACA8zD,UAAA,WACA,OAAA9vB,EAAArjB,MAAAhoB,KAAAo7D,mBAEAA,eAAA,WACA,OAAAp7D,KAAA+L,IAAA,WAGA,IAAAopC,EAAA9J,EAAA95B,KAAAvR,KAAA,YACA,OAAAm1C,EAAA9J,EAAAqB,UAAAyI,GAAAn1C,OAEAsN,OAAA,WACA,IAAA7J,EAAAzD,KAAAyD,KAGA,OAAAzD,KAAAoN,OAAAi+B,EAAArrC,MAAAyhC,GAAA,cACAs5B,GAAAzvC,KAAAtrB,KAAA0D,YAAAo3D,GAAAxvC,KAAA7nB,KACAzD,KAAAg4C,UAAA0N,GAAAp6B,KAAA7nB,MAEAsI,IAAA,SAAAnF,EAAAilC,GACA,IAAA39B,EAAAm9B,EAAArrC,MAAAkO,MAEA,aAAAA,EACA,KAGAssB,MAAA55B,QAAAsN,GACAm9B,EAAAt/B,IAAAmC,EAAA,SAAAA,GACA,OAAad,KAAAy+B,EAAAz+B,KAAA2J,MAAA7I,EAAA2C,QAAAgqD,GAAA,YAIFztD,KAAAy+B,EAAAz+B,KAAA2J,MAAA7I,EAAA2C,QAAAgqD,GAAA,WACRr5B,SAKH,IACA65B,GAAA,OACAC,GAAA,OACAC,GAAA,gBACAC,GAAA,6BAIAC,GAAA,iBACAC,GAAA,QAWAtG,MAOAuG,MAGAC,GAAA,KAAAh8C,OAAA,KAGAi8C,GAAAp8D,EAAA6X,cAAA,KAIA,SAAAwkD,GAAAC,GAGA,gBAAAC,EAAA3c,GAEA,iBAAA2c,IACA3c,EAAA2c,EACAA,EAAA,KAGA,IAAAhxD,EACApE,EAAA,EACAq1D,EAAAD,EAAAr4D,cAAA6O,MAAAgrC,OAEA,GAAA5S,EAAAyU,GAGA,KAAAr0C,EAAAixD,EAAAr1D,MAGA,MAAAoE,EAAA,IACAA,IAAAqB,MAAA,SACA0vD,EAAA/wD,GAAA+wD,EAAA/wD,QAAAqxB,QAAAgjB,KAIA0c,EAAA/wD,GAAA+wD,EAAA/wD,QAAAtC,KAAA22C,IAQA,SAAA6c,GAAAH,EAAAh8D,EAAA21D,EAAAjvC,GAEA,IAAA01C,KACAC,EAAAL,IAAAJ,GAEA,SAAAU,EAAArxD,GACA,IAAAitC,EAcA,OAbAkkB,EAAAnxD,IAAA,EACAqgC,EAAA7kC,KAAAu1D,EAAA/wD,OAAA,SAAA5K,EAAAk8D,GACA,IAAAC,EAAAD,EAAAv8D,EAAA21D,EAAAjvC,GACA,uBAAA81C,GACAH,GAAAD,EAAAI,GAKIH,IACJnkB,EAAAskB,QADI,GAHJx8D,EAAAk8D,UAAA5/B,QAAAkgC,GACAF,EAAAE,IACA,KAKAtkB,EAGA,OAAAokB,EAAAt8D,EAAAk8D,UAAA,MAAAE,EAAA,MAAAE,EAAA,KAMA,SAAAG,GAAAp6D,EAAAmB,GACA,IAAAmP,EAAAu5B,EACAwwB,EAAApxB,EAAAqxB,aAAAD,gBAEA,IAAA/pD,KAAAnP,OACAjE,IAAAiE,EAAAmP,MACA+pD,EAAA/pD,GAAAtQ,EAAA6pC,WAAwDv5B,GAAAnP,EAAAmP,IAOxD,OAJAu5B,GACAZ,EAAAhkC,QAAA,EAAAjF,EAAA6pC,GAGA7pC,EA/EAy5D,GAAAhkB,KAAA3U,GAAA2U,KAgPAxM,EAAAhkC,QAGAs1D,OAAA,EAGAC,gBACAC,QAEAH,cACAzxD,IAAAi4B,GAAA2U,KACAp0C,KAAA,MACAq5D,QAvRA,4DAuRAxxC,KAAA4X,GAAA65B,UACA/yB,QAAA,EACAgzB,aAAA,EACAC,OAAA,EACAC,YAAA,mDAcAC,SACApH,IAAA6F,GACApyB,KAAA,aACAr4B,KAAA,YACAylC,IAAA,4BACAzrC,KAAA,qCAGAoT,UACAq4B,IAAA,UACAzlC,KAAA,SACAhG,KAAA,YAGAiyD,gBACAxmB,IAAA,cACApN,KAAA,eACAr+B,KAAA,gBAKAkyD,YAGAC,SAAA3sB,OAGA4sB,aAAA,EAGAC,YAAA36B,KAAAC,MAGA26B,WAAApyB,EAAAqvB,UAOA+B,aACAxxD,KAAA,EACAyvB,SAAA,IAOAgjC,UAAA,SAAAt7D,EAAAb,GACA,OAAAA,EAGAi7D,MAAAp6D,EAAAipC,EAAAqxB,cAAAn7D,GAGAi7D,GAAAnxB,EAAAqxB,aAAAt6D,IAGAu7D,cAAA7B,GAAA1G,IACAwI,cAAA9B,GAAAH,IAGA5wD,KAAA,SAAAE,EAAAlL,GAGA,iBAAAkL,IACAlL,EAAAkL,EACAA,OAAA3L,GAIAS,QAEA,IAAA89D,EAGAC,EAGAC,EACAC,EAGAC,EAGAC,EAGApc,EAGAqc,EAGAv3D,EAGAw3D,EAGA72D,EAAA8jC,EAAAqyB,aAA2B39D,GAG3Bs+D,EAAA92D,EAAAmzB,SAAAnzB,EAGA+2D,EAAA/2D,EAAAmzB,UACA2jC,EAAA7pC,UAAA6pC,EAAA7yB,QACAH,EAAAgzB,GACAhzB,EAAAoc,MAGAjI,EAAAnU,EAAA+T,WACAmf,EAAAlzB,EAAA+S,UAAA,eAGAogB,EAAAj3D,EAAAi3D,eAGAC,KACAC,KAGAC,EAAA,WAGAl4C,GACAQ,WAAA,EAGA23C,kBAAA,SAAAlsD,GACA,IAAAF,EACA,GAAAsvC,EAAA,CACA,IAAAkc,EAEA,IADAA,KACAxrD,EAAAgpD,GAAA3pB,KAAAksB,IACAC,EAAAxrD,EAAA,GAAA7O,eAAA6O,EAAA,GAGAA,EAAAwrD,EAAAtrD,EAAA/O,eAEA,aAAA6O,EAAA,KAAAA,GAIAqsD,sBAAA,WACA,OAAA/c,EAAAic,EAAA,MAIAe,iBAAA,SAAA1xD,EAAA2J,GAMA,OALA,MAAA+qC,IACA10C,EAAAsxD,EAAAtxD,EAAAzJ,eACA+6D,EAAAtxD,EAAAzJ,gBAAAyJ,EACAqxD,EAAArxD,GAAA2J,GAEA/W,MAIA++D,iBAAA,SAAAt7D,GAIA,OAHA,MAAAq+C,IACAv6C,EAAAy3D,SAAAv7D,GAEAzD,MAIAw+D,WAAA,SAAAzyD,GACA,IAAAk/B,EACA,GAAAl/B,EACA,GAAA+1C,EAGAr7B,EAAA84B,OAAAxzC,EAAA0a,EAAAw4C,cAIA,IAAAh0B,KAAAl/B,EACAyyD,EAAAvzB,IAAAuzB,EAAAvzB,GAAAl/B,EAAAk/B,IAIA,OAAAjrC,MAIA09B,MAAA,SAAAwhC,GACA,IAAAC,EAAAD,GAAAP,EAKA,OAJAd,GACAA,EAAAngC,MAAAyhC,GAEA9wB,EAAA,EAAA8wB,GACAn/D,OAoBA,GAfAw/C,EAAAvB,QAAAx3B,GAKAlf,EAAA0D,SAAA1D,EAAA0D,KAAAi4B,GAAA2U,MAAA,IACAhnC,QAAA6qD,GAAAx4B,GAAA65B,SAAA,MAGAx1D,EAAA9D,KAAA1D,EAAA+8B,QAAA/8B,EAAA0D,MAAA8D,EAAAu1B,QAAAv1B,EAAA9D,KAGA8D,EAAA00D,WAAA10D,EAAAyD,UAAA,KAAArH,cAAA6O,MAAAgrC,KAAA,IAGA,MAAAj2C,EAAA63D,YAAA,CACAlB,EAAAz+D,EAAA6X,cAAA,KAKA,IACA4mD,EAAArmB,KAAAtwC,EAAA0D,IAIAizD,EAAArmB,KAAAqmB,EAAArmB,KACAtwC,EAAA63D,YAAAvD,GAAAkB,SAAA,KAAAlB,GAAAxhC,MACA6jC,EAAAnB,SAAA,KAAAmB,EAAA7jC,KACI,MAAAvQ,GAIJviB,EAAA63D,aAAA,GAaA,GARA73D,EAAAjH,MAAAiH,EAAAy1D,aAAA,iBAAAz1D,EAAAjH,OACAiH,EAAAjH,KAAA+qC,EAAArjB,MAAAzgB,EAAAjH,KAAAiH,EAAAhH,cAIA27D,GAAA9G,GAAA7tD,EAAAxH,EAAA0mB,GAGAq7B,EACA,OAAAr7B,EA6EA,IAAA7f,KAxEAu3D,EAAA9yB,EAAAoc,OAAAlgD,EAAAyiC,SAGA,GAAAqB,EAAAsxB,UACAtxB,EAAAoc,MAAAvtB,QAAA,aAIA3yB,EAAA9D,KAAA8D,EAAA9D,KAAAS,cAGAqD,EAAA83D,YAAA5D,GAAAnwC,KAAA/jB,EAAA9D,MAKAq6D,EAAAv2D,EAAA0D,IAAA4F,QAAAyqD,GAAA,IAGA/zD,EAAA83D,WAuBG93D,EAAAjH,MAAAiH,EAAAy1D,aACH,KAAAz1D,EAAA21D,aAAA,IAAAvqD,QAAA,uCACApL,EAAAjH,KAAAiH,EAAAjH,KAAAuQ,QAAAwqD,GAAA,OAtBA+C,EAAA72D,EAAA0D,IAAAoB,MAAAyxD,EAAA53D,QAGAqB,EAAAjH,OAAAiH,EAAAy1D,aAAA,iBAAAz1D,EAAAjH,QACAw9D,IAAArD,GAAAnvC,KAAAwyC,GAAA,SAAAv2D,EAAAjH,YAGAiH,EAAAjH,OAIA,IAAAiH,EAAAuT,QACAgjD,IAAAjtD,QAAA0qD,GAAA,MACA6C,GAAA3D,GAAAnvC,KAAAwyC,GAAA,cAAAtD,KAAA4D,GAIA72D,EAAA0D,IAAA6yD,EAAAM,GASA72D,EAAA+3D,aACAj0B,EAAAuxB,aAAAkB,IACAr3C,EAAAq4C,iBAAA,oBAAAzzB,EAAAuxB,aAAAkB,IAEAzyB,EAAAwxB,KAAAiB,IACAr3C,EAAAq4C,iBAAA,gBAAAzzB,EAAAwxB,KAAAiB,MAKAv2D,EAAAjH,MAAAiH,EAAA83D,aAAA,IAAA93D,EAAA21D,aAAAn9D,EAAAm9D,cACAz2C,EAAAq4C,iBAAA,eAAAv3D,EAAA21D,aAIAz2C,EAAAq4C,iBACA,SACAv3D,EAAA00D,UAAA,IAAA10D,EAAA41D,QAAA51D,EAAA00D,UAAA,IACA10D,EAAA41D,QAAA51D,EAAA00D,UAAA,KACA,MAAA10D,EAAA00D,UAAA,QAAAL,GAAA,WAAsD,IACtDr0D,EAAA41D,QAAA,MAIA51D,EAAAg4D,QACA94C,EAAAq4C,iBAAAl4D,EAAAW,EAAAg4D,QAAA34D,IAIA,GAAAW,EAAAi4D,cACA,IAAAj4D,EAAAi4D,WAAAh9D,KAAA67D,EAAA53C,EAAAlf,IAAAu6C,GAGA,OAAAr7B,EAAAiX,QAeA,GAXAihC,EAAA,QAGAJ,EAAAz9D,IAAAyG,EAAA3E,UACA6jB,EAAA4nB,KAAA9mC,EAAA2D,SACAub,EAAAy3B,KAAA32C,EAAA8D,OAGAwyD,EAAA3B,GAAAP,GAAAp0D,EAAAxH,EAAA0mB,GAKG,CASH,GARAA,EAAAQ,WAAA,EAGAk3C,GACAG,EAAApkC,QAAA,YAAAzT,EAAAlf,IAIAu6C,EACA,OAAAr7B,EAIAlf,EAAA01D,OAAA11D,EAAAwwD,QAAA,IACAkG,EAAAz+D,EAAA+U,WAAA,WACAkS,EAAAiX,MAAA,YACKn2B,EAAAwwD,UAGL,IACAjW,GAAA,EACA+b,EAAA4B,KAAAhB,EAAApwB,GACI,MAAAvkB,GAGJ,GAAAg4B,EACA,MAAAh4B,EAIAukB,GAAA,EAAAvkB,SAhCAukB,GAAA,kBAqCA,SAAAA,EAAA4wB,EAAAS,EAAAC,EAAAJ,GACA,IAAAK,EAAA10D,EAAAG,EAAAw0D,EAAAC,EACAZ,EAAAQ,EAGA5d,IAIAA,GAAA,EAGAmc,GACAz+D,EAAA8U,aAAA2pD,GAKAJ,OAAAv+D,EAGAy+D,EAAAwB,GAAA,GAGA94C,EAAAQ,WAAAg4C,EAAA,MAGAW,EAAAX,GAAA,KAAAA,EAAA,WAAAA,EAGAU,IACAE,EA1lBA,SAAAt4D,EAAAkf,EAAAk5C,GAOA,IALA,IAAAI,EAAAt8D,EAAAu8D,EAAAC,EACA1hD,EAAAhX,EAAAgX,SACA09C,EAAA10D,EAAA00D,UAGA,MAAAA,EAAA,IACAA,EAAA//B,aACA58B,IAAAygE,IACAA,EAAAx4D,EAAAy3D,UAAAv4C,EAAAm4C,kBAAA,iBAKA,GAAAmB,EACA,IAAAt8D,KAAA8a,EACA,GAAAA,EAAA9a,IAAA8a,EAAA9a,GAAA6nB,KAAAy0C,GAAA,CACA9D,EAAA5/B,QAAA54B,GACA,MAMA,GAAAw4D,EAAA,KAAA0D,EACAK,EAAA/D,EAAA,OACE,CAGF,IAAAx4D,KAAAk8D,EAAA,CACA,IAAA1D,EAAA,IAAA10D,EAAA81D,WAAA55D,EAAA,IAAAw4D,EAAA,KACA+D,EAAAv8D,EACA,MAEAw8D,IACAA,EAAAx8D,GAKAu8D,KAAAC,EAMA,GAAAD,EAIA,OAHAA,IAAA/D,EAAA,IACAA,EAAA5/B,QAAA2jC,GAEAL,EAAAK,GAuiBAE,CAAA34D,EAAAkf,EAAAk5C,IAIAE,EApiBA,SAAAt4D,EAAAs4D,EAAAp5C,EAAAm5C,GACA,IAAAO,EAAAC,EAAAC,EAAA11D,EAAAkyC,EACAwgB,KAGApB,EAAA10D,EAAA00D,UAAA5vD,QAGA,GAAA4vD,EAAA,GACA,IAAAoE,KAAA94D,EAAA81D,WACAA,EAAAgD,EAAA18D,eAAA4D,EAAA81D,WAAAgD,GAOA,IAHAD,EAAAnE,EAAA//B,QAGAkkC,GAcA,GAZA74D,EAAA61D,eAAAgD,KACA35C,EAAAlf,EAAA61D,eAAAgD,IAAAP,IAIAhjB,GAAA+iB,GAAAr4D,EAAA+4D,aACAT,EAAAt4D,EAAA+4D,WAAAT,EAAAt4D,EAAAyD,WAGA6xC,EAAAujB,EACAA,EAAAnE,EAAA//B,QAKA,SAAAkkC,EAEAA,EAAAvjB,OAGI,SAAAA,OAAAujB,EAAA,CAMJ,KAHAC,EAAAhD,EAAAxgB,EAAA,IAAAujB,IAAA/C,EAAA,KAAA+C,IAIA,IAAAD,KAAA9C,EAIA,IADA1yD,EAAAw1D,EAAAzgD,MAAA,MACA,KAAA0gD,IAGAC,EAAAhD,EAAAxgB,EAAA,IAAAlyC,EAAA,KACA0yD,EAAA,KAAA1yD,EAAA,KACA,EAGA,IAAA01D,EACAA,EAAAhD,EAAA8C,IAGS,IAAA9C,EAAA8C,KACTC,EAAAz1D,EAAA,GACAsxD,EAAA5/B,QAAA1xB,EAAA,KAEA,MAOA,QAAA01D,EAGA,GAAAA,GAAA94D,EAAAg5D,OACAV,EAAAQ,EAAAR,QAEA,IACAA,EAAAQ,EAAAR,GACO,MAAA/1C,GACP,OACAsO,MAAA,cACA/sB,MAAAg1D,EAAAv2C,EAAA,sBAAA+yB,EAAA,OAAAujB,IASA,OAAShoC,MAAA,UAAA93B,KAAAu/D,GAucTW,CAAAj5D,EAAAs4D,EAAAp5C,EAAAm5C,GAGAA,GAGAr4D,EAAA+3D,cACAQ,EAAAr5C,EAAAm4C,kBAAA,oBAEAvzB,EAAAuxB,aAAAkB,GAAAgC,IAEAA,EAAAr5C,EAAAm4C,kBAAA,WAEAvzB,EAAAwxB,KAAAiB,GAAAgC,IAKA,MAAAb,GAAA,SAAA13D,EAAA9D,KACAy7D,EAAA,YAGK,MAAAD,EACLC,EAAA,eAIAA,EAAAW,EAAAznC,MACAltB,EAAA20D,EAAAv/D,KAEAs/D,IADAv0D,EAAAw0D,EAAAx0D,UAMAA,EAAA6zD,GACAD,GAAAC,IACAA,EAAA,QACAD,EAAA,IACAA,EAAA,KAMAx4C,EAAAw4C,SACAx4C,EAAAy4C,YAAAQ,GAAAR,GAAA,GAGAU,EACApgB,EAAAkB,YAAA2d,GAAAnzD,EAAAg0D,EAAAz4C,IAEA+4B,EAAAsB,WAAAud,GAAA53C,EAAAy4C,EAAA7zD,IAIAob,EAAA+3C,cACAA,OAAAl/D,EAEA6+D,GACAG,EAAApkC,QAAA0lC,EAAA,2BACAn5C,EAAAlf,EAAAq4D,EAAA10D,EAAAG,IAIAkzD,EAAApf,SAAAkf,GAAA53C,EAAAy4C,IAEAf,IACAG,EAAApkC,QAAA,gBAAAzT,EAAAlf,MAGA8jC,EAAAsxB,QACAtxB,EAAAoc,MAAAvtB,QAAA,cAKA,OAAAzT,GAGAg6C,QAAA,SAAAx1D,EAAA3K,EAAA+B,GACA,OAAAgpC,EAAA7J,IAAAv2B,EAAA3K,EAAA+B,EAAA,SAGAq+D,UAAA,SAAAz1D,EAAA5I,GACA,OAAAgpC,EAAA7J,IAAAv2B,OAAA3L,EAAA+C,EAAA,aAIAgpC,EAAA7kC,MAAA,uBAAAI,EAAAk2B,GACAuO,EAAAvO,GAAA,SAAA7xB,EAAA3K,EAAA+B,EAAAoB,GAUA,OAPAmnC,EAAAtqC,KACAmD,KAAApB,EACAA,EAAA/B,EACAA,OAAAhB,GAIA+rC,EAAAtgC,KAAAsgC,EAAAhkC,QACA4D,MACAxH,KAAAq5B,EACA9xB,SAAAvH,EACAnD,OACA4K,QAAA7I,GACGgpC,EAAAxqC,cAAAoK,WAKHogC,EAAAuiB,SAAA,SAAA3iD,GACA,OAAAogC,EAAAtgC,MACAE,MAGAxH,KAAA,MACAuH,SAAA,SACA8P,OAAA,EACAmiD,OAAA,EACAjzB,QAAA,EACAu2B,QAAA,KAKAl1B,EAAAllC,GAAAkB,QACAs5D,QAAA,SAAAxvD,GACA,IAAAu1C,EAyBA,OAvBA1mD,KAAA,KACA4qC,EAAAz5B,KACAA,IAAA3O,KAAAxC,KAAA,KAIA0mD,EAAArb,EAAAl6B,EAAAnR,KAAA,GAAA4xC,eAAA/lC,GAAA,GAAA6nB,OAAA,GAEA1zB,KAAA,GAAA0H,YACAg/C,EAAAljC,aAAAxjB,KAAA,IAGA0mD,EAAA36C,IAAA,WAGA,IAFA,IAAA8/B,EAAA7rC,KAEA6rC,EAAA+0B,mBACA/0B,IAAA+0B,kBAGA,OAAA/0B,IACI/1B,OAAA9V,OAGJA,MAGA6gE,UAAA,SAAA1vD,GACA,OAAAy5B,EAAAz5B,GACAnR,KAAAwG,KAAA,SAAAI,GACAykC,EAAArrC,MAAA6gE,UAAA1vD,EAAA3O,KAAAxC,KAAA4G,MAIA5G,KAAAwG,KAAA,WACA,IAAA+1C,EAAAlR,EAAArrC,MACAue,EAAAg+B,EAAAh+B,WAEAA,EAAArY,OACAqY,EAAAoiD,QAAAxvD,GAGAorC,EAAAzmC,OAAA3E,MAKAu1C,KAAA,SAAAv1C,GACA,IAAA2vD,EAAAl2B,EAAAz5B,GAEA,OAAAnR,KAAAwG,KAAA,SAAAI,GACAykC,EAAArrC,MAAA2gE,QAAAG,EAAA3vD,EAAA3O,KAAAxC,KAAA4G,GAAAuK,MAIA4vD,OAAA,SAAA/lC,GAIA,OAHAh7B,KAAAykB,OAAAuW,GAAAsc,IAAA,QAAA9wC,KAAA,WACA6kC,EAAArrC,MAAAylB,YAAAzlB,KAAA+d,cAEA/d,QAKAqrC,EAAA6J,KAAAjG,QAAAslB,OAAA,SAAA1oB,GACA,OAAAR,EAAA6J,KAAAjG,QAAAhqC,QAAA4mC,IAEAR,EAAA6J,KAAAjG,QAAAhqC,QAAA,SAAA4mC,GACA,SAAAA,EAAA31B,aAAA21B,EAAA/X,cAAA+X,EAAAqnB,iBAAAhtD,SAMAmlC,EAAAqxB,aAAA51C,IAAA,WACA,IACA,WAAAtnB,EAAAwhE,eACE,MAAAl3C,MAGF,IAAAm3C,IAGAC,EAAA,IAIAC,KAAA,KAEAC,GAAA/1B,EAAAqxB,aAAA51C,MAEA6jB,EAAA02B,OAAAD,IAAA,oBAAAA,GACAz2B,EAAA5/B,KAAAq2D,QAEA/1B,EAAAuyB,cAAA,SAAA79D,GACA,IAAAsC,EAAAi/D,EAGA,GAAA32B,EAAA02B,MAAAD,KAAArhE,EAAAq/D,YACA,OACAK,KAAA,SAAAF,EAAA38D,GACA,IAAAgE,EACAkgB,EAAA/mB,EAAA+mB,MAWA,GATAA,EAAAy6C,KACAxhE,EAAA0D,KACA1D,EAAAkL,IACAlL,EAAAk9D,MACAl9D,EAAAyhE,SACAzhE,EAAA24C,UAIA34C,EAAA0hE,UACA,IAAA76D,KAAA7G,EAAA0hE,UACA36C,EAAAlgB,GAAA7G,EAAA0hE,UAAA76D,GAmBA,IAAAA,KAdA7G,EAAAi/D,UAAAl4C,EAAAi4C,kBACAj4C,EAAAi4C,iBAAAh/D,EAAAi/D,UAQAj/D,EAAAq/D,aAAAG,EAAA,sBACAA,EAAA,sCAIAA,EACAz4C,EAAAg4C,iBAAAl4D,EAAA24D,EAAA34D,IAIAvE,EAAA,SAAAoB,GACA,kBACApB,IACAA,EAAAi/D,EAAAx6C,EAAA46C,OACA56C,EAAA66C,QAAA76C,EAAA86C,QAAA96C,EAAA+6C,UACA/6C,EAAAg7C,mBAAA,KAEA,UAAAr+D,EACAqjB,EAAA4W,QACQ,UAAAj6B,EAKR,iBAAAqjB,EAAAm4C,OACAr8D,EAAA,WAEAA,EAGAkkB,EAAAm4C,OACAn4C,EAAAo4C,YAIAt8D,EACAq+D,GAAAn6C,EAAAm4C,SAAAn4C,EAAAm4C,OACAn4C,EAAAo4C,WAKA,UAAAp4C,EAAAi7C,cAAA,SACA,iBAAAj7C,EAAAk7C,cACWC,OAAAn7C,EAAA+4C,WACAr2B,KAAA1iB,EAAAk7C,cACXl7C,EAAA+3C,4BAQA/3C,EAAA46C,OAAAr/D,IACAi/D,EAAAx6C,EAAA66C,QAAA76C,EAAA+6C,UAAAx/D,EAAA,cAKA/C,IAAAwnB,EAAA86C,QACA96C,EAAA86C,QAAAN,EAEAx6C,EAAAg7C,mBAAA,WAGA,IAAAh7C,EAAAG,YAMAznB,EAAA+U,WAAA,WACAlS,GACAi/D,OAQAj/D,IAAA,SAEA,IAGAykB,EAAA24C,KAAA1/D,EAAAs/D,YAAAt/D,EAAAO,MAAA,MACK,MAAAwpB,GAGL,GAAAznB,EACA,MAAAynB,IAKA4T,MAAA,WACAr7B,GACAA,QAWAgpC,EAAAsyB,cAAA,SAAAp2D,GACAA,EAAA63D,cACA73D,EAAAgX,SAAA4sB,QAAA,KAKAE,EAAAqyB,WACAP,SACAhyB,OAAA,6FAGA5sB,UACA4sB,OAAA,2BAEAkyB,YACA6E,cAAA,SAAA14B,GAEA,OADA6B,EAAAoB,WAAAjD,GACAA,MAMA6B,EAAAsyB,cAAA,kBAAAp2D,QACAjI,IAAAiI,EAAAuT,QACAvT,EAAAuT,OAAA,GAEAvT,EAAA63D,cACA73D,EAAA9D,KAAA,SAKA4nC,EAAAuyB,cAAA,kBAAAr2D,GAIA,IAAA4jC,EAAA9oC,EADA,GAAAkF,EAAA63D,YAEA,OACAK,KAAA,SAAAr/D,EAAAwC,GACAuoC,EAAAE,EAAA,YAAA95B,MACA4wD,QAAA56D,EAAA66D,cACA7+D,IAAAgE,EAAA0D,MACK2e,GACL,aACAvnB,EAAA,SAAAggE,GACAl3B,EAAA5oC,SACAF,EAAA,KACAggE,GACAz/D,EAAA,UAAAy/D,EAAA5+D,KAAA,QAAA4+D,EAAA5+D,QAMAhE,EAAAiiC,KAAAriB,YAAA8rB,EAAA,KAEAzN,MAAA,WACAr7B,GACAA,QAUA,IAAAigE,MACAC,GAAA,oBAGAl3B,EAAAqyB,WACA8E,MAAA,WACAC,cAAA,WACA,IAAApgE,EAAAigE,GAAAvmC,OAAAsP,EAAAa,QAAA,IAAAsuB,KAEA,OADAx6D,KAAAqC,IAAA,EACAA,KAKAgpC,EAAAsyB,cAAA,sBAAAp2D,EAAAm7D,EAAAj8C,GAEA,IAAAk8C,EAAAC,EAAAC,EACAC,GAAA,IAAAv7D,EAAAi7D,QAAAD,GAAAj3C,KAAA/jB,EAAA0D,KACA,MACA,iBAAA1D,EAAAjH,MAEA,KADAiH,EAAA21D,aAAA,IACAvqD,QAAA,sCACA4vD,GAAAj3C,KAAA/jB,EAAAjH,OAAA,QAIA,GAAAwiE,GAAA,UAAAv7D,EAAA00D,UAAA,GA8DA,OA3DA0G,EAAAp7D,EAAAk7D,cAAA73B,EAAArjC,EAAAk7D,eACAl7D,EAAAk7D,gBACAl7D,EAAAk7D,cAGAK,EACAv7D,EAAAu7D,GAAAv7D,EAAAu7D,GAAAjyD,QAAA0xD,GAAA,KAAAI,IACG,IAAAp7D,EAAAi7D,QACHj7D,EAAA0D,MAAAwvD,GAAAnvC,KAAA/jB,EAAA0D,KAAA,SAAA1D,EAAAi7D,MAAA,IAAAG,GAIAp7D,EAAA81D,WAAA,0BAIA,OAHAwF,GACAx3B,EAAAhgC,MAAAs3D,EAAA,mBAEAE,EAAA,IAIAt7D,EAAA00D,UAAA,UAGA2G,EAAApjE,EAAAmjE,GACAnjE,EAAAmjE,GAAA,WACAE,EAAAxuD,WAIAoS,EAAA84B,OAAA,gBAGAjgD,IAAAsjE,EACAv3B,EAAA7rC,GAAAs5D,WAAA6J,GAIAnjE,EAAAmjE,GAAAC,EAIAr7D,EAAAo7D,KAGAp7D,EAAAk7D,cAAAC,EAAAD,cAGAH,GAAA55D,KAAAi6D,IAIAE,GAAAj4B,EAAAg4B,IACAA,EAAAC,EAAA,IAGAA,EAAAD,OAAAtjE,IAIA,WAYAqrC,EAAAo4B,mBAAA,WACA,IAAApgD,EAAAljB,EAAAujE,eAAAD,mBAAA,IAAApgD,KAEA,OADAA,EAAAnL,UAAA,6BACA,IAAAmL,EAAA5E,WAAA7X,OAHA,GAWAmlC,EAAAoR,UAAA,SAAAn8C,EAAAo6B,EAAAuoC,GACA,uBAAA3iE,MAGA,kBAAAo6B,IACAuoC,EAAAvoC,EACAA,GAAA,GAKAA,IAIAiQ,EAAAo4B,qBAMA/pB,GALAte,EAAAj7B,EAAAujE,eAAAD,mBAAA,KAKAzrD,cAAA,SACAugC,KAAAp4C,EAAAyjC,SAAA2U,KACAnd,EAAAgH,KAAAriB,YAAA25B,IAEAte,EAAAj7B,GAIAioC,EAAA0U,EAAAvK,KAAAvxC,GACAimD,GAAA0c,MAGAv7B,GACAhN,EAAApjB,cAAAowB,EAAA,MAGAA,EAAA4e,IAAAhmD,GAAAo6B,EAAA6rB,GAEAA,KAAArgD,QACAmlC,EAAAkb,GAAAhkD,SAGA8oC,EAAAtgB,SAAA2c,EAAA3pB,cAlCA,IAAAi7B,EAAAtR,EAAA6e,GAyCAlb,EAAAllC,GAAA6jD,KAAA,SAAA/+C,EAAAi4D,EAAA7gE,GACA,IAAA24B,EAAAv3B,EAAAo8D,EACAtjB,EAAAv8C,KACAu/B,EAAAt0B,EAAA0H,QAAA,KAsDA,OApDA4sB,GAAA,IACAvE,EAAA29B,GAAA1tD,EAAAoB,MAAAkzB,IACAt0B,IAAAoB,MAAA,EAAAkzB,IAIAqL,EAAAs4B,IAGA7gE,EAAA6gE,EACAA,OAAA5jE,GAGE4jE,GAAA,iBAAAA,IACFz/D,EAAA,QAIA84C,EAAAr2C,OAAA,GACAmlC,EAAAtgC,MACAE,MAKAxH,QAAA,MACAuH,SAAA,OACA1K,KAAA4iE,IACG70B,KAAA,SAAA2zB,GAGHnC,EAAAxrD,UAEAkoC,EAAAprC,KAAA6pB,EAIAqQ,EAAA,SAAAv1B,OAAAu1B,EAAAoR,UAAAulB,IAAAp2D,KAAAovB,GAGAgnC,KAKGziB,OAAAl9C,GAAA,SAAAokB,EAAAw4C,GACH1iB,EAAA/1C,KAAA,WACAnE,EAAAmS,MAAAxU,KAAA6/D,IAAAp5C,EAAAu7C,aAAA/C,EAAAx4C,QAKAzmB,MAOAqrC,EAAA7kC,MACA,YACA,WACA,eACA,YACA,cACA,YACA,SAAAI,EAAAnD,GACA4nC,EAAAllC,GAAA1C,GAAA,SAAA0C,GACA,OAAAnG,KAAA4pB,GAAAnmB,EAAA0C,MAOAklC,EAAA6J,KAAAjG,QAAAk0B,SAAA,SAAAt3B,GACA,OAAAR,EAAAwB,KAAAxB,EAAA+rB,OAAA,SAAAjxD,GACA,OAAA0lC,IAAA1lC,EAAA0lC,OACE3lC,QAMFmlC,EAAA70B,QACA4sD,UAAA,SAAAv3B,EAAA9rC,EAAA6G,GACA,IAAAy8D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACAluD,EAAA61B,EAAA38B,IAAAm9B,EAAA,YACA83B,EAAAt4B,EAAAQ,GACAwe,KAGA,WAAA70C,IACAq2B,EAAAtjC,MAAAiN,SAAA,YAGAiuD,EAAAE,EAAAntD,SACA+sD,EAAAl4B,EAAA38B,IAAAm9B,EAAA,OACA63B,EAAAr4B,EAAA38B,IAAAm9B,EAAA,SACA,aAAAr2B,GAAA,UAAAA,KACA+tD,EAAAG,GAAA/wD,QAAA,YAMA6wD,GADAH,EAAAM,EAAAnuD,YACAC,IACA6tD,EAAAD,EAAA3tD,OAGA8tD,EAAAvyD,WAAAsyD,IAAA,EACAD,EAAAryD,WAAAyyD,IAAA,GAGA94B,EAAA7qC,KAGAA,IAAAyC,KAAAqpC,EAAAjlC,EAAAykC,EAAAhkC,UAAqDo8D,KAGrD,MAAA1jE,EAAA0V,MACA40C,EAAA50C,IAAA1V,EAAA0V,IAAAguD,EAAAhuD,IAAA+tD,GAEA,MAAAzjE,EAAA2V,OACA20C,EAAA30C,KAAA3V,EAAA2V,KAAA+tD,EAAA/tD,KAAA4tD,GAGA,UAAAvjE,EACAA,EAAA6jE,MAAAphE,KAAAqpC,EAAAwe,GAGAsZ,EAAAj1D,IAAA27C,KAKAhf,EAAAllC,GAAAkB,QAGAmP,OAAA,SAAAzW,GAGA,GAAAsU,UAAAnO,OACA,YAAA5G,IAAAS,EACAC,KACAA,KAAAwG,KAAA,SAAAI,GACAykC,EAAA70B,OAAA4sD,UAAApjE,KAAAD,EAAA6G,KAIA,IAAAi9D,EAAAC,EACAj4B,EAAA7rC,KAAA,GAEA,OAAA6rC,EAQAA,EAAAqnB,iBAAAhtD,QAKA29D,EAAAh4B,EAAAn1B,wBACAotD,EAAAj4B,EAAA+F,cAAA+B,aAEAl+B,IAAAouD,EAAApuD,IAAAquD,EAAAC,YACAruD,KAAAmuD,EAAAnuD,KAAAouD,EAAAE,eARWvuD,IAAA,EAAAC,KAAA,QATX,GAuBAF,SAAA,WACA,GAAAxV,KAAA,IAIA,IAAAikE,EAAAztD,EAAA00B,EACAW,EAAA7rC,KAAA,GACAkkE,GAAmBzuD,IAAA,EAAAC,KAAA,GAGnB,aAAA21B,EAAA38B,IAAAm9B,EAAA,YAGAr1B,EAAAq1B,EAAAn1B,4BAEG,CAOH,IANAF,EAAAxW,KAAAwW,SAIA00B,EAAAW,EAAA+F,cACAqyB,EAAAp4B,EAAAo4B,cAAA/4B,EAAAsI,gBACAywB,IACAA,IAAA/4B,EAAAvoB,MAAAshD,IAAA/4B,EAAAsI,kBACA,WAAAnI,EAAA38B,IAAAu1D,EAAA,aAEAA,IAAAv8D,WAEAu8D,OAAAp4B,GAAA,IAAAo4B,EAAAzvC,YAGA0vC,EAAA74B,EAAA44B,GAAAztD,UACAf,KAAA41B,EAAA38B,IAAAu1D,EAAA,qBACAC,EAAAxuD,MAAA21B,EAAA38B,IAAAu1D,EAAA,uBAKA,OACAxuD,IAAAe,EAAAf,IAAAyuD,EAAAzuD,IAAA41B,EAAA38B,IAAAm9B,EAAA,gBACAn2B,KAAAc,EAAAd,KAAAwuD,EAAAxuD,KAAA21B,EAAA38B,IAAAm9B,EAAA,oBAcAo4B,aAAA,WACA,OAAAjkE,KAAA+L,IAAA,WAGA,IAFA,IAAAk4D,EAAAjkE,KAAAikE,aAEAA,GAAA,WAAA54B,EAAA38B,IAAAu1D,EAAA,aACAA,iBAGA,OAAAA,GAAAzwB,QAMAnI,EAAA7kC,MAAcmP,WAAA,cAAAwe,UAAA,eAAsD,SAAA2I,EAAAvrB,GACpE,IAAAkE,EAAA,gBAAAlE,EAEA85B,EAAAllC,GAAA22B,GAAA,SAAA5uB,GACA,OAAAi0C,EAAAniD,KAAA,SAAA6rC,EAAA/O,EAAA5uB,GAGA,IAAA41D,EAOA,GANAj5B,EAAAgB,GACAi4B,EAAAj4B,EACI,IAAAA,EAAArX,WACJsvC,EAAAj4B,EAAA8H,kBAGAr0C,IAAA4O,EACA,OAAA41D,IAAAvyD,GAAAs6B,EAAA/O,GAGAgnC,EACAA,EAAAK,SACA1uD,EAAAquD,EAAAE,YAAA91D,EACAuH,EAAAvH,EAAA41D,EAAAC,aAIAl4B,EAAA/O,GAAA5uB,GAEG4uB,EAAA5uB,EAAAmG,UAAAnO,WAUHmlC,EAAA7kC,MAAA,uBAAAI,EAAA2K,GACA85B,EAAA+mB,SAAA7gD,GAAA89C,GAAA1kB,EAAA2lB,cACA,SAAAzkB,EAAAmjB,GACA,GAAAA,EAIA,OAHAA,EAAAD,GAAAljB,EAAAt6B,GAGAm9C,GAAApjC,KAAA0jC,GACA3jB,EAAAQ,GAAAr2B,WAAAjE,GAAA,KACAy9C,MAQA3jB,EAAA7kC,MAAc49D,OAAA,SAAAC,MAAA,SAAmC,SAAAj3D,EAAA3J,GACjD4nC,EAAA7kC,MAAe0tB,QAAA,QAAA9mB,EAAAmwC,QAAA95C,EAAA6gE,GAAA,QAAAl3D,GACf,SAAAm3D,EAAAC,GAGAn5B,EAAAllC,GAAAq+D,GAAA,SAAArvC,EAAApe,GACA,IAAAqrC,EAAA/tC,UAAAnO,SAAAq+D,GAAA,kBAAApvC,GACA28B,EAAAyS,KAAA,IAAApvC,IAAA,IAAApe,EAAA,mBAEA,OAAAorC,EAAAniD,KAAA,SAAA6rC,EAAApoC,EAAAsT,GACA,IAAAm0B,EAEA,OAAAL,EAAAgB,GAGA,IAAA24B,EAAA7xD,QAAA,SACAk5B,EAAA,QAAAz+B,GACAy+B,EAAApsC,SAAA+zC,gBAAA,SAAApmC,GAIA,IAAAy+B,EAAArX,UACA0W,EAAAW,EAAA2H,gBAIAl9B,KAAAwW,IACA+e,EAAAlpB,KAAA,SAAAvV,GAAA89B,EAAA,SAAA99B,GACAy+B,EAAAlpB,KAAA,SAAAvV,GAAA89B,EAAA,SAAA99B,GACA89B,EAAA,SAAA99B,UAIA9N,IAAAyX,EAGAs0B,EAAA38B,IAAAm9B,EAAApoC,EAAAquD,GAGAzmB,EAAA9iC,MAAAsjC,EAAApoC,EAAAsT,EAAA+6C,IACIruD,EAAA2+C,EAAAjtB,OAAA71B,EAAA8iD,QAMJ/W,EAAA7kC,KAAA,wLAEAkZ,MAAA,KACA,SAAA9Y,EAAAwG,GAGAi+B,EAAAllC,GAAAiH,GAAA,SAAA9M,EAAA6F,GACA,OAAAkO,UAAAnO,OAAA,EACAlG,KAAA4pB,GAAAxc,EAAA,KAAA9M,EAAA6F,GACAnG,KAAAk6B,QAAA9sB,MAIAi+B,EAAAllC,GAAAkB,QACAo9D,MAAA,SAAAC,EAAAC,GACA,OAAA3kE,KAAAosD,WAAAsY,GAAArY,WAAAsY,GAAAD,MAOAr5B,EAAAllC,GAAAkB,QAEAwuD,KAAA,SAAA96C,EAAAza,EAAA6F,GACA,OAAAnG,KAAA4pB,GAAA7O,EAAA,KAAAza,EAAA6F,IAEAy+D,OAAA,SAAA7pD,EAAA5U,GACA,OAAAnG,KAAAu/B,IAAAxkB,EAAA,KAAA5U,IAGA0+D,SAAA,SAAA7pC,EAAAjgB,EAAAza,EAAA6F,GACA,OAAAnG,KAAA4pB,GAAA7O,EAAAigB,EAAA16B,EAAA6F,IAEA2+D,WAAA,SAAA9pC,EAAAjgB,EAAA5U,GAGA,WAAAkO,UAAAnO,OACAlG,KAAAu/B,IAAAvE,EAAA,MACAh7B,KAAAu/B,IAAAxkB,EAAAigB,GAAA,KAAA70B,MAQAklC,EAAA05B,MAAA,SAAA5+D,EAAAu0B,GACA,IAAA/vB,EAAAyJ,EAAA2wD,EAUA,GARA,iBAAArqC,IACA/vB,EAAAxE,EAAAu0B,GACAA,EAAAv0B,EACAA,EAAAwE,GAKAigC,EAAAzkC,GAaA,OARAiO,EAAA/H,EAAA7J,KAAA6R,UAAA,IACA0wD,EAAA,WACA,OAAA5+D,EAAAqO,MAAAkmB,GAAA16B,KAAAoU,EAAAwL,OAAAvT,EAAA7J,KAAA6R,eAIA64B,KAAA/mC,EAAA+mC,KAAA/mC,EAAA+mC,MAAA7B,EAAA6B,OAEA63B,GAGA15B,EAAA25B,UAAA,SAAAC,GACAA,EACA55B,EAAA2W,YAEA3W,EAAAqR,OAAA,IAGArR,EAAAzqC,QAAA45B,MAAA55B,QACAyqC,EAAA65B,UAAAriC,KAAAC,MACAuI,EAAA3nC,WACA2nC,EAAAT,aACAS,EAAAR,WACAQ,EAAAuX,YACAvX,EAAA5nC,KAAA2nC,EAEAC,EAAAn3B,IAAAC,KAAAD,IAEAm3B,EAAA85B,UAAA,SAAA34C,GAKA,IAAA/oB,EAAA4nC,EAAA5nC,KAAA+oB,GACA,kBAAA/oB,GAAA,WAAAA,KAKA8M,MAAAic,EAAAvb,WAAAub,UAsBEltB,KAFFH,EAAA,WACA,OAAAksC,GACE72B,MAAAs1B,SAAAC,EAAAD,QAAA3qC,GAMF,IAGAimE,GAAA5lE,EAAA6rC,OAGAg6B,GAAA7lE,EAAAD,EAwBA,OAtBA8rC,EAAAi6B,WAAA,SAAAr5B,GASA,OARAzsC,EAAAD,IAAA8rC,IACA7rC,EAAAD,EAAA8lE,IAGAp5B,GAAAzsC,EAAA6rC,aACA7rC,EAAA6rC,OAAA+5B,IAGA/5B,GAMAnB,IACA1qC,EAAA6rC,OAAA7rC,EAAAD,EAAA8rC,GAMAA","file":"js/vendors~datatables.js","sourcesContent":["/*! DataTables 1.10.18\n * ©2008-2018 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     DataTables\n * @description Paginate, search and order HTML tables\n * @version     1.10.18\n * @file        jquery.dataTables.js\n * @author      SpryMedia Ltd\n * @contact     www.datatables.net\n * @copyright   Copyright 2008-2018 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/*jslint evil: true, undef: true, browser: true */\n/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/\n\n(function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\t// CommonJS environments without a window global must pass a\n\t\t\t\t// root. This will give an error otherwise\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ ) {\n\t\t\t\t$ = typeof window !== 'undefined' ? // jQuery's factory checks for a global window\n\t\t\t\t\trequire('jquery') :\n\t\t\t\t\trequire('jquery')( root );\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}\n(function( $, window, document, undefined ) {\n\t\"use strict\";\n\n\t/**\n\t * DataTables is a plug-in for the jQuery Javascript library. It is a highly\n\t * flexible tool, based upon the foundations of progressive enhancement,\n\t * which will add advanced interaction controls to any HTML table. For a\n\t * full list of features please refer to\n\t * [DataTables.net](href=\"http://datatables.net).\n\t *\n\t * Note that the `DataTable` object is not a global variable but is aliased\n\t * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may\n\t * be  accessed.\n\t *\n\t *  @class\n\t *  @param {object} [init={}] Configuration object for DataTables. Options\n\t *    are defined by {@link DataTable.defaults}\n\t *  @requires jQuery 1.7+\n\t *\n\t *  @example\n\t *    // Basic initialisation\n\t *    $(document).ready( function {\n\t *      $('#example').dataTable();\n\t *    } );\n\t *\n\t *  @example\n\t *    // Initialisation with configuration options - in this case, disable\n\t *    // pagination and sorting.\n\t *    $(document).ready( function {\n\t *      $('#example').dataTable( {\n\t *        \"paginate\": false,\n\t *        \"sort\": false\n\t *      } );\n\t *    } );\n\t */\n\tvar DataTable = function ( options )\n\t{\n\t\t/**\n\t\t * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n\t\t * return the resulting jQuery object.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n\t\t *    criterion (\"applied\") or all TR elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {object} jQuery object, filtered by the given selector.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Highlight every second row\n\t\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\n\t\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n\t\t *      oTable.fnFilter('');\n\t\t *    } );\n\t\t */\n\t\tthis.$ = function ( sSelector, oOpts )\n\t\t{\n\t\t\treturn this.api(true).$( sSelector, oOpts );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Almost identical to $ in operation, but in this case returns the data for the matched\n\t\t * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n\t\t * rather than any descendants, so the data can be obtained for the row/cell. If matching\n\t\t * rows are found, the data returned is the original data array/object that was used to\n\t\t * create the row (or a generated array if from a DOM source).\n\t\t *\n\t\t * This method is often useful in-combination with $ where both functions are given the\n\t\t * same parameters and the array indexes will match identically.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n\t\t *    criterion (\"applied\") or all elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {array} Data for the matched elements. If any elements, as a result of the\n\t\t *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n\t\t *    entry in the array.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the data from the first row in the table\n\t\t *      var data = oTable._('tr:first');\n\t\t *\n\t\t *      // Do something useful with the data\n\t\t *      alert( \"First cell is: \"+data[0] );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to 'Webkit' and get all data for\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      var data = oTable._('tr', {\"search\": \"applied\"});\n\t\t *\n\t\t *      // Do something with the data\n\t\t *      alert( data.length+\" rows matched the search\" );\n\t\t *    } );\n\t\t */\n\t\tthis._ = function ( sSelector, oOpts )\n\t\t{\n\t\t\treturn this.api(true).rows( sSelector, oOpts ).data();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Create a DataTables Api instance, with the currently selected tables for\n\t\t * the Api's context.\n\t\t * @param {boolean} [traditional=false] Set the API instance's context to be\n\t\t *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n\t\t *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n\t\t *   or if all tables captured in the jQuery object should be used.\n\t\t * @return {DataTables.Api}\n\t\t */\n\t\tthis.api = function ( traditional )\n\t\t{\n\t\t\treturn traditional ?\n\t\t\t\tnew _Api(\n\t\t\t\t\t_fnSettingsFromNode( this[ _ext.iApiIndex ] )\n\t\t\t\t) :\n\t\t\t\tnew _Api( this );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Add a single new row or multiple rows of data to the table. Please note\n\t\t * that this is suitable for client-side processing only - if you are using\n\t\t * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n\t\t * must add it to the data source, i.e. the server-side, through an Ajax call.\n\t\t *  @param {array|object} data The data to be added to the table. This can be:\n\t\t *    <ul>\n\t\t *      <li>1D array of data - add a single row with the data provided</li>\n\t\t *      <li>2D array of arrays - add multiple rows in a single call</li>\n\t\t *      <li>object - data object when using <i>mData</i></li>\n\t\t *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n\t\t *    </ul>\n\t\t *  @param {bool} [redraw=true] redraw the table or not\n\t\t *  @returns {array} An array of integers, representing the list of indexes in\n\t\t *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n\t\t *    the table.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Global var for counter\n\t\t *    var giCount = 2;\n\t\t *\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example').dataTable();\n\t\t *    } );\n\t\t *\n\t\t *    function fnClickAddRow() {\n\t\t *      $('#example').dataTable().fnAddData( [\n\t\t *        giCount+\".1\",\n\t\t *        giCount+\".2\",\n\t\t *        giCount+\".3\",\n\t\t *        giCount+\".4\" ]\n\t\t *      );\n\t\t *\n\t\t *      giCount++;\n\t\t *    }\n\t\t */\n\t\tthis.fnAddData = function( data, redraw )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\t/* Check if we want to add multiple rows or not */\n\t\t\tvar rows = $.isArray(data) && ( $.isArray(data[0]) || $.isPlainObject(data[0]) ) ?\n\t\t\t\tapi.rows.add( data ) :\n\t\t\t\tapi.row.add( data );\n\t\t\n\t\t\tif ( redraw === undefined || redraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\n\t\t\treturn rows.flatten().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * This function will make DataTables recalculate the column sizes, based on the data\n\t\t * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n\t\t * through the sWidth parameter). This can be useful when the width of the table's\n\t\t * parent element changes (for example a window resize).\n\t\t *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable( {\n\t\t *        \"sScrollY\": \"200px\",\n\t\t *        \"bPaginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      $(window).on('resize', function () {\n\t\t *        oTable.fnAdjustColumnSizing();\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnAdjustColumnSizing = function ( bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).columns.adjust();\n\t\t\tvar settings = api.settings()[0];\n\t\t\tvar scroll = settings.oScroll;\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw( false );\n\t\t\t}\n\t\t\telse if ( scroll.sX !== \"\" || scroll.sY !== \"\" ) {\n\t\t\t\t/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n\t\t\t\t_fnScrollDraw( settings );\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Quickly and simply clear a table\n\t\t *  @param {bool} [bRedraw=true] redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n\t\t *      oTable.fnClearTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClearTable = function( bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).clear();\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * The exact opposite of 'opening' a row, this function will close any rows which\n\t\t * are currently 'open'.\n\t\t *  @param {node} nTr the table row to 'close'\n\t\t *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClose = function( nTr )\n\t\t{\n\t\t\tthis.api( true ).row( nTr ).child.hide();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Remove a row for the table\n\t\t *  @param {mixed} target The index of the row from aoData to be deleted, or\n\t\t *    the TR element you want to delete\n\t\t *  @param {function|null} [callBack] Callback function\n\t\t *  @param {bool} [redraw=true] Redraw the table or not\n\t\t *  @returns {array} The row that was deleted\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately remove the first row\n\t\t *      oTable.fnDeleteRow( 0 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnDeleteRow = function( target, callback, redraw )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\tvar rows = api.rows( target );\n\t\t\tvar settings = rows.settings()[0];\n\t\t\tvar data = settings.aoData[ rows[0][0] ];\n\t\t\n\t\t\trows.remove();\n\t\t\n\t\t\tif ( callback ) {\n\t\t\t\tcallback.call( this, settings, data );\n\t\t\t}\n\t\t\n\t\t\tif ( redraw === undefined || redraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\n\t\t\treturn data;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Restore the table to it's original state in the DOM by removing all of DataTables\n\t\t * enhancements, alterations to the DOM structure of the table and event listeners.\n\t\t *  @param {boolean} [remove=false] Completely remove the table from the DOM\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnDestroy();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDestroy = function ( remove )\n\t\t{\n\t\t\tthis.api( true ).destroy( remove );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Redraw the table\n\t\t *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n\t\t *      oTable.fnDraw();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDraw = function( complete )\n\t\t{\n\t\t\t// Note that this isn't an exact match to the old call to _fnDraw - it takes\n\t\t\t// into account the new data, but can hold position.\n\t\t\tthis.api( true ).draw( complete );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Filter the input based on data\n\t\t *  @param {string} sInput String to filter the table on\n\t\t *  @param {int|null} [iColumn] Column to limit filtering to\n\t\t *  @param {bool} [bRegex=false] Treat as regular expression or not\n\t\t *  @param {bool} [bSmart=true] Perform smart filtering or not\n\t\t *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n\t\t *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sometime later - filter...\n\t\t *      oTable.fnFilter( 'test string' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( iColumn === null || iColumn === undefined ) {\n\t\t\t\tapi.search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tapi.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\t}\n\t\t\n\t\t\tapi.draw();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the data for the whole table, an individual row or an individual cell based on the\n\t\t * provided parameters.\n\t\t *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n\t\t *    a TR node then the data source for the whole row will be returned. If given as a\n\t\t *    TD/TH cell node then iCol will be automatically calculated and the data for the\n\t\t *    cell returned. If given as an integer, then this is treated as the aoData internal\n\t\t *    data index for the row (see fnGetPosition) and the data for that row used.\n\t\t *  @param {int} [col] Optional column index that you want the data of.\n\t\t *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n\t\t *    returned. If mRow is defined, just data for that row, and is iCol is\n\t\t *    defined, only data for the designated cell is returned.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Row data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('tr').click( function () {\n\t\t *        var data = oTable.fnGetData( this );\n\t\t *        // ... do something with the array / object of data for the row\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Individual cell data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('td').click( function () {\n\t\t *        var sData = oTable.fnGetData( this );\n\t\t *        alert( 'The cell clicked on had the value of '+sData );\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetData = function( src, col )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( src !== undefined ) {\n\t\t\t\tvar type = src.nodeName ? src.nodeName.toLowerCase() : '';\n\t\t\n\t\t\t\treturn col !== undefined || type == 'td' || type == 'th' ?\n\t\t\t\t\tapi.cell( src, col ).data() :\n\t\t\t\t\tapi.row( src ).data() || null;\n\t\t\t}\n\t\t\n\t\t\treturn api.data().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get an array of the TR nodes that are used in the table's body. Note that you will\n\t\t * typically want to use the '$' API method in preference to this as it is more\n\t\t * flexible.\n\t\t *  @param {int} [iRow] Optional row index for the TR element you want\n\t\t *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n\t\t *    in the table's body, or iRow is defined, just the TR element requested.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the nodes from the table\n\t\t *      var nNodes = oTable.fnGetNodes( );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetNodes = function( iRow )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\treturn iRow !== undefined ?\n\t\t\t\tapi.row( iRow ).node() :\n\t\t\t\tapi.rows().nodes().flatten().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the array indexes of a particular cell from it's DOM element\n\t\t * and column index including hidden columns\n\t\t *  @param {node} node this can either be a TR, TD or TH in the table's body\n\t\t *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n\t\t *    if given as a cell, an array of [row index, column index (visible),\n\t\t *    column index (all)] is given.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example tbody td').click( function () {\n\t\t *        // Get the position of the current data from the node\n\t\t *        var aPos = oTable.fnGetPosition( this );\n\t\t *\n\t\t *        // Get the data array for this row\n\t\t *        var aData = oTable.fnGetData( aPos[0] );\n\t\t *\n\t\t *        // Update the data array and return the value\n\t\t *        aData[ aPos[1] ] = 'clicked';\n\t\t *        this.innerHTML = 'clicked';\n\t\t *      } );\n\t\t *\n\t\t *      // Init DataTables\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetPosition = function( node )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\tvar nodeName = node.nodeName.toUpperCase();\n\t\t\n\t\t\tif ( nodeName == 'TR' ) {\n\t\t\t\treturn api.row( node ).index();\n\t\t\t}\n\t\t\telse if ( nodeName == 'TD' || nodeName == 'TH' ) {\n\t\t\t\tvar cell = api.cell( node ).index();\n\t\t\n\t\t\t\treturn [\n\t\t\t\t\tcell.row,\n\t\t\t\t\tcell.columnVisible,\n\t\t\t\t\tcell.column\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Check to see if a row is 'open' or not.\n\t\t *  @param {node} nTr the table row to check\n\t\t *  @returns {boolean} true if the row is currently open, false otherwise\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnIsOpen = function( nTr )\n\t\t{\n\t\t\treturn this.api( true ).row( nTr ).child.isShown();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * This function will place a new row directly after a row which is currently\n\t\t * on display on the page, with the HTML contents that is passed into the\n\t\t * function. This can be used, for example, to ask for confirmation that a\n\t\t * particular record should be deleted.\n\t\t *  @param {node} nTr The table row to 'open'\n\t\t *  @param {string|node|jQuery} mHtml The HTML to put into the row\n\t\t *  @param {string} sClass Class to give the new TD cell\n\t\t *  @returns {node} The row opened. Note that if the table row passed in as the\n\t\t *    first parameter, is not found in the table, this method will silently\n\t\t *    return.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnOpen = function( nTr, mHtml, sClass )\n\t\t{\n\t\t\treturn this.api( true )\n\t\t\t\t.row( nTr )\n\t\t\t\t.child( mHtml, sClass )\n\t\t\t\t.show()\n\t\t\t\t.child()[0];\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Change the pagination - provides the internal logic for pagination in a simple API\n\t\t * function. With this function you can have a DataTables table go to the next,\n\t\t * previous, first or last pages.\n\t\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n\t\t *    or page number to jump to (integer), note that page 0 is the first page.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnPageChange( 'next' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnPageChange = function ( mAction, bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).page( mAction );\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw(false);\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Show a particular column\n\t\t *  @param {int} iCol The column whose display should be changed\n\t\t *  @param {bool} bShow Show (true) or hide (false) the column\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Hide the second column after initialisation\n\t\t *      oTable.fnSetColumnVis( 1, false );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSetColumnVis = function ( iCol, bShow, bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).column( iCol ).visible( bShow );\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.columns.adjust().draw();\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the settings for a particular table for external manipulation\n\t\t *  @returns {object} DataTables settings object. See\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      var oSettings = oTable.fnSettings();\n\t\t *\n\t\t *      // Show an example parameter from the settings\n\t\t *      alert( oSettings._iDisplayStart );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSettings = function()\n\t\t{\n\t\t\treturn _fnSettingsFromNode( this[_ext.iApiIndex] );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Sort the table by a particular column\n\t\t *  @param {int} iCol the data index to sort on. Note that this will not match the\n\t\t *    'display index' if you have hidden data entries\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort immediately with columns 0 and 1\n\t\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSort = function( aaSort )\n\t\t{\n\t\t\tthis.api( true ).order( aaSort ).draw();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Attach a sort listener to an element for a given column\n\t\t *  @param {node} nNode the element to attach the sort listener to\n\t\t *  @param {int} iColumn the column that a click on this node will sort on\n\t\t *  @param {function} [fnCallback] callback function when sort is run\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort on column 1, when 'sorter' is clicked on\n\t\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSortListener = function( nNode, iColumn, fnCallback )\n\t\t{\n\t\t\tthis.api( true ).order.listener( nNode, iColumn, fnCallback );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Update a table cell or row - this method will accept either a single value to\n\t\t * update the cell with, an array of values with one element for each column or\n\t\t * an object in the same format as the original data source. The function is\n\t\t * self-referencing in order to make the multi column updates easier.\n\t\t *  @param {object|array|string} mData Data to update the cell/row with\n\t\t *  @param {node|int} mRow TR element you want to update or the aoData index\n\t\t *  @param {int} [iColumn] The column to update, give as null or undefined to\n\t\t *    update a whole row.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @param {bool} [bAction=true] Perform pre-draw actions or not\n\t\t *  @returns {int} 0 on success, 1 on error\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n\t\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n\t\t *    } );\n\t\t */\n\t\tthis.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( iColumn === undefined || iColumn === null ) {\n\t\t\t\tapi.row( mRow ).data( mData );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tapi.cell( mRow, iColumn ).data( mData );\n\t\t\t}\n\t\t\n\t\t\tif ( bAction === undefined || bAction ) {\n\t\t\t\tapi.columns.adjust();\n\t\t\t}\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\treturn 0;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\n\t\t * to ensure compatibility.\n\t\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n\t\t *    formats \"X\" and \"X.Y\" are also acceptable.\n\t\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n\t\t *    version, or false if this version of DataTales is not suitable\n\t\t *  @method\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n\t\t *    } );\n\t\t */\n\t\tthis.fnVersionCheck = _ext.fnVersionCheck;\n\t\t\n\n\t\tvar _that = this;\n\t\tvar emptyInit = options === undefined;\n\t\tvar len = this.length;\n\n\t\tif ( emptyInit ) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tthis.oApi = this.internal = _ext.internal;\n\n\t\t// Extend with old style plug-in API methods\n\t\tfor ( var fn in DataTable.ext.internal ) {\n\t\t\tif ( fn ) {\n\t\t\t\tthis[fn] = _fnExternApiFunc(fn);\n\t\t\t}\n\t\t}\n\n\t\tthis.each(function() {\n\t\t\t// For each initialisation we want to give it a clean initialisation\n\t\t\t// object that can be bashed around\n\t\t\tvar o = {};\n\t\t\tvar oInit = len > 1 ? // optimisation for single table case\n\t\t\t\t_fnExtend( o, options, true ) :\n\t\t\t\toptions;\n\n\t\t\t/*global oInit,_that,emptyInit*/\n\t\t\tvar i=0, iLen, j, jLen, k, kLen;\n\t\t\tvar sId = this.getAttribute( 'id' );\n\t\t\tvar bInitHandedOff = false;\n\t\t\tvar defaults = DataTable.defaults;\n\t\t\tvar $this = $(this);\n\t\t\t\n\t\t\t\n\t\t\t/* Sanity check */\n\t\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t\t{\n\t\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t/* Backwards compatibility for the defaults */\n\t\t\t_fnCompatOpts( defaults );\n\t\t\t_fnCompatCols( defaults.column );\n\t\t\t\n\t\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t\t_fnCamelToHungarian( defaults, defaults, true );\n\t\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\n\t\t\t\n\t\t\t/* Setting up the initialisation object */\n\t\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ) );\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t/* Check to see if we are re-initialising a table */\n\t\t\tvar allSettings = DataTable.settings;\n\t\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tvar s = allSettings[i];\n\t\t\t\n\t\t\t\t/* Base check on table node */\n\t\t\t\tif (\n\t\t\t\t\ts.nTable == this ||\n\t\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\n\t\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\n\t\t\t\t) {\n\t\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\t\t\t\n\t\t\t\t\tif ( emptyInit || bRetrieve )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn s.oInstance;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( bDestroy )\n\t\t\t\t\t{\n\t\t\t\t\t\ts.oInstance.fnDestroy();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t\t */\n\t\t\t\tif ( s.sTableId == this.id )\n\t\t\t\t{\n\t\t\t\t\tallSettings.splice( i, 1 );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Ensure the table has an ID - required for accessibility */\n\t\t\tif ( sId === null || sId === \"\" )\n\t\t\t{\n\t\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\n\t\t\t\tthis.id = sId;\n\t\t\t}\n\t\t\t\n\t\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\t\"sInstance\":     sId,\n\t\t\t\t\"sTableId\":      sId\n\t\t\t} );\n\t\t\toSettings.nTable = this;\n\t\t\toSettings.oApi   = _that.internal;\n\t\t\toSettings.oInit  = oInit;\n\t\t\t\n\t\t\tallSettings.push( oSettings );\n\t\t\t\n\t\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\n\t\t\t\n\t\t\t// Backwards compatibility, before we apply all the defaults\n\t\t\t_fnCompatOpts( oInit );\n\t\t\t_fnLanguageCompat( oInit.oLanguage );\n\t\t\t\n\t\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\n\t\t\t{\n\t\t\t\toInit.iDisplayLength = $.isArray( oInit.aLengthMenu[0] ) ?\n\t\t\t\t\toInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n\t\t\t}\n\t\t\t\n\t\t\t// Apply the defaults and init options to make a single init object will all\n\t\t\t// options defined from defaults and instance options.\n\t\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\n\t\t\t\n\t\t\t\n\t\t\t// Map the initialisation options onto the settings object\n\t\t\t_fnMap( oSettings.oFeatures, oInit, [\n\t\t\t\t\"bPaginate\",\n\t\t\t\t\"bLengthChange\",\n\t\t\t\t\"bFilter\",\n\t\t\t\t\"bSort\",\n\t\t\t\t\"bSortMulti\",\n\t\t\t\t\"bInfo\",\n\t\t\t\t\"bProcessing\",\n\t\t\t\t\"bAutoWidth\",\n\t\t\t\t\"bSortClasses\",\n\t\t\t\t\"bServerSide\",\n\t\t\t\t\"bDeferRender\"\n\t\t\t] );\n\t\t\t_fnMap( oSettings, oInit, [\n\t\t\t\t\"asStripeClasses\",\n\t\t\t\t\"ajax\",\n\t\t\t\t\"fnServerData\",\n\t\t\t\t\"fnFormatNumber\",\n\t\t\t\t\"sServerMethod\",\n\t\t\t\t\"aaSorting\",\n\t\t\t\t\"aaSortingFixed\",\n\t\t\t\t\"aLengthMenu\",\n\t\t\t\t\"sPaginationType\",\n\t\t\t\t\"sAjaxSource\",\n\t\t\t\t\"sAjaxDataProp\",\n\t\t\t\t\"iStateDuration\",\n\t\t\t\t\"sDom\",\n\t\t\t\t\"bSortCellsTop\",\n\t\t\t\t\"iTabIndex\",\n\t\t\t\t\"fnStateLoadCallback\",\n\t\t\t\t\"fnStateSaveCallback\",\n\t\t\t\t\"renderer\",\n\t\t\t\t\"searchDelay\",\n\t\t\t\t\"rowId\",\n\t\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\n\t\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\n\t\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\n\t\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oScroll, oInit, [\n\t\t\t\t[ \"sScrollX\", \"sX\" ],\n\t\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\n\t\t\t\t[ \"sScrollY\", \"sY\" ],\n\t\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\t\t\t\n\t\t\t/* Callback functions which are array driven */\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );\n\t\t\t\n\t\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\n\t\t\t\n\t\t\t/* Browser support detection */\n\t\t\t_fnBrowserDetect( oSettings );\n\t\t\t\n\t\t\tvar oClasses = oSettings.oClasses;\n\t\t\t\n\t\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\n\t\t\t$this.addClass( oClasses.sTable );\n\t\t\t\n\t\t\t\n\t\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t\t{\n\t\t\t\t/* Display start point, taking into account the save saving */\n\t\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t\t}\n\t\t\t\n\t\t\tif ( oInit.iDeferLoading !== null )\n\t\t\t{\n\t\t\t\toSettings.bDeferLoading = true;\n\t\t\t\tvar tmp = $.isArray( oInit.iDeferLoading );\n\t\t\t\toSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n\t\t\t\toSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n\t\t\t}\n\t\t\t\n\t\t\t/* Language definitions */\n\t\t\tvar oLanguage = oSettings.oLanguage;\n\t\t\t$.extend( true, oLanguage, oInit.oLanguage );\n\t\t\t\n\t\t\tif ( oLanguage.sUrl )\n\t\t\t{\n\t\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\n\t\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that\n\t\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n\t\t\t\t */\n\t\t\t\t$.ajax( {\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\t\tsuccess: function ( json ) {\n\t\t\t\t\t\t_fnLanguageCompat( json );\n\t\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\n\t\t\t\t\t\t$.extend( true, oLanguage, json );\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t},\n\t\t\t\t\terror: function () {\n\t\t\t\t\t\t// Error occurred loading language file, continue on as best we can\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tbInitHandedOff = true;\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * Stripes\n\t\t\t */\n\t\t\tif ( oInit.asStripeClasses === null )\n\t\t\t{\n\t\t\t\toSettings.asStripeClasses =[\n\t\t\t\t\toClasses.sStripeOdd,\n\t\t\t\t\toClasses.sStripeEven\n\t\t\t\t];\n\t\t\t}\n\t\t\t\n\t\t\t/* Remove row stripe classes if they are already on the table row */\n\t\t\tvar stripeClasses = oSettings.asStripeClasses;\n\t\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\n\t\t\tif ( $.inArray( true, $.map( stripeClasses, function(el, i) {\n\t\t\t\treturn rowOne.hasClass(el);\n\t\t\t} ) ) !== -1 ) {\n\t\t\t\t$('tbody tr', this).removeClass( stripeClasses.join(' ') );\n\t\t\t\toSettings.asDestroyStripes = stripeClasses.slice();\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * Columns\n\t\t\t * See if we should load columns automatically or use defined ones\n\t\t\t */\n\t\t\tvar anThs = [];\n\t\t\tvar aoColumnsInit;\n\t\t\tvar nThead = this.getElementsByTagName('thead');\n\t\t\tif ( nThead.length !== 0 )\n\t\t\t{\n\t\t\t\t_fnDetectHeader( oSettings.aoHeader, nThead[0] );\n\t\t\t\tanThs = _fnGetUniqueThs( oSettings );\n\t\t\t}\n\t\t\t\n\t\t\t/* If not given a column array, generate one with nulls */\n\t\t\tif ( oInit.aoColumns === null )\n\t\t\t{\n\t\t\t\taoColumnsInit = [];\n\t\t\t\tfor ( i=0, iLen=anThs.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\taoColumnsInit.push( null );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\taoColumnsInit = oInit.aoColumns;\n\t\t\t}\n\t\t\t\n\t\t\t/* Add the columns */\n\t\t\tfor ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\t_fnAddColumn( oSettings, anThs ? anThs[i] : null );\n\t\t\t}\n\t\t\t\n\t\t\t/* Apply the column definitions */\n\t\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n\t\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t\t} );\n\t\t\t\n\t\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t\t * attributes are found\n\t\t\t */\n\t\t\tif ( rowOne.length ) {\n\t\t\t\tvar a = function ( cell, name ) {\n\t\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\n\t\t\t\t};\n\t\t\t\n\t\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\n\t\t\t\t\tvar col = oSettings.aoColumns[i];\n\t\t\t\n\t\t\t\t\tif ( col.mData === i ) {\n\t\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\n\t\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\n\t\t\t\n\t\t\t\t\t\tif ( sort !== null || filter !== null ) {\n\t\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t\t_:      i+'.display',\n\t\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\n\t\t\t\t\t\t\t};\n\t\t\t\n\t\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\t\n\t\t\tvar features = oSettings.oFeatures;\n\t\t\tvar loadedInit = function () {\n\t\t\t\t/*\n\t\t\t\t * Sorting\n\t\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler\n\t\t\t\t */\n\t\t\t\n\t\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t\t\t// in case that has been altered, so the default sort reflects that option\n\t\t\t\tif ( oInit.aaSorting === undefined ) {\n\t\t\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\n\t\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t\t\t * account, and also will apply sorting disabled classes if disabled\n\t\t\t\t */\n\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\n\t\t\t\tif ( features.bSort ) {\n\t\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\t\tif ( oSettings.bSorted ) {\n\t\t\t\t\t\t\tvar aSort = _fnSortFlatten( oSettings );\n\t\t\t\t\t\t\tvar sortedColumns = {};\n\t\t\t\n\t\t\t\t\t\t\t$.each( aSort, function (i, val) {\n\t\t\t\t\t\t\t\tsortedColumns[ val.src ] = val.dir;\n\t\t\t\t\t\t\t} );\n\t\t\t\n\t\t\t\t\t\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );\n\t\t\t\t\t\t\t_fnSortAria( oSettings );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\n\t\t\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\t\t}\n\t\t\t\t}, 'sc' );\n\t\t\t\n\t\t\t\n\t\t\t\t/*\n\t\t\t\t * Final init\n\t\t\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t\t\t */\n\t\t\t\n\t\t\t\t// Work around for Webkit bug 83867 - store the caption-side before removing from doc\n\t\t\t\tvar captions = $this.children('caption').each( function () {\n\t\t\t\t\tthis._captionSide = $(this).css('caption-side');\n\t\t\t\t} );\n\t\t\t\n\t\t\t\tvar thead = $this.children('thead');\n\t\t\t\tif ( thead.length === 0 ) {\n\t\t\t\t\tthead = $('<thead/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\toSettings.nTHead = thead[0];\n\t\t\t\n\t\t\t\tvar tbody = $this.children('tbody');\n\t\t\t\tif ( tbody.length === 0 ) {\n\t\t\t\t\ttbody = $('<tbody/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\toSettings.nTBody = tbody[0];\n\t\t\t\n\t\t\t\tvar tfoot = $this.children('tfoot');\n\t\t\t\tif ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") ) {\n\t\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\t\t\ttfoot = $('<tfoot/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\n\t\t\t\tif ( tfoot.length === 0 || tfoot.children().length === 0 ) {\n\t\t\t\t\t$this.addClass( oClasses.sNoFooter );\n\t\t\t\t}\n\t\t\t\telse if ( tfoot.length > 0 ) {\n\t\t\t\t\toSettings.nTFoot = tfoot[0];\n\t\t\t\t\t_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Check if there is data passing into the constructor */\n\t\t\t\tif ( oInit.aaData ) {\n\t\t\t\t\tfor ( i=0 ; i<oInit.aaData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( oSettings, oInit.aaData[ i ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' ) {\n\t\t\t\t\t/* Grab the data from the page - only do this when deferred loading or no Ajax\n\t\t\t\t\t * source since there is no point in reading the DOM data if we are then going\n\t\t\t\t\t * to replace it with Ajax data\n\t\t\t\t\t */\n\t\t\t\t\t_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Copy the data index array */\n\t\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\t\n\t\t\t\t/* Initialisation complete - table can be drawn */\n\t\t\t\toSettings.bInitialised = true;\n\t\t\t\n\t\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\n\t\t\t\t * language processor)\n\t\t\t\t */\n\t\t\t\tif ( bInitHandedOff === false ) {\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t/* Must be done after everything which can be overridden by the state saving! */\n\t\t\tif ( oInit.bStateSave )\n\t\t\t{\n\t\t\t\tfeatures.bStateSave = true;\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );\n\t\t\t\t_fnLoadState( oSettings, oInit, loadedInit );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tloadedInit();\n\t\t\t}\n\t\t\t\n\t\t} );\n\t\t_that = null;\n\t\treturn this;\n\t};\n\n\t\n\t/*\n\t * It is useful to have variables which are scoped locally so only the\n\t * DataTables functions can access them and they don't leak into global space.\n\t * At the same time these functions are often useful over multiple files in the\n\t * core and API, so we list, or at least document, all variables which are used\n\t * by DataTables as private variables here. This also ensures that there is no\n\t * clashing of variable names and that they can easily referenced for reuse.\n\t */\n\t\n\t\n\t// Defined else where\n\t//  _selector_run\n\t//  _selector_opts\n\t//  _selector_first\n\t//  _selector_row_indexes\n\t\n\tvar _ext; // DataTable.ext\n\tvar _Api; // DataTable.Api\n\tvar _api_register; // DataTable.Api.register\n\tvar _api_registerPlural; // DataTable.Api.registerPlural\n\t\n\tvar _re_dic = {};\n\tvar _re_new_lines = /[\\r\\n]/g;\n\tvar _re_html = /<.*?>/g;\n\t\n\t// This is not strict ISO8601 - Date.parse() is quite lax, although\n\t// implementations differ between browsers.\n\tvar _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/;\n\t\n\t// Escape regular expression special characters\n\tvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\n\t\n\t// http://en.wikipedia.org/wiki/Foreign_exchange_market\n\t// - \\u20BD - Russian ruble.\n\t// - \\u20a9 - South Korean Won\n\t// - \\u20BA - Turkish Lira\n\t// - \\u20B9 - Indian Rupee\n\t// - R - Brazil (R$) and South Africa\n\t// - fr - Swiss Franc\n\t// - kr - Swedish krona, Norwegian krone and Danish krone\n\t// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n\t// - Ƀ - Bitcoin\n\t// - Ξ - Ethereum\n\t//   standards as thousands separators.\n\tvar _re_formatted_numeric = /[',$£€¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkɃΞ]/gi;\n\t\n\t\n\tvar _empty = function ( d ) {\n\t\treturn !d || d === true || d === '-' ? true : false;\n\t};\n\t\n\t\n\tvar _intVal = function ( s ) {\n\t\tvar integer = parseInt( s, 10 );\n\t\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n\t};\n\t\n\t// Convert from a formatted number with characters other than `.` as the\n\t// decimal place, to a Javascript number\n\tvar _numToDecimal = function ( num, decimalPoint ) {\n\t\t// Cache created regular expressions for speed as this function is called often\n\t\tif ( ! _re_dic[ decimalPoint ] ) {\n\t\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\n\t\t}\n\t\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\n\t\t\tnum;\n\t};\n\t\n\t\n\tvar _isNumber = function ( d, decimalPoint, formatted ) {\n\t\tvar strType = typeof d === 'string';\n\t\n\t\t// If empty return immediately so there must be a number if it is a\n\t\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t\t// as a formatted number for currency\n\t\tif ( _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tif ( decimalPoint && strType ) {\n\t\t\td = _numToDecimal( d, decimalPoint );\n\t\t}\n\t\n\t\tif ( formatted && strType ) {\n\t\t\td = d.replace( _re_formatted_numeric, '' );\n\t\t}\n\t\n\t\treturn !isNaN( parseFloat(d) ) && isFinite( d );\n\t};\n\t\n\t\n\t// A string without HTML in it can be considered to be HTML still\n\tvar _isHtml = function ( d ) {\n\t\treturn _empty( d ) || typeof d === 'string';\n\t};\n\t\n\t\n\tvar _htmlNumeric = function ( d, decimalPoint, formatted ) {\n\t\tif ( _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tvar html = _isHtml( d );\n\t\treturn ! html ?\n\t\t\tnull :\n\t\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?\n\t\t\t\ttrue :\n\t\t\t\tnull;\n\t};\n\t\n\t\n\tvar _pluck = function ( a, prop, prop2 ) {\n\t\tvar out = [];\n\t\tvar i=0, ien=a.length;\n\t\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] && a[i][ prop ] ) {\n\t\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] ) {\n\t\t\t\t\tout.push( a[i][ prop ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\t// Basically the same as _pluck, but rather than looping over `a` we use `order`\n\t// as the indexes to pick from `a`\n\tvar _pluck_order = function ( a, order, prop, prop2 )\n\t{\n\t\tvar out = [];\n\t\tvar i=0, ien=order.length;\n\t\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[ order[i] ][ prop ] ) {\n\t\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ] );\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _range = function ( len, start )\n\t{\n\t\tvar out = [];\n\t\tvar end;\n\t\n\t\tif ( start === undefined ) {\n\t\t\tstart = 0;\n\t\t\tend = len;\n\t\t}\n\t\telse {\n\t\t\tend = start;\n\t\t\tstart = len;\n\t\t}\n\t\n\t\tfor ( var i=start ; i<end ; i++ ) {\n\t\t\tout.push( i );\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _removeEmpty = function ( a )\n\t{\n\t\tvar out = [];\n\t\n\t\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\tif ( a[i] ) { // careful - will remove all falsy values!\n\t\t\t\tout.push( a[i] );\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _stripHtml = function ( d ) {\n\t\treturn d.replace( _re_html, '' );\n\t};\n\t\n\t\n\t/**\n\t * Determine if all values in the array are unique. This means we can short\n\t * cut the _unique method at the cost of a single loop. A sorted array is used\n\t * to easily check the values.\n\t *\n\t * @param  {array} src Source array\n\t * @return {boolean} true if all unique, false otherwise\n\t * @ignore\n\t */\n\tvar _areAllUnique = function ( src ) {\n\t\tif ( src.length < 2 ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tvar sorted = src.slice().sort();\n\t\tvar last = sorted[0];\n\t\n\t\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\n\t\t\tif ( sorted[i] === last ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tlast = sorted[i];\n\t\t}\n\t\n\t\treturn true;\n\t};\n\t\n\t\n\t/**\n\t * Find the unique elements in a source array.\n\t *\n\t * @param  {array} src Source array\n\t * @return {array} Array of unique items\n\t * @ignore\n\t */\n\tvar _unique = function ( src )\n\t{\n\t\tif ( _areAllUnique( src ) ) {\n\t\t\treturn src.slice();\n\t\t}\n\t\n\t\t// A faster unique method is to use object keys to identify used values,\n\t\t// but this doesn't work with arrays or objects, which we must also\n\t\t// consider. See jsperf.com/compare-array-unique-versions/4 for more\n\t\t// information.\n\t\tvar\n\t\t\tout = [],\n\t\t\tval,\n\t\t\ti, ien=src.length,\n\t\t\tj, k=0;\n\t\n\t\tagain: for ( i=0 ; i<ien ; i++ ) {\n\t\t\tval = src[i];\n\t\n\t\t\tfor ( j=0 ; j<k ; j++ ) {\n\t\t\t\tif ( out[j] === val ) {\n\t\t\t\t\tcontinue again;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tout.push( val );\n\t\t\tk++;\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\t/**\n\t * DataTables utility methods\n\t * \n\t * This namespace provides helper methods that DataTables uses internally to\n\t * create a DataTable, but which are not exclusively used only for DataTables.\n\t * These methods can be used by extension authors to save the duplication of\n\t * code.\n\t *\n\t *  @namespace\n\t */\n\tDataTable.util = {\n\t\t/**\n\t\t * Throttle the calls to a function. Arguments and context are maintained\n\t\t * for the throttled function.\n\t\t *\n\t\t * @param {function} fn Function to be called\n\t\t * @param {integer} freq Call frequency in mS\n\t\t * @return {function} Wrapped function\n\t\t */\n\t\tthrottle: function ( fn, freq ) {\n\t\t\tvar\n\t\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\t\tlast,\n\t\t\t\ttimer;\n\t\n\t\t\treturn function () {\n\t\t\t\tvar\n\t\t\t\t\tthat = this,\n\t\t\t\t\tnow  = +new Date(),\n\t\t\t\t\targs = arguments;\n\t\n\t\t\t\tif ( last && now < last + frequency ) {\n\t\t\t\t\tclearTimeout( timer );\n\t\n\t\t\t\t\ttimer = setTimeout( function () {\n\t\t\t\t\t\tlast = undefined;\n\t\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t\t}, frequency );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlast = now;\n\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Escape a string such that it can be used in a regular expression\n\t\t *\n\t\t *  @param {string} val string to escape\n\t\t *  @returns {string} escaped string\n\t\t */\n\t\tescapeRegex: function ( val ) {\n\t\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\n\t\t}\n\t};\n\t\n\t\n\t\n\t/**\n\t * Create a mapping object that allows camel case parameters to be looked up\n\t * for their Hungarian counterparts. The mapping is stored in a private\n\t * parameter called `_hungarianMap` which can be accessed on the source object.\n\t *  @param {object} o\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnHungarianMap ( o )\n\t{\n\t\tvar\n\t\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\t\tmatch,\n\t\t\tnewKey,\n\t\t\tmap = {};\n\t\n\t\t$.each( o, function (key, val) {\n\t\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\t\n\t\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\n\t\t\t{\n\t\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\n\t\t\t\tmap[ newKey ] = key;\n\t\n\t\t\t\tif ( match[1] === 'o' )\n\t\t\t\t{\n\t\t\t\t\t_fnHungarianMap( o[key] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t\n\t\to._hungarianMap = map;\n\t}\n\t\n\t\n\t/**\n\t * Convert from camel case parameters to Hungarian, based on a Hungarian map\n\t * created by _fnHungarianMap.\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCamelToHungarian ( src, user, force )\n\t{\n\t\tif ( ! src._hungarianMap ) {\n\t\t\t_fnHungarianMap( src );\n\t\t}\n\t\n\t\tvar hungarianKey;\n\t\n\t\t$.each( user, function (key, val) {\n\t\t\thungarianKey = src._hungarianMap[ key ];\n\t\n\t\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\n\t\t\t{\n\t\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\t\tif ( hungarianKey.charAt(0) === 'o' )\n\t\t\t\t{\n\t\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\t\tif ( ! user[ hungarianKey ] ) {\n\t\t\t\t\t\tuser[ hungarianKey ] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\n\t\n\t\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tuser[hungarianKey] = user[ key ];\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Language compatibility - when certain options are given, and others aren't, we\n\t * need to duplicate the values over, in order to provide backwards compatibility\n\t * with older language files.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLanguageCompat( lang )\n\t{\n\t\t// Note the use of the Hungarian notation for the parameters in this method as\n\t\t// this is called after the mapping of camelCase to Hungarian\n\t\tvar defaults = DataTable.defaults.oLanguage;\n\t\n\t\t// Default mapping\n\t\tvar defaultDecimal = defaults.sDecimal;\n\t\tif ( defaultDecimal ) {\n\t\t\t_addNumericSort( defaultDecimal );\n\t\t}\n\t\n\t\tif ( lang ) {\n\t\t\tvar zeroRecords = lang.sZeroRecords;\n\t\n\t\t\t// Backwards compatibility - if there is no sEmptyTable given, then use the same as\n\t\t\t// sZeroRecords - assuming that is given.\n\t\t\tif ( ! lang.sEmptyTable && zeroRecords &&\n\t\t\t\tdefaults.sEmptyTable === \"No data available in table\" )\n\t\t\t{\n\t\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );\n\t\t\t}\n\t\n\t\t\t// Likewise with loading records\n\t\t\tif ( ! lang.sLoadingRecords && zeroRecords &&\n\t\t\t\tdefaults.sLoadingRecords === \"Loading...\" )\n\t\t\t{\n\t\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );\n\t\t\t}\n\t\n\t\t\t// Old parameter name of the thousands separator mapped onto the new\n\t\t\tif ( lang.sInfoThousands ) {\n\t\t\t\tlang.sThousands = lang.sInfoThousands;\n\t\t\t}\n\t\n\t\t\tvar decimal = lang.sDecimal;\n\t\t\tif ( decimal && defaultDecimal !== decimal ) {\n\t\t\t\t_addNumericSort( decimal );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Map one parameter onto another\n\t *  @param {object} o Object to map\n\t *  @param {*} knew The new parameter name\n\t *  @param {*} old The old parameter name\n\t */\n\tvar _fnCompatMap = function ( o, knew, old ) {\n\t\tif ( o[ knew ] !== undefined ) {\n\t\t\to[ old ] = o[ knew ];\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Provide backwards compatibility for the main DT options. Note that the new\n\t * options are mapped onto the old parameters, so this is an external interface\n\t * change only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatOpts ( init )\n\t{\n\t\t_fnCompatMap( init, 'ordering',      'bSort' );\n\t\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\n\t\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\n\t\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\n\t\t_fnCompatMap( init, 'order',         'aaSorting' );\n\t\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\n\t\t_fnCompatMap( init, 'paging',        'bPaginate' );\n\t\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\n\t\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\n\t\t_fnCompatMap( init, 'searching',     'bFilter' );\n\t\n\t\t// Boolean initialisation of x-scrolling\n\t\tif ( typeof init.sScrollX === 'boolean' ) {\n\t\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t\t}\n\t\tif ( typeof init.scrollX === 'boolean' ) {\n\t\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t\t}\n\t\n\t\t// Column search objects are in an array, so it needs to be converted\n\t\t// element by element\n\t\tvar searchCols = init.aoSearchCols;\n\t\n\t\tif ( searchCols ) {\n\t\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\n\t\t\t\tif ( searchCols[i] ) {\n\t\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Provide backwards compatibility for column options. Note that the new options\n\t * are mapped onto the old parameters, so this is an external interface change\n\t * only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatCols ( init )\n\t{\n\t\t_fnCompatMap( init, 'orderable',     'bSortable' );\n\t\t_fnCompatMap( init, 'orderData',     'aDataSort' );\n\t\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\n\t\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\n\t\n\t\t// orderData can be given as an integer\n\t\tvar dataSort = init.aDataSort;\n\t\tif ( typeof dataSort === 'number' && ! $.isArray( dataSort ) ) {\n\t\t\tinit.aDataSort = [ dataSort ];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Browser feature detection for capabilities, quirks\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBrowserDetect( settings )\n\t{\n\t\t// We don't need to do this every time DataTables is constructed, the values\n\t\t// calculated are specific to the browser and OS configuration which we\n\t\t// don't expect to change between initialisations\n\t\tif ( ! DataTable.__browser ) {\n\t\t\tvar browser = {};\n\t\t\tDataTable.__browser = browser;\n\t\n\t\t\t// Scrolling feature / quirks detection\n\t\t\tvar n = $('<div/>')\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: $(window).scrollLeft()*-1, // allow for scrolling\n\t\t\t\t\theight: 1,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t.appendTo( 'body' );\n\t\n\t\t\tvar outer = n.children();\n\t\t\tvar inner = outer.children();\n\t\n\t\t\t// Numbers below, in order, are:\n\t\t\t// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\n\t\t\t//\n\t\t\t// IE6 XP:                           100 100 100  83\n\t\t\t// IE7 Vista:                        100 100 100  83\n\t\t\t// IE 8+ Windows:                     83  83 100  83\n\t\t\t// Evergreen Windows:                 83  83 100  83\n\t\t\t// Evergreen Mac with scrollbars:     85  85 100  85\n\t\t\t// Evergreen Mac without scrollbars: 100 100 100 100\n\t\n\t\t\t// Get scrollbar width\n\t\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\t\n\t\t\t// IE6/7 will oversize a width 100% element inside a scrolling element, to\n\t\t\t// include the width of the scrollbar, while other browsers ensure the inner\n\t\t\t// element is contained without forcing scrolling\n\t\t\tbrowser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\n\t\n\t\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t\t// scrollbar on the left, rather than the right.\n\t\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\n\t\n\t\t\t// IE8- don't provide height and width for getBoundingClientRect\n\t\t\tbrowser.bBounding = n[0].getBoundingClientRect().width ? true : false;\n\t\n\t\t\tn.remove();\n\t\t}\n\t\n\t\t$.extend( settings.oBrowser, DataTable.__browser );\n\t\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n\t}\n\t\n\t\n\t/**\n\t * Array.prototype reduce[Right] method, used for browsers which don't support\n\t * JS 1.6. Done this way to reduce code size, since we iterate either way\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReduce ( that, fn, init, start, end, inc )\n\t{\n\t\tvar\n\t\t\ti = start,\n\t\t\tvalue,\n\t\t\tisSet = false;\n\t\n\t\tif ( init !== undefined ) {\n\t\t\tvalue = init;\n\t\t\tisSet = true;\n\t\t}\n\t\n\t\twhile ( i !== end ) {\n\t\t\tif ( ! that.hasOwnProperty(i) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\tvalue = isSet ?\n\t\t\t\tfn( value, that[i], i, that ) :\n\t\t\t\tthat[i];\n\t\n\t\t\tisSet = true;\n\t\t\ti += inc;\n\t\t}\n\t\n\t\treturn value;\n\t}\n\t\n\t/**\n\t * Add a column to the list used for the table with default values\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nTh The th element for this column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddColumn( oSettings, nTh )\n\t{\n\t\t// Add column to aoColumns array\n\t\tvar oDefaults = DataTable.defaults.column;\n\t\tvar iCol = oSettings.aoColumns.length;\n\t\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\t\"nTh\": nTh ? nTh : document.createElement('th'),\n\t\t\t\"sTitle\":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',\n\t\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\t\tidx: iCol\n\t\t} );\n\t\toSettings.aoColumns.push( oCol );\n\t\n\t\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t\t// passed into extend can be undefined. This allows the user to give a default\n\t\t// with only some of the parameters defined, and also not give a default\n\t\tvar searchCols = oSettings.aoPreSearchCols;\n\t\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\n\t\n\t\t// Use the default column options function to initialise classes etc\n\t\t_fnColumnOptions( oSettings, iCol, $(nTh).data() );\n\t}\n\t\n\t\n\t/**\n\t * Apply options for a column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iCol column index to consider\n\t *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnOptions( oSettings, iCol, oOptions )\n\t{\n\t\tvar oCol = oSettings.aoColumns[ iCol ];\n\t\tvar oClasses = oSettings.oClasses;\n\t\tvar th = $(oCol.nTh);\n\t\n\t\t// Try to get width information from the DOM. We can't get it from CSS\n\t\t// as we'd need to parse the CSS stylesheet. `width` option can override\n\t\tif ( ! oCol.sWidthOrig ) {\n\t\t\t// Width attribute\n\t\t\toCol.sWidthOrig = th.attr('width') || null;\n\t\n\t\t\t// Style attribute\n\t\t\tvar t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n\t\t\tif ( t ) {\n\t\t\t\toCol.sWidthOrig = t[1];\n\t\t\t}\n\t\t}\n\t\n\t\t/* User specified column options */\n\t\tif ( oOptions !== undefined && oOptions !== null )\n\t\t{\n\t\t\t// Backwards compatibility\n\t\t\t_fnCompatCols( oOptions );\n\t\n\t\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions );\n\t\n\t\t\t/* Backwards compatibility for mDataProp */\n\t\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\n\t\t\t{\n\t\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t\t}\n\t\n\t\t\tif ( oOptions.sType )\n\t\t\t{\n\t\t\t\toCol._sManualType = oOptions.sType;\n\t\t\t}\n\t\n\t\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t\t// the ability to use a valid name for the camel case input\n\t\t\tif ( oOptions.className && ! oOptions.sClass )\n\t\t\t{\n\t\t\t\toOptions.sClass = oOptions.className;\n\t\t\t}\n\t\t\tif ( oOptions.sClass ) {\n\t\t\t\tth.addClass( oOptions.sClass );\n\t\t\t}\n\t\n\t\t\t$.extend( oCol, oOptions );\n\t\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\t\n\t\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t\t * priority if defined\n\t\t\t */\n\t\t\tif ( oOptions.iDataSort !== undefined )\n\t\t\t{\n\t\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t\t}\n\t\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\t\t}\n\t\n\t\t/* Cache the data get and set functions for speed */\n\t\tvar mDataSrc = oCol.mData;\n\t\tvar mData = _fnGetObjectDataFn( mDataSrc );\n\t\tvar mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\t\n\t\tvar attrTest = function( src ) {\n\t\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t\t};\n\t\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\n\t\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t\t);\n\t\toCol._setter = null;\n\t\n\t\toCol.fnGetData = function (rowData, type, meta) {\n\t\t\tvar innerData = mData( rowData, type, undefined, meta );\n\t\n\t\t\treturn mRender && type ?\n\t\t\t\tmRender( innerData, type, rowData, meta ) :\n\t\t\t\tinnerData;\n\t\t};\n\t\toCol.fnSetData = function ( rowData, val, meta ) {\n\t\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\n\t\t};\n\t\n\t\t// Indicate if DataTables should read DOM data as an object or array\n\t\t// Used in _fnGetRowElements\n\t\tif ( typeof mDataSrc !== 'number' ) {\n\t\t\toSettings._rowReadObject = true;\n\t\t}\n\t\n\t\t/* Feature sorting overrides column specific when off */\n\t\tif ( !oSettings.oFeatures.bSort )\n\t\t{\n\t\t\toCol.bSortable = false;\n\t\t\tth.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called\n\t\t}\n\t\n\t\t/* Check that the class assignment is correct for sorting */\n\t\tvar bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n\t\tvar bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n\t\tif ( !oCol.bSortable || (!bAsc && !bDesc) )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableNone;\n\t\t\toCol.sSortingClassJUI = \"\";\n\t\t}\n\t\telse if ( bAsc && !bDesc )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableAsc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n\t\t}\n\t\telse if ( !bAsc && bDesc )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableDesc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n\t\t}\n\t\telse\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortable;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUI;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Adjust the table column widths for new data. Note: you would probably want to\n\t * do a redraw after calling this function!\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAdjustColumnSizing ( settings )\n\t{\n\t\t/* Not interested in doing column width calculation if auto-width is disabled */\n\t\tif ( settings.oFeatures.bAutoWidth !== false )\n\t\t{\n\t\t\tvar columns = settings.aoColumns;\n\t\n\t\t\t_fnCalculateColumnWidths( settings );\n\t\t\tfor ( var i=0 , iLen=columns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tcolumns[i].nTh.style.width = columns[i].sWidth;\n\t\t\t}\n\t\t}\n\t\n\t\tvar scroll = settings.oScroll;\n\t\tif ( scroll.sY !== '' || scroll.sX !== '')\n\t\t{\n\t\t\t_fnScrollDraw( settings );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\n\t}\n\t\n\t\n\t/**\n\t * Covert the index of a visible column to the index in the data array (take account\n\t * of hidden columns)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iMatch Visible column index to lookup\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\n\t\treturn typeof aiVis[iMatch] === 'number' ?\n\t\t\taiVis[iMatch] :\n\t\t\tnull;\n\t}\n\t\n\t\n\t/**\n\t * Covert the index of an index in the data array and convert it to the visible\n\t *   column index (take account of hidden columns)\n\t *  @param {int} iMatch Column index to lookup\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnIndexToVisible( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\tvar iPos = $.inArray( iMatch, aiVis );\n\t\n\t\treturn iPos !== -1 ? iPos : null;\n\t}\n\t\n\t\n\t/**\n\t * Get the number of visible columns\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the number of visible columns\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisbleColumns( oSettings )\n\t{\n\t\tvar vis = 0;\n\t\n\t\t// No reduce in IE8, use a loop for now\n\t\t$.each( oSettings.aoColumns, function ( i, col ) {\n\t\t\tif ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {\n\t\t\t\tvis++;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn vis;\n\t}\n\t\n\t\n\t/**\n\t * Get an array of column indexes that match a given property\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sParam Parameter in aoColumns to look for - typically\n\t *    bVisible or bSearchable\n\t *  @returns {array} Array of indexes with matched properties\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetColumns( oSettings, sParam )\n\t{\n\t\tvar a = [];\n\t\n\t\t$.map( oSettings.aoColumns, function(val, i) {\n\t\t\tif ( val[sParam] ) {\n\t\t\t\ta.push( i );\n\t\t\t}\n\t\t} );\n\t\n\t\treturn a;\n\t}\n\t\n\t\n\t/**\n\t * Calculate the 'type' of a column\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnTypes ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar data = settings.aoData;\n\t\tvar types = DataTable.ext.type.detect;\n\t\tvar i, ien, j, jen, k, ken;\n\t\tvar col, cell, detectedType, cache;\n\t\n\t\t// For each column, spin over the \n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tcol = columns[i];\n\t\t\tcache = [];\n\t\n\t\t\tif ( ! col.sType && col._sManualType ) {\n\t\t\t\tcol.sType = col._sManualType;\n\t\t\t}\n\t\t\telse if ( ! col.sType ) {\n\t\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\n\t\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\n\t\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\t\tif ( cache[k] === undefined ) {\n\t\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tdetectedType = types[j]( cache[k], settings );\n\t\n\t\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t\t// types\n\t\t\t\t\t\tif ( ! detectedType && j !== types.length-1 ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t\t// bottom of the pile and very similar to string\n\t\t\t\t\t\tif ( detectedType === 'html' ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t\t// type\n\t\t\t\t\tif ( detectedType ) {\n\t\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Fall back - if no type was detected, always use string\n\t\t\t\tif ( ! col.sType ) {\n\t\t\t\t\tcol.sType = 'string';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Take the column definitions and static columns arrays and calculate how\n\t * they relate to column indexes. The callback function will then apply the\n\t * definition found for a column to a suitable configuration object.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n\t *  @param {array} aoCols The aoColumns array that defines columns individually\n\t *  @param {function} fn Callback function - takes two parameters, the calculated\n\t *    column index and the definition for that column.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, def;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\t// Column definitions with aTargets\n\t\tif ( aoColDefs )\n\t\t{\n\t\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t\t{\n\t\t\t\tdef = aoColDefs[i];\n\t\n\t\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\t\tvar aTargets = def.targets !== undefined ?\n\t\t\t\t\tdef.targets :\n\t\t\t\t\tdef.aTargets;\n\t\n\t\t\t\tif ( ! $.isArray( aTargets ) )\n\t\t\t\t{\n\t\t\t\t\taTargets = [ aTargets ];\n\t\t\t\t}\n\t\n\t\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\tif ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\t\twhile( columns.length <= aTargets[j] )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\t\tfn( aTargets[j], def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\t\tfn( columns.length+aTargets[j], def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'string' )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Class name matching on TH element */\n\t\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ( aTargets[j] == \"_all\" ||\n\t\t\t\t\t\t\t     $(columns[k].nTh).hasClass( aTargets[j] ) )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Statically defined columns array\n\t\tif ( aoCols )\n\t\t{\n\t\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tfn( i, aoCols[i] );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Add a data array to the table, creating DOM node etc. This is the parallel to\n\t * _fnGatherData, but for adding rows from a Javascript source, rather than a\n\t * DOM source.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aData data array to be added\n\t *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddData ( oSettings, aDataIn, nTr, anTds )\n\t{\n\t\t/* Create the object for storing information about this new row */\n\t\tvar iRow = oSettings.aoData.length;\n\t\tvar oData = $.extend( true, {}, DataTable.models.oRow, {\n\t\t\tsrc: nTr ? 'dom' : 'data',\n\t\t\tidx: iRow\n\t\t} );\n\t\n\t\toData._aData = aDataIn;\n\t\toSettings.aoData.push( oData );\n\t\n\t\t/* Create the cells */\n\t\tvar nTd, sThisType;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\t// Invalidate the column types as the new data needs to be revalidated\n\t\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tcolumns[i].sType = null;\n\t\t}\n\t\n\t\t/* Add to the display array */\n\t\toSettings.aiDisplayMaster.push( iRow );\n\t\n\t\tvar id = oSettings.rowIdFn( aDataIn );\n\t\tif ( id !== undefined ) {\n\t\t\toSettings.aIds[ id ] = oData;\n\t\t}\n\t\n\t\t/* Create the DOM information, or register it if already present */\n\t\tif ( nTr || ! oSettings.oFeatures.bDeferRender )\n\t\t{\n\t\t\t_fnCreateTr( oSettings, iRow, nTr, anTds );\n\t\t}\n\t\n\t\treturn iRow;\n\t}\n\t\n\t\n\t/**\n\t * Add one or more TR elements to the table. Generally we'd expect to\n\t * use this for reading data from a DOM sourced table, but it could be\n\t * used for an TR element. Note that if a TR is given, it is used (i.e.\n\t * it is not cloned).\n\t *  @param {object} settings dataTables settings object\n\t *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n\t *  @returns {array} Array of indexes for the added rows\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddTr( settings, trs )\n\t{\n\t\tvar row;\n\t\n\t\t// Allow an individual node to be passed in\n\t\tif ( ! (trs instanceof $) ) {\n\t\t\ttrs = $(trs);\n\t\t}\n\t\n\t\treturn trs.map( function (i, el) {\n\t\t\trow = _fnGetRowElements( settings, el );\n\t\t\treturn _fnAddData( settings, row.data, el, row.cells );\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Take a TR element and convert it to an index in aoData\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} n the TR element to find\n\t *  @returns {int} index if the node is found, null if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToDataIndex( oSettings, n )\n\t{\n\t\treturn (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;\n\t}\n\t\n\t\n\t/**\n\t * Take a TD element and convert it into a column data index (not the visible index)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow The row number the TD/TH can be found in\n\t *  @param {node} n The TD/TH element to find\n\t *  @returns {int} index if the node is found, -1 if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToColumnIndex( oSettings, iRow, n )\n\t{\n\t\treturn $.inArray( n, oSettings.aoData[ iRow ].anCells );\n\t}\n\t\n\t\n\t/**\n\t * Get the data for a given cell from the internal cache, taking into account data mapping\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {string} type data get type ('display', 'type' 'filter' 'sort')\n\t *  @returns {*} Cell data\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetCellData( settings, rowIdx, colIdx, type )\n\t{\n\t\tvar draw           = settings.iDraw;\n\t\tvar col            = settings.aoColumns[colIdx];\n\t\tvar rowData        = settings.aoData[rowIdx]._aData;\n\t\tvar defaultContent = col.sDefaultContent;\n\t\tvar cellData       = col.fnGetData( rowData, type, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t} );\n\t\n\t\tif ( cellData === undefined ) {\n\t\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\n\t\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\n\t\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\n\t\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\n\t\t\t\tsettings.iDrawError = draw;\n\t\t\t}\n\t\t\treturn defaultContent;\n\t\t}\n\t\n\t\t// When the data source is null and a specific data type is requested (i.e.\n\t\t// not the original data), we can use default column data\n\t\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\n\t\t\tcellData = defaultContent;\n\t\t}\n\t\telse if ( typeof cellData === 'function' ) {\n\t\t\t// If the data source is a function, then we run it and use the return,\n\t\t\t// executing in the scope of the data object (for instances)\n\t\t\treturn cellData.call( rowData );\n\t\t}\n\t\n\t\tif ( cellData === null && type == 'display' ) {\n\t\t\treturn '';\n\t\t}\n\t\treturn cellData;\n\t}\n\t\n\t\n\t/**\n\t * Set the value for a specific cell, into the internal data cache\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {*} val Value to set\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetCellData( settings, rowIdx, colIdx, val )\n\t{\n\t\tvar col     = settings.aoColumns[colIdx];\n\t\tvar rowData = settings.aoData[rowIdx]._aData;\n\t\n\t\tcol.fnSetData( rowData, val, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t}  );\n\t}\n\t\n\t\n\t// Private variable that is used to match action syntax in the data property object\n\tvar __reArray = /\\[.*?\\]$/;\n\tvar __reFn = /\\(\\)$/;\n\t\n\t/**\n\t * Split string on periods, taking into account escaped periods\n\t * @param  {string} str String to split\n\t * @return {array} Split string\n\t */\n\tfunction _fnSplitObjNotation( str )\n\t{\n\t\treturn $.map( str.match(/(\\\\.|[^\\.])+/g) || [''], function ( s ) {\n\t\t\treturn s.replace(/\\\\\\./g, '.');\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Return a function that can be used to get data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data get function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetObjectDataFn( mSource )\n\t{\n\t\tif ( $.isPlainObject( mSource ) )\n\t\t{\n\t\t\t/* Build an object of get functions, and wrap them in a single call */\n\t\t\tvar o = {};\n\t\t\t$.each( mSource, function (key, val) {\n\t\t\t\tif ( val ) {\n\t\t\t\t\to[key] = _fnGetObjectDataFn( val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\tvar t = o[type] || o._;\n\t\t\t\treturn t !== undefined ?\n\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\tdata;\n\t\t\t};\n\t\t}\n\t\telse if ( mSource === null )\n\t\t{\n\t\t\t/* Give an empty string for rendering / sorting etc */\n\t\t\treturn function (data) { // type, row and meta also passed, but not used\n\t\t\t\treturn data;\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'function' )\n\t\t{\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\treturn mSource( data, type, row, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n\t\t\t      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )\n\t\t{\n\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t * be used if defined, rather than throwing an error\n\t\t\t */\n\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\t\n\t\t\t\tif ( src !== \"\" )\n\t\t\t\t{\n\t\t\t\t\tvar a = _fnSplitObjNotation( src );\n\t\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\t\tif ( arrayNotation )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tout = [];\n\t\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\t\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\tif ( $.isArray( data ) ) {\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\t\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( funcNotation )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[ a[i] ]();\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( data === null || data[ a[i] ] === undefined )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn fetchData( data, type, mSource );\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Array or flat object mapping */\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn data[mSource];\n\t\t\t};\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Return a function that can be used to set data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data set function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetObjectDataFn( mSource )\n\t{\n\t\tif ( $.isPlainObject( mSource ) )\n\t\t{\n\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t * for `mRender` which is read only.\n\t\t\t */\n\t\t\treturn _fnSetObjectDataFn( mSource._ );\n\t\t}\n\t\telse if ( mSource === null )\n\t\t{\n\t\t\t/* Nothing to do when the data source is null */\n\t\t\treturn function () {};\n\t\t}\n\t\telse if ( typeof mSource === 'function' )\n\t\t{\n\t\t\treturn function (data, val, meta) {\n\t\t\t\tmSource( data, 'set', val, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n\t\t\t      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )\n\t\t{\n\t\t\t/* Like the get, we need to get data from a nested object */\n\t\t\tvar setData = function (data, val, src) {\n\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\n\t\t\t\tvar aLast = a[a.length-1];\n\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\t\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\tif ( arrayNotation )\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\tdata[ a[i] ] = [];\n\t\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\tinnerSrc = b.join('.');\n\t\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\tif ( $.isArray( val ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\tdata[ a[i] ] = val;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( funcNotation )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\tdata = data[ a[i] ]( val );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined )\n\t\t\t\t\t{\n\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t}\n\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t}\n\t\n\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\tif ( aLast.match(__reFn ) )\n\t\t\t\t{\n\t\t\t\t\t// Function call\n\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\treturn setData( data, val, mSource );\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Array or flat object mapping */\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\tdata[mSource] = val;\n\t\t\t};\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Return an array with the full table data\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns array {array} aData Master data array\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetDataMaster ( settings )\n\t{\n\t\treturn _pluck( settings.aoData, '_aData' );\n\t}\n\t\n\t\n\t/**\n\t * Nuke the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnClearTable( settings )\n\t{\n\t\tsettings.aoData.length = 0;\n\t\tsettings.aiDisplayMaster.length = 0;\n\t\tsettings.aiDisplay.length = 0;\n\t\tsettings.aIds = {};\n\t}\n\t\n\t\n\t /**\n\t * Take an array of integers (index array) and remove a target integer (value - not\n\t * the key!)\n\t *  @param {array} a Index array to target\n\t *  @param {int} iTarget value to find\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDeleteIndex( a, iTarget, splice )\n\t{\n\t\tvar iTargetIndex = -1;\n\t\n\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( a[i] == iTarget )\n\t\t\t{\n\t\t\t\tiTargetIndex = i;\n\t\t\t}\n\t\t\telse if ( a[i] > iTarget )\n\t\t\t{\n\t\t\t\ta[i]--;\n\t\t\t}\n\t\t}\n\t\n\t\tif ( iTargetIndex != -1 && splice === undefined )\n\t\t{\n\t\t\ta.splice( iTargetIndex, 1 );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Mark cached data as invalid such that a re-read of the data will occur when\n\t * the cached data is next requested. Also update from the data source object.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {int}    rowIdx   Row index to invalidate\n\t * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n\t *     or 'data'\n\t * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n\t *     row will be invalidated\n\t * @memberof DataTable#oApi\n\t *\n\t * @todo For the modularisation of v1.11 this will need to become a callback, so\n\t *   the sort and filter methods can subscribe to it. That will required\n\t *   initialisation options for sorting, which is why it is not already baked in\n\t */\n\tfunction _fnInvalidate( settings, rowIdx, src, colIdx )\n\t{\n\t\tvar row = settings.aoData[ rowIdx ];\n\t\tvar i, ien;\n\t\tvar cellWrite = function ( cell, col ) {\n\t\t\t// This is very frustrating, but in IE if you just write directly\n\t\t\t// to innerHTML, and elements that are overwritten are GC'ed,\n\t\t\t// even if there is a reference to them elsewhere\n\t\t\twhile ( cell.childNodes.length ) {\n\t\t\t\tcell.removeChild( cell.firstChild );\n\t\t\t}\n\t\n\t\t\tcell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );\n\t\t};\n\t\n\t\t// Are we reading last data from DOM or the data object?\n\t\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\n\t\t\t// Read the data from the DOM\n\t\t\trow._aData = _fnGetRowElements(\n\t\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t\t)\n\t\t\t\t.data;\n\t\t}\n\t\telse {\n\t\t\t// Reading from data object, update the DOM\n\t\t\tvar cells = row.anCells;\n\t\n\t\t\tif ( cells ) {\n\t\t\t\tif ( colIdx !== undefined ) {\n\t\t\t\t\tcellWrite( cells[colIdx], colIdx );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\t\t\tcellWrite( cells[i], i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// For both row and cell invalidation, the cached data for sorting and\n\t\t// filtering is nulled out\n\t\trow._aSortData = null;\n\t\trow._aFilterData = null;\n\t\n\t\t// Invalidate the type for a specific column (if given) or all columns since\n\t\t// the data might have changed\n\t\tvar cols = settings.aoColumns;\n\t\tif ( colIdx !== undefined ) {\n\t\t\tcols[ colIdx ].sType = null;\n\t\t}\n\t\telse {\n\t\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\n\t\t\t\tcols[i].sType = null;\n\t\t\t}\n\t\n\t\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t\t_fnRowAttributes( settings, row );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Build a data source object from an HTML row, reading the contents of the\n\t * cells that are in the row.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {node|object} TR element from which to read data or existing row\n\t *   object from which to re-read the data from the cells\n\t * @param {int} [colIdx] Optional column index\n\t * @param {array|object} [d] Data source object. If `colIdx` is given then this\n\t *   parameter should also be given and will be used to write the data into.\n\t *   Only the column in question will be written\n\t * @returns {object} Object with two parameters: `data` the data read, in\n\t *   document order, and `cells` and array of nodes (they can be useful to the\n\t *   caller, so rather than needing a second traversal to get them, just return\n\t *   them from here).\n\t * @memberof DataTable#oApi\n\t */\n\tfunction _fnGetRowElements( settings, row, colIdx, d )\n\t{\n\t\tvar\n\t\t\ttds = [],\n\t\t\ttd = row.firstChild,\n\t\t\tname, col, o, i=0, contents,\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tobjectRead = settings._rowReadObject;\n\t\n\t\t// Allow the data object to be passed in, or construct\n\t\td = d !== undefined ?\n\t\t\td :\n\t\t\tobjectRead ?\n\t\t\t\t{} :\n\t\t\t\t[];\n\t\n\t\tvar attr = function ( str, td  ) {\n\t\t\tif ( typeof str === 'string' ) {\n\t\t\t\tvar idx = str.indexOf('@');\n\t\n\t\t\t\tif ( idx !== -1 ) {\n\t\t\t\t\tvar attr = str.substring( idx+1 );\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( str );\n\t\t\t\t\tsetter( d, td.getAttribute( attr ) );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t// Read data from a cell and store into the data object\n\t\tvar cellProcess = function ( cell ) {\n\t\t\tif ( colIdx === undefined || colIdx === i ) {\n\t\t\t\tcol = columns[i];\n\t\t\t\tcontents = $.trim(cell.innerHTML);\n\t\n\t\t\t\tif ( col && col._bAttrSrc ) {\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\n\t\t\t\t\tsetter( d, contents );\n\t\n\t\t\t\t\tattr( col.mData.sort, cell );\n\t\t\t\t\tattr( col.mData.type, cell );\n\t\t\t\t\tattr( col.mData.filter, cell );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t\t// be read to either an object or an array.\n\t\t\t\t\tif ( objectRead ) {\n\t\t\t\t\t\tif ( ! col._setter ) {\n\t\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcol._setter( d, contents );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td[i] = contents;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\ti++;\n\t\t};\n\t\n\t\tif ( td ) {\n\t\t\t// `tr` element was passed in\n\t\t\twhile ( td ) {\n\t\t\t\tname = td.nodeName.toUpperCase();\n\t\n\t\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\n\t\t\t\t\tcellProcess( td );\n\t\t\t\t\ttds.push( td );\n\t\t\t\t}\n\t\n\t\t\t\ttd = td.nextSibling;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Existing row object passed in\n\t\t\ttds = row.anCells;\n\t\n\t\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\n\t\t\t\tcellProcess( tds[j] );\n\t\t\t}\n\t\t}\n\t\n\t\t// Read the ID from the DOM if present\n\t\tvar rowNode = row.firstChild ? row : row.nTr;\n\t\n\t\tif ( rowNode ) {\n\t\t\tvar id = rowNode.getAttribute( 'id' );\n\t\n\t\t\tif ( id ) {\n\t\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\n\t\t\t}\n\t\t}\n\t\n\t\treturn {\n\t\t\tdata: d,\n\t\t\tcells: tds\n\t\t};\n\t}\n\t/**\n\t * Create a new TR element (and it's TD children) for a row\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow Row to consider\n\t *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\n\t{\n\t\tvar\n\t\t\trow = oSettings.aoData[iRow],\n\t\t\trowData = row._aData,\n\t\t\tcells = [],\n\t\t\tnTr, nTd, oCol,\n\t\t\ti, iLen;\n\t\n\t\tif ( row.nTr === null )\n\t\t{\n\t\t\tnTr = nTrIn || document.createElement('tr');\n\t\n\t\t\trow.nTr = nTr;\n\t\t\trow.anCells = cells;\n\t\n\t\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t\t * to the aoData array for fast look up\n\t\t\t */\n\t\t\tnTr._DT_RowIndex = iRow;\n\t\n\t\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t\t_fnRowAttributes( oSettings, row );\n\t\n\t\t\t/* Process each column */\n\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\toCol = oSettings.aoColumns[i];\n\t\n\t\t\t\tnTd = nTrIn ? anTds[i] : document.createElement( oCol.sCellType );\n\t\t\t\tnTd._DT_CellIndex = {\n\t\t\t\t\trow: iRow,\n\t\t\t\t\tcolumn: i\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tcells.push( nTd );\n\t\n\t\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\t\tif ( (!nTrIn || oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t\t (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\n\t\t\t\t) {\n\t\t\t\t\tnTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );\n\t\t\t\t}\n\t\n\t\t\t\t/* Add user defined class */\n\t\t\t\tif ( oCol.sClass )\n\t\t\t\t{\n\t\t\t\t\tnTd.className += ' '+oCol.sClass;\n\t\t\t\t}\n\t\n\t\t\t\t// Visibility - add or remove as required\n\t\t\t\tif ( oCol.bVisible && ! nTrIn )\n\t\t\t\t{\n\t\t\t\t\tnTr.appendChild( nTd );\n\t\t\t\t}\n\t\t\t\telse if ( ! oCol.bVisible && nTrIn )\n\t\t\t\t{\n\t\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t\t}\n\t\n\t\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t\t{\n\t\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow, cells] );\n\t\t}\n\t\n\t\t// Remove once webkit bug 131819 and Chromium bug 365619 have been resolved\n\t\t// and deployed\n\t\trow.nTr.setAttribute( 'role', 'row' );\n\t}\n\t\n\t\n\t/**\n\t * Add attributes to a row based on the special `DT_*` parameters in a data\n\t * source object.\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} DataTables row object for the row to be modified\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnRowAttributes( settings, row )\n\t{\n\t\tvar tr = row.nTr;\n\t\tvar data = row._aData;\n\t\n\t\tif ( tr ) {\n\t\t\tvar id = settings.rowIdFn( data );\n\t\n\t\t\tif ( id ) {\n\t\t\t\ttr.id = id;\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowClass ) {\n\t\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t\t_unique( row.__rowc.concat( a ) ) :\n\t\t\t\t\ta;\n\t\n\t\t\t\t$(tr)\n\t\t\t\t\t.removeClass( row.__rowc.join(' ') )\n\t\t\t\t\t.addClass( data.DT_RowClass );\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowAttr ) {\n\t\t\t\t$(tr).attr( data.DT_RowAttr );\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowData ) {\n\t\t\t\t$(tr).data( data.DT_RowData );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Create the HTML header for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBuildHead( oSettings )\n\t{\n\t\tvar i, ien, cell, row, column;\n\t\tvar thead = oSettings.nTHead;\n\t\tvar tfoot = oSettings.nTFoot;\n\t\tvar createHeader = $('th, td', thead).length === 0;\n\t\tvar classes = oSettings.oClasses;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\tif ( createHeader ) {\n\t\t\trow = $('<tr/>').appendTo( thead );\n\t\t}\n\t\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\t\tcell = $( column.nTh ).addClass( column.sClass );\n\t\n\t\t\tif ( createHeader ) {\n\t\t\t\tcell.appendTo( row );\n\t\t\t}\n\t\n\t\t\t// 1.11 move into sorting\n\t\t\tif ( oSettings.oFeatures.bSort ) {\n\t\t\t\tcell.addClass( column.sSortingClass );\n\t\n\t\t\t\tif ( column.bSortable !== false ) {\n\t\t\t\t\tcell\n\t\t\t\t\t\t.attr( 'tabindex', oSettings.iTabIndex )\n\t\t\t\t\t\t.attr( 'aria-controls', oSettings.sTableId );\n\t\n\t\t\t\t\t_fnSortAttachListener( oSettings, column.nTh, i );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( column.sTitle != cell[0].innerHTML ) {\n\t\t\t\tcell.html( column.sTitle );\n\t\t\t}\n\t\n\t\t\t_fnRenderer( oSettings, 'header' )(\n\t\t\t\toSettings, cell, column, classes\n\t\t\t);\n\t\t}\n\t\n\t\tif ( createHeader ) {\n\t\t\t_fnDetectHeader( oSettings.aoHeader, thead );\n\t\t}\n\t\t\n\t\t/* ARIA role for the rows */\n\t \t$(thead).find('>tr').attr('role', 'row');\n\t\n\t\t/* Deal with the footer - add classes if required */\n\t\t$(thead).find('>tr>th, >tr>td').addClass( classes.sHeaderTH );\n\t\t$(tfoot).find('>tr>th, >tr>td').addClass( classes.sFooterTH );\n\t\n\t\t// Cache the footer cells. Note that we only take the cells from the first\n\t\t// row in the footer. If there is more than one row the user wants to\n\t\t// interact with, they need to use the table().foot() method. Note also this\n\t\t// allows cells to be used for multiple columns using colspan\n\t\tif ( tfoot !== null ) {\n\t\t\tvar cells = oSettings.aoFooter[0];\n\t\n\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\tcolumn = columns[i];\n\t\t\t\tcolumn.nTf = cells[i].cell;\n\t\n\t\t\t\tif ( column.sClass ) {\n\t\t\t\t\t$(column.nTf).addClass( column.sClass );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Draw the header (or footer) element based on the column visibility states. The\n\t * methodology here is to use the layout array from _fnDetectHeader, modified for\n\t * the instantaneous column visibility, to construct the new layout. The grid is\n\t * traversed over cell at a time in a rows x columns grid fashion, although each\n\t * cell insert can cover multiple elements in the grid - which is tracks using the\n\t * aApplied array. Cell inserts in the grid will only occur where there isn't\n\t * already a cell in that position.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param array {objects} aoSource Layout array from _fnDetectHeader\n\t *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDrawHead( oSettings, aoSource, bIncludeHidden )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, n, nLocalTr;\n\t\tvar aoLocal = [];\n\t\tvar aApplied = [];\n\t\tvar iColumns = oSettings.aoColumns.length;\n\t\tvar iRowspan, iColspan;\n\t\n\t\tif ( ! aoSource )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\tif (  bIncludeHidden === undefined )\n\t\t{\n\t\t\tbIncludeHidden = false;\n\t\t}\n\t\n\t\t/* Make a copy of the master layout array, but without the visible columns in it */\n\t\tfor ( i=0, iLen=aoSource.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taoLocal[i] = aoSource[i].slice();\n\t\t\taoLocal[i].nTr = aoSource[i].nTr;\n\t\n\t\t\t/* Remove any columns which are currently hidden */\n\t\t\tfor ( j=iColumns-1 ; j>=0 ; j-- )\n\t\t\t{\n\t\t\t\tif ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )\n\t\t\t\t{\n\t\t\t\t\taoLocal[i].splice( j, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Prep the applied array - it needs an element for each row */\n\t\t\taApplied.push( [] );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnLocalTr = aoLocal[i].nTr;\n\t\n\t\t\t/* All cells are going to be replaced, so empty out the row */\n\t\t\tif ( nLocalTr )\n\t\t\t{\n\t\t\t\twhile( (n = nLocalTr.firstChild) )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.removeChild( n );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tiRowspan = 1;\n\t\t\t\tiColspan = 1;\n\t\n\t\t\t\t/* Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t\t * insert point. If there is, then there is nothing to do.\n\t\t\t\t */\n\t\t\t\tif ( aApplied[i][j] === undefined )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.appendChild( aoLocal[i][j].cell );\n\t\t\t\t\taApplied[i][j] = 1;\n\t\n\t\t\t\t\t/* Expand the cell to cover as many rows as needed */\n\t\t\t\t\twhile ( aoLocal[i+iRowspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\taApplied[i+iRowspan][j] = 1;\n\t\t\t\t\t\tiRowspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Expand the cell to cover as many columns as needed */\n\t\t\t\t\twhile ( aoLocal[i][j+iColspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Must update the applied array over the rows for the columns */\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taApplied[i+k][j+iColspan] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tiColspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Do the actual expansion in the DOM */\n\t\t\t\t\t$(aoLocal[i][j].cell)\n\t\t\t\t\t\t.attr('rowspan', iRowspan)\n\t\t\t\t\t\t.attr('colspan', iColspan);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Insert the required TR nodes into the table for display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDraw( oSettings )\n\t{\n\t\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\t\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\t\tif ( $.inArray( false, aPreDraw ) !== -1 )\n\t\t{\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar i, iLen, n;\n\t\tvar anRows = [];\n\t\tvar iRowCount = 0;\n\t\tvar asStripeClasses = oSettings.asStripeClasses;\n\t\tvar iStripes = asStripeClasses.length;\n\t\tvar iOpenRows = oSettings.aoOpenRows.length;\n\t\tvar oLang = oSettings.oLanguage;\n\t\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\t\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\t\tvar aiDisplay = oSettings.aiDisplay;\n\t\n\t\toSettings.bDrawing = true;\n\t\n\t\t/* Check and see if we have an initial draw position from state saving */\n\t\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\n\t\t{\n\t\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\t\tiInitDisplayStart :\n\t\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t\t0 :\n\t\t\t\t\tiInitDisplayStart;\n\t\n\t\t\toSettings.iInitDisplayStart = -1;\n\t\t}\n\t\n\t\tvar iDisplayStart = oSettings._iDisplayStart;\n\t\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\t\n\t\t/* Server-side processing draw intercept */\n\t\tif ( oSettings.bDeferLoading )\n\t\t{\n\t\t\toSettings.bDeferLoading = false;\n\t\t\toSettings.iDraw++;\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t}\n\t\telse if ( !bServerSide )\n\t\t{\n\t\t\toSettings.iDraw++;\n\t\t}\n\t\telse if ( !oSettings.bDestroying && !_fnAjaxUpdate( oSettings ) )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( aiDisplay.length !== 0 )\n\t\t{\n\t\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\t\n\t\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t\t{\n\t\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\n\t\t\t\tif ( aoData.nTr === null )\n\t\t\t\t{\n\t\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\n\t\t\t\t}\n\t\n\t\t\t\tvar nRow = aoData.nTr;\n\t\n\t\t\t\t/* Remove the old striping classes and then add the new one */\n\t\t\t\tif ( iStripes !== 0 )\n\t\t\t\t{\n\t\t\t\t\tvar sStripe = asStripeClasses[ iRowCount % iStripes ];\n\t\t\t\t\tif ( aoData._sRowStripe != sStripe )\n\t\t\t\t\t{\n\t\t\t\t\t\t$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );\n\t\t\t\t\t\taoData._sRowStripe = sStripe;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t\t// useful?\n\t\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\n\t\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex] );\n\t\n\t\t\t\tanRows.push( nRow );\n\t\t\t\tiRowCount++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Table is empty - create a row with an empty message in it */\n\t\t\tvar sZero = oLang.sZeroRecords;\n\t\t\tif ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )\n\t\t\t{\n\t\t\t\tsZero = oLang.sLoadingRecords;\n\t\t\t}\n\t\t\telse if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )\n\t\t\t{\n\t\t\t\tsZero = oLang.sEmptyTable;\n\t\t\t}\n\t\n\t\t\tanRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )\n\t\t\t\t.append( $('<td />', {\n\t\t\t\t\t'valign':  'top',\n\t\t\t\t\t'colSpan': _fnVisbleColumns( oSettings ),\n\t\t\t\t\t'class':   oSettings.oClasses.sRowEmpty\n\t\t\t\t} ).html( sZero ) )[0];\n\t\t}\n\t\n\t\t/* Header and footer callbacks */\n\t\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\t\n\t\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\t\n\t\tvar body = $(oSettings.nTBody);\n\t\n\t\tbody.children().detach();\n\t\tbody.append( $(anRows) );\n\t\n\t\t/* Call all required callback functions for the end of a draw */\n\t\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );\n\t\n\t\t/* Draw is complete, sorting and filtering must be as well */\n\t\toSettings.bSorted = false;\n\t\toSettings.bFiltered = false;\n\t\toSettings.bDrawing = false;\n\t}\n\t\n\t\n\t/**\n\t * Redraw the table - taking account of the various features which are enabled\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {boolean} [holdPosition] Keep the current paging position. By default\n\t *    the paging is reset to the first page\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReDraw( settings, holdPosition )\n\t{\n\t\tvar\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tsort     = features.bSort,\n\t\t\tfilter   = features.bFilter;\n\t\n\t\tif ( sort ) {\n\t\t\t_fnSort( settings );\n\t\t}\n\t\n\t\tif ( filter ) {\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t}\n\t\telse {\n\t\t\t// No filtering, so we want to just use the display master\n\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\t}\n\t\n\t\tif ( holdPosition !== true ) {\n\t\t\tsettings._iDisplayStart = 0;\n\t\t}\n\t\n\t\t// Let any modules know about the draw hold position state (used by\n\t\t// scrolling internally)\n\t\tsettings._drawHold = holdPosition;\n\t\n\t\t_fnDraw( settings );\n\t\n\t\tsettings._drawHold = false;\n\t}\n\t\n\t\n\t/**\n\t * Add the options to the page HTML for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddOptionsHtml ( oSettings )\n\t{\n\t\tvar classes = oSettings.oClasses;\n\t\tvar table = $(oSettings.nTable);\n\t\tvar holding = $('<div/>').insertBefore( table ); // Holding element for speed\n\t\tvar features = oSettings.oFeatures;\n\t\n\t\t// All DataTables are wrapped in a div\n\t\tvar insert = $('<div/>', {\n\t\t\tid:      oSettings.sTableId+'_wrapper',\n\t\t\t'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)\n\t\t} );\n\t\n\t\toSettings.nHolding = holding[0];\n\t\toSettings.nTableWrapper = insert[0];\n\t\toSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n\t\n\t\t/* Loop over the user set positioning and place the elements as needed */\n\t\tvar aDom = oSettings.sDom.split('');\n\t\tvar featureNode, cOption, nNewNode, cNext, sAttr, j;\n\t\tfor ( var i=0 ; i<aDom.length ; i++ )\n\t\t{\n\t\t\tfeatureNode = null;\n\t\t\tcOption = aDom[i];\n\t\n\t\t\tif ( cOption == '<' )\n\t\t\t{\n\t\t\t\t/* New container div */\n\t\t\t\tnNewNode = $('<div/>')[0];\n\t\n\t\t\t\t/* Check to see if we should append an id and/or a class name to the container */\n\t\t\t\tcNext = aDom[i+1];\n\t\t\t\tif ( cNext == \"'\" || cNext == '\"' )\n\t\t\t\t{\n\t\t\t\t\tsAttr = \"\";\n\t\t\t\t\tj = 2;\n\t\t\t\t\twhile ( aDom[i+j] != cNext )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr += aDom[i+j];\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Replace jQuery UI constants @todo depreciated */\n\t\t\t\t\tif ( sAttr == \"H\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = classes.sJUIHeader;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr == \"F\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = classes.sJUIFooter;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t\t */\n\t\t\t\t\tif ( sAttr.indexOf('.') != -1 )\n\t\t\t\t\t{\n\t\t\t\t\t\tvar aSplit = sAttr.split('.');\n\t\t\t\t\t\tnNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);\n\t\t\t\t\t\tnNewNode.className = aSplit[1];\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr.charAt(0) == \"#\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.id = sAttr.substr(1, sAttr.length-1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.className = sAttr;\n\t\t\t\t\t}\n\t\n\t\t\t\t\ti += j; /* Move along the position array */\n\t\t\t\t}\n\t\n\t\t\t\tinsert.append( nNewNode );\n\t\t\t\tinsert = $(nNewNode);\n\t\t\t}\n\t\t\telse if ( cOption == '>' )\n\t\t\t{\n\t\t\t\t/* End container div */\n\t\t\t\tinsert = insert.parent();\n\t\t\t}\n\t\t\t// @todo Move options into their own plugins?\n\t\t\telse if ( cOption == 'l' && features.bPaginate && features.bLengthChange )\n\t\t\t{\n\t\t\t\t/* Length */\n\t\t\t\tfeatureNode = _fnFeatureHtmlLength( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'f' && features.bFilter )\n\t\t\t{\n\t\t\t\t/* Filter */\n\t\t\t\tfeatureNode = _fnFeatureHtmlFilter( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'r' && features.bProcessing )\n\t\t\t{\n\t\t\t\t/* pRocessing */\n\t\t\t\tfeatureNode = _fnFeatureHtmlProcessing( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 't' )\n\t\t\t{\n\t\t\t\t/* Table */\n\t\t\t\tfeatureNode = _fnFeatureHtmlTable( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption ==  'i' && features.bInfo )\n\t\t\t{\n\t\t\t\t/* Info */\n\t\t\t\tfeatureNode = _fnFeatureHtmlInfo( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'p' && features.bPaginate )\n\t\t\t{\n\t\t\t\t/* Pagination */\n\t\t\t\tfeatureNode = _fnFeatureHtmlPaginate( oSettings );\n\t\t\t}\n\t\t\telse if ( DataTable.ext.feature.length !== 0 )\n\t\t\t{\n\t\t\t\t/* Plug-in features */\n\t\t\t\tvar aoFeatures = DataTable.ext.feature;\n\t\t\t\tfor ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )\n\t\t\t\t{\n\t\t\t\t\tif ( cOption == aoFeatures[k].cFeature )\n\t\t\t\t\t{\n\t\t\t\t\t\tfeatureNode = aoFeatures[k].fnInit( oSettings );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Add to the 2D features array */\n\t\t\tif ( featureNode )\n\t\t\t{\n\t\t\t\tvar aanFeatures = oSettings.aanFeatures;\n\t\n\t\t\t\tif ( ! aanFeatures[cOption] )\n\t\t\t\t{\n\t\t\t\t\taanFeatures[cOption] = [];\n\t\t\t\t}\n\t\n\t\t\t\taanFeatures[cOption].push( featureNode );\n\t\t\t\tinsert.append( featureNode );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Built our DOM structure - replace the holding div with what we want */\n\t\tholding.replaceWith( insert );\n\t\toSettings.nHolding = null;\n\t}\n\t\n\t\n\t/**\n\t * Use the DOM source to create up an array of header cells. The idea here is to\n\t * create a layout grid (array) of rows x columns, which contains a reference\n\t * to the cell that that point in the grid (regardless of col/rowspan), such that\n\t * any column / row could be removed and the new grid constructed\n\t *  @param array {object} aLayout Array to store the calculated layout in\n\t *  @param {node} nThead The header/footer element for the table\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDetectHeader ( aLayout, nThead )\n\t{\n\t\tvar nTrs = $(nThead).children('tr');\n\t\tvar nTr, nCell;\n\t\tvar i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n\t\tvar bUnique;\n\t\tvar fnShiftCol = function ( a, i, j ) {\n\t\t\tvar k = a[i];\n\t                while ( k[j] ) {\n\t\t\t\tj++;\n\t\t\t}\n\t\t\treturn j;\n\t\t};\n\t\n\t\taLayout.splice( 0, aLayout.length );\n\t\n\t\t/* We know how many rows there are in the layout - so prep it */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taLayout.push( [] );\n\t\t}\n\t\n\t\t/* Calculate a layout array */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnTr = nTrs[i];\n\t\t\tiColumn = 0;\n\t\n\t\t\t/* For every cell in the row... */\n\t\t\tnCell = nTr.firstChild;\n\t\t\twhile ( nCell ) {\n\t\t\t\tif ( nCell.nodeName.toUpperCase() == \"TD\" ||\n\t\t\t\t     nCell.nodeName.toUpperCase() == \"TH\" )\n\t\t\t\t{\n\t\t\t\t\t/* Get the col and rowspan attributes from the DOM and sanitise them */\n\t\t\t\t\tiColspan = nCell.getAttribute('colspan') * 1;\n\t\t\t\t\tiRowspan = nCell.getAttribute('rowspan') * 1;\n\t\t\t\t\tiColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;\n\t\t\t\t\tiRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;\n\t\n\t\t\t\t\t/* There might be colspan cells already in this row, so shift our target\n\t\t\t\t\t * accordingly\n\t\t\t\t\t */\n\t\t\t\t\tiColShifted = fnShiftCol( aLayout, i, iColumn );\n\t\n\t\t\t\t\t/* Cache calculation for unique columns */\n\t\t\t\t\tbUnique = iColspan === 1 ? true : false;\n\t\n\t\t\t\t\t/* If there is col / rowspan, copy the information into the layout grid */\n\t\t\t\t\tfor ( l=0 ; l<iColspan ; l++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taLayout[i+k][iColShifted+l] = {\n\t\t\t\t\t\t\t\t\"cell\": nCell,\n\t\t\t\t\t\t\t\t\"unique\": bUnique\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\taLayout[i+k].nTr = nTr;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnCell = nCell.nextSibling;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Get an array of unique th elements, one for each column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nHeader automatically detect the layout from this node - optional\n\t *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n\t *  @returns array {node} aReturn list of unique th's\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetUniqueThs ( oSettings, nHeader, aLayout )\n\t{\n\t\tvar aReturn = [];\n\t\tif ( !aLayout )\n\t\t{\n\t\t\taLayout = oSettings.aoHeader;\n\t\t\tif ( nHeader )\n\t\t\t{\n\t\t\t\taLayout = [];\n\t\t\t\t_fnDetectHeader( aLayout, nHeader );\n\t\t\t}\n\t\t}\n\t\n\t\tfor ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tfor ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tif ( aLayout[i][j].unique &&\n\t\t\t\t\t (!aReturn[j] || !oSettings.bSortCellsTop) )\n\t\t\t\t{\n\t\t\t\t\taReturn[j] = aLayout[i][j].cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn aReturn;\n\t}\n\t\n\t/**\n\t * Create an Ajax call based on the table's settings, taking into account that\n\t * parameters can have multiple forms, and backwards compatibility.\n\t *\n\t * @param {object} oSettings dataTables settings object\n\t * @param {array} data Data to send to the server, required by\n\t *     DataTables - may be augmented by developer callbacks\n\t * @param {function} fn Callback function to run when data is obtained\n\t */\n\tfunction _fnBuildAjax( oSettings, data, fn )\n\t{\n\t\t// Compatibility with 1.9-, allow fnServerData and event to manipulate\n\t\t_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );\n\t\n\t\t// Convert to object based for 1.10+ if using the old array scheme which can\n\t\t// come from server-side processing or serverParams\n\t\tif ( data && $.isArray(data) ) {\n\t\t\tvar tmp = {};\n\t\t\tvar rbracket = /(.*?)\\[\\]$/;\n\t\n\t\t\t$.each( data, function (key, val) {\n\t\t\t\tvar match = val.name.match(rbracket);\n\t\n\t\t\t\tif ( match ) {\n\t\t\t\t\t// Support for arrays\n\t\t\t\t\tvar name = match[0];\n\t\n\t\t\t\t\tif ( ! tmp[ name ] ) {\n\t\t\t\t\t\ttmp[ name ] = [];\n\t\t\t\t\t}\n\t\t\t\t\ttmp[ name ].push( val.value );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttmp[val.name] = val.value;\n\t\t\t\t}\n\t\t\t} );\n\t\t\tdata = tmp;\n\t\t}\n\t\n\t\tvar ajaxData;\n\t\tvar ajax = oSettings.ajax;\n\t\tvar instance = oSettings.oInstance;\n\t\tvar callback = function ( json ) {\n\t\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );\n\t\t\tfn( json );\n\t\t};\n\t\n\t\tif ( $.isPlainObject( ajax ) && ajax.data )\n\t\t{\n\t\t\tajaxData = ajax.data;\n\t\n\t\t\tvar newData = typeof ajaxData === 'function' ?\n\t\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\n\t\t\t\tajaxData;                      // an object object or array to merge\n\t\n\t\t\t// If the function returned something, use that alone\n\t\t\tdata = typeof ajaxData === 'function' && newData ?\n\t\t\t\tnewData :\n\t\t\t\t$.extend( true, data, newData );\n\t\n\t\t\t// Remove the data property as we've resolved it already and don't want\n\t\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\t\tdelete ajax.data;\n\t\t}\n\t\n\t\tvar baseAjax = {\n\t\t\t\"data\": data,\n\t\t\t\"success\": function (json) {\n\t\t\t\tvar error = json.error || json.sError;\n\t\t\t\tif ( error ) {\n\t\t\t\t\t_fnLog( oSettings, 0, error );\n\t\t\t\t}\n\t\n\t\t\t\toSettings.json = json;\n\t\t\t\tcallback( json );\n\t\t\t},\n\t\t\t\"dataType\": \"json\",\n\t\t\t\"cache\": false,\n\t\t\t\"type\": oSettings.sServerMethod,\n\t\t\t\"error\": function (xhr, error, thrown) {\n\t\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );\n\t\n\t\t\t\tif ( $.inArray( true, ret ) === -1 ) {\n\t\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( xhr.readyState === 4 ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\t}\n\t\t};\n\t\n\t\t// Store the data submitted for the API\n\t\toSettings.oAjaxData = data;\n\t\n\t\t// Allow plug-ins and external processes to modify the data\n\t\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );\n\t\n\t\tif ( oSettings.fnServerData )\n\t\t{\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.fnServerData.call( instance,\n\t\t\t\toSettings.sAjaxSource,\n\t\t\t\t$.map( data, function (val, key) { // Need to convert back to 1.9 trad format\n\t\t\t\t\treturn { name: key, value: val };\n\t\t\t\t} ),\n\t\t\t\tcallback,\n\t\t\t\toSettings\n\t\t\t);\n\t\t}\n\t\telse if ( oSettings.sAjaxSource || typeof ajax === 'string' )\n\t\t{\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, {\n\t\t\t\turl: ajax || oSettings.sAjaxSource\n\t\t\t} ) );\n\t\t}\n\t\telse if ( typeof ajax === 'function' )\n\t\t{\n\t\t\t// Is a function - let the caller define what needs to be done\n\t\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Object to extend the base settings\n\t\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );\n\t\n\t\t\t// Restore for next time around\n\t\t\tajax.data = ajaxData;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Update the table using an Ajax call\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {boolean} Block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdate( settings )\n\t{\n\t\tif ( settings.bAjaxDataGet ) {\n\t\t\tsettings.iDraw++;\n\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t_fnBuildAjax(\n\t\t\t\tsettings,\n\t\t\t\t_fnAjaxParameters( settings ),\n\t\t\t\tfunction(json) {\n\t\t\t\t\t_fnAjaxUpdateDraw( settings, json );\n\t\t\t\t}\n\t\t\t);\n\t\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t\n\t\n\t/**\n\t * Build up the parameters in an object needed for a server-side processing\n\t * request. Note that this is basically done twice, is different ways - a modern\n\t * method which is used by default in DataTables 1.10 which uses objects and\n\t * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n\t * the sAjaxSource option is used in the initialisation, or the legacyAjax\n\t * option is set.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {bool} block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxParameters( settings )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tcolumnCount = columns.length,\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tpreSearch = settings.oPreviousSearch,\n\t\t\tpreColSearch = settings.aoPreSearchCols,\n\t\t\ti, data = [], dataProp, column, columnSearch,\n\t\t\tsort = _fnSortFlatten( settings ),\n\t\t\tdisplayStart = settings._iDisplayStart,\n\t\t\tdisplayLength = features.bPaginate !== false ?\n\t\t\t\tsettings._iDisplayLength :\n\t\t\t\t-1;\n\t\n\t\tvar param = function ( name, value ) {\n\t\t\tdata.push( { 'name': name, 'value': value } );\n\t\t};\n\t\n\t\t// DataTables 1.9- compatible method\n\t\tparam( 'sEcho',          settings.iDraw );\n\t\tparam( 'iColumns',       columnCount );\n\t\tparam( 'sColumns',       _pluck( columns, 'sName' ).join(',') );\n\t\tparam( 'iDisplayStart',  displayStart );\n\t\tparam( 'iDisplayLength', displayLength );\n\t\n\t\t// DataTables 1.10+ method\n\t\tvar d = {\n\t\t\tdraw:    settings.iDraw,\n\t\t\tcolumns: [],\n\t\t\torder:   [],\n\t\t\tstart:   displayStart,\n\t\t\tlength:  displayLength,\n\t\t\tsearch:  {\n\t\t\t\tvalue: preSearch.sSearch,\n\t\t\t\tregex: preSearch.bRegex\n\t\t\t}\n\t\t};\n\t\n\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\t\tcolumnSearch = preColSearch[i];\n\t\t\tdataProp = typeof column.mData==\"function\" ? 'function' : column.mData ;\n\t\n\t\t\td.columns.push( {\n\t\t\t\tdata:       dataProp,\n\t\t\t\tname:       column.sName,\n\t\t\t\tsearchable: column.bSearchable,\n\t\t\t\torderable:  column.bSortable,\n\t\t\t\tsearch:     {\n\t\t\t\t\tvalue: columnSearch.sSearch,\n\t\t\t\t\tregex: columnSearch.bRegex\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\tparam( \"mDataProp_\"+i, dataProp );\n\t\n\t\t\tif ( features.bFilter ) {\n\t\t\t\tparam( 'sSearch_'+i,     columnSearch.sSearch );\n\t\t\t\tparam( 'bRegex_'+i,      columnSearch.bRegex );\n\t\t\t\tparam( 'bSearchable_'+i, column.bSearchable );\n\t\t\t}\n\t\n\t\t\tif ( features.bSort ) {\n\t\t\t\tparam( 'bSortable_'+i, column.bSortable );\n\t\t\t}\n\t\t}\n\t\n\t\tif ( features.bFilter ) {\n\t\t\tparam( 'sSearch', preSearch.sSearch );\n\t\t\tparam( 'bRegex', preSearch.bRegex );\n\t\t}\n\t\n\t\tif ( features.bSort ) {\n\t\t\t$.each( sort, function ( i, val ) {\n\t\t\t\td.order.push( { column: val.col, dir: val.dir } );\n\t\n\t\t\t\tparam( 'iSortCol_'+i, val.col );\n\t\t\t\tparam( 'sSortDir_'+i, val.dir );\n\t\t\t} );\n\t\n\t\t\tparam( 'iSortingCols', sort.length );\n\t\t}\n\t\n\t\t// If the legacy.ajax parameter is null, then we automatically decide which\n\t\t// form to use, based on sAjaxSource\n\t\tvar legacy = DataTable.ext.legacy.ajax;\n\t\tif ( legacy === null ) {\n\t\t\treturn settings.sAjaxSource ? data : d;\n\t\t}\n\t\n\t\t// Otherwise, if legacy has been specified then we use that to decide on the\n\t\t// form\n\t\treturn legacy ? data : d;\n\t}\n\t\n\t\n\t/**\n\t * Data the data from the server (nuking the old) and redraw the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} json json data return from the server.\n\t *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n\t *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n\t *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n\t *  @param {array} json.aaData The data to display on this page\n\t *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdateDraw ( settings, json )\n\t{\n\t\t// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n\t\t// Support both\n\t\tvar compat = function ( old, modern ) {\n\t\t\treturn json[old] !== undefined ? json[old] : json[modern];\n\t\t};\n\t\n\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\tvar draw            = compat( 'sEcho',                'draw' );\n\t\tvar recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );\n\t\tvar recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );\n\t\n\t\tif ( draw ) {\n\t\t\t// Protect against out of sequence returns\n\t\t\tif ( draw*1 < settings.iDraw ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsettings.iDraw = draw * 1;\n\t\t}\n\t\n\t\t_fnClearTable( settings );\n\t\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\n\t\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\t\n\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t_fnAddData( settings, data[i] );\n\t\t}\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\n\t\tsettings.bAjaxDataGet = false;\n\t\t_fnDraw( settings );\n\t\n\t\tif ( ! settings._bInitComplete ) {\n\t\t\t_fnInitComplete( settings, json );\n\t\t}\n\t\n\t\tsettings.bAjaxDataGet = true;\n\t\t_fnProcessingDisplay( settings, false );\n\t}\n\t\n\t\n\t/**\n\t * Get the data from the JSON data source to use for drawing a table. Using\n\t * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n\t * source object, or from a processing function.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param  {object} json Data source object / array from the server\n\t *  @return {array} Array of data to use\n\t */\n\tfunction _fnAjaxDataSrc ( oSettings, json )\n\t{\n\t\tvar dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?\n\t\t\toSettings.ajax.dataSrc :\n\t\t\toSettings.sAjaxDataProp; // Compatibility with 1.9-.\n\t\n\t\t// Compatibility with 1.9-. In order to read from aaData, check if the\n\t\t// default has been changed, if not, check for aaData\n\t\tif ( dataSrc === 'data' ) {\n\t\t\treturn json.aaData || json[dataSrc];\n\t\t}\n\t\n\t\treturn dataSrc !== \"\" ?\n\t\t\t_fnGetObjectDataFn( dataSrc )( json ) :\n\t\t\tjson;\n\t}\n\t\n\t/**\n\t * Generate the node required for filtering text\n\t *  @returns {node} Filter control element\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlFilter ( settings )\n\t{\n\t\tvar classes = settings.oClasses;\n\t\tvar tableId = settings.sTableId;\n\t\tvar language = settings.oLanguage;\n\t\tvar previousSearch = settings.oPreviousSearch;\n\t\tvar features = settings.aanFeatures;\n\t\tvar input = '<input type=\"search\" class=\"'+classes.sFilterInput+'\"/>';\n\t\n\t\tvar str = language.sSearch;\n\t\tstr = str.match(/_INPUT_/) ?\n\t\t\tstr.replace('_INPUT_', input) :\n\t\t\tstr+input;\n\t\n\t\tvar filter = $('<div/>', {\n\t\t\t\t'id': ! features.f ? tableId+'_filter' : null,\n\t\t\t\t'class': classes.sFilter\n\t\t\t} )\n\t\t\t.append( $('<label/>' ).append( str ) );\n\t\n\t\tvar searchFn = function() {\n\t\t\t/* Update all other filter input elements for the new display */\n\t\t\tvar n = features.f;\n\t\t\tvar val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\n\t\n\t\t\t/* Now do the filter */\n\t\t\tif ( val != previousSearch.sSearch ) {\n\t\t\t\t_fnFilterComplete( settings, {\n\t\t\t\t\t\"sSearch\": val,\n\t\t\t\t\t\"bRegex\": previousSearch.bRegex,\n\t\t\t\t\t\"bSmart\": previousSearch.bSmart ,\n\t\t\t\t\t\"bCaseInsensitive\": previousSearch.bCaseInsensitive\n\t\t\t\t} );\n\t\n\t\t\t\t// Need to redraw, without resorting\n\t\t\t\tsettings._iDisplayStart = 0;\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t};\n\t\n\t\tvar searchDelay = settings.searchDelay !== null ?\n\t\t\tsettings.searchDelay :\n\t\t\t_fnDataSource( settings ) === 'ssp' ?\n\t\t\t\t400 :\n\t\t\t\t0;\n\t\n\t\tvar jqFilter = $('input', filter)\n\t\t\t.val( previousSearch.sSearch )\n\t\t\t.attr( 'placeholder', language.sSearchPlaceholder )\n\t\t\t.on(\n\t\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\t\tsearchDelay ?\n\t\t\t\t\t_fnThrottle( searchFn, searchDelay ) :\n\t\t\t\t\tsearchFn\n\t\t\t)\n\t\t\t.on( 'keypress.DT', function(e) {\n\t\t\t\t/* Prevent form submission */\n\t\t\t\tif ( e.keyCode == 13 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.attr('aria-controls', tableId);\n\t\n\t\t// Update the input elements whenever the table is filtered\n\t\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\n\t\t\tif ( settings === s ) {\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame...\n\t\t\t\ttry {\n\t\t\t\t\tif ( jqFilter[0] !== document.activeElement ) {\n\t\t\t\t\t\tjqFilter.val( previousSearch.sSearch );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch ( e ) {}\n\t\t\t}\n\t\t} );\n\t\n\t\treturn filter[0];\n\t}\n\t\n\t\n\t/**\n\t * Filter the table using both the global filter and column based filtering\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oSearch search information\n\t *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterComplete ( oSettings, oInput, iForce )\n\t{\n\t\tvar oPrevSearch = oSettings.oPreviousSearch;\n\t\tvar aoPrevSearch = oSettings.aoPreSearchCols;\n\t\tvar fnSaveFilter = function ( oFilter ) {\n\t\t\t/* Save the filtering values */\n\t\t\toPrevSearch.sSearch = oFilter.sSearch;\n\t\t\toPrevSearch.bRegex = oFilter.bRegex;\n\t\t\toPrevSearch.bSmart = oFilter.bSmart;\n\t\t\toPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n\t\t};\n\t\tvar fnRegex = function ( o ) {\n\t\t\t// Backwards compatibility with the bEscapeRegex option\n\t\t\treturn o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n\t\t};\n\t\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo As per sort - can this be moved into an event handler?\n\t\t_fnColumnTypes( oSettings );\n\t\n\t\t/* In server-side processing all filtering is done by the server, so no point hanging around here */\n\t\tif ( _fnDataSource( oSettings ) != 'ssp' )\n\t\t{\n\t\t\t/* Global filter */\n\t\t\t_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive );\n\t\t\tfnSaveFilter( oInput );\n\t\n\t\t\t/* Now do the individual column filter */\n\t\t\tfor ( var i=0 ; i<aoPrevSearch.length ; i++ )\n\t\t\t{\n\t\t\t\t_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\n\t\t\t\t\taoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );\n\t\t\t}\n\t\n\t\t\t/* Custom filtering */\n\t\t\t_fnFilterCustom( oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfnSaveFilter( oInput );\n\t\t}\n\t\n\t\t/* Tell the draw function we have been filtering */\n\t\toSettings.bFiltered = true;\n\t\t_fnCallbackFire( oSettings, null, 'search', [oSettings] );\n\t}\n\t\n\t\n\t/**\n\t * Apply custom filtering functions\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCustom( settings )\n\t{\n\t\tvar filters = DataTable.ext.search;\n\t\tvar displayRows = settings.aiDisplay;\n\t\tvar row, rowIdx;\n\t\n\t\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\n\t\t\tvar rows = [];\n\t\n\t\t\t// Loop over each row and see if it should be included\n\t\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\n\t\t\t\trowIdx = displayRows[ j ];\n\t\t\t\trow = settings.aoData[ rowIdx ];\n\t\n\t\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\n\t\t\t\t\trows.push( rowIdx );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// So the array reference doesn't break set the results into the\n\t\t\t// existing array\n\t\t\tdisplayRows.length = 0;\n\t\t\t$.merge( displayRows, rows );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Filter the table on a per-column basis\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sInput string to filter on\n\t *  @param {int} iColumn column to filter\n\t *  @param {bool} bRegex treat search string as a regular expression or not\n\t *  @param {bool} bSmart use smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insenstive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )\n\t{\n\t\tif ( searchStr === '' ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar data;\n\t\tvar out = [];\n\t\tvar display = settings.aiDisplay;\n\t\tvar rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );\n\t\n\t\tfor ( var i=0 ; i<display.length ; i++ ) {\n\t\t\tdata = settings.aoData[ display[i] ]._aFilterData[ colIdx ];\n\t\n\t\t\tif ( rpSearch.test( data ) ) {\n\t\t\t\tout.push( display[i] );\n\t\t\t}\n\t\t}\n\t\n\t\tsettings.aiDisplay = out;\n\t}\n\t\n\t\n\t/**\n\t * Filter the data table based on user input and draw the table\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} input string to filter on\n\t *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n\t *  @param {bool} regex treat as a regular expression or not\n\t *  @param {bool} smart perform smart filtering or not\n\t *  @param {bool} caseInsensitive Do case insenstive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilter( settings, input, force, regex, smart, caseInsensitive )\n\t{\n\t\tvar rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );\n\t\tvar prevSearch = settings.oPreviousSearch.sSearch;\n\t\tvar displayMaster = settings.aiDisplayMaster;\n\t\tvar display, invalidated, i;\n\t\tvar filtered = [];\n\t\n\t\t// Need to take account of custom filtering functions - always filter\n\t\tif ( DataTable.ext.search.length !== 0 ) {\n\t\t\tforce = true;\n\t\t}\n\t\n\t\t// Check if any of the rows were invalidated\n\t\tinvalidated = _fnFilterData( settings );\n\t\n\t\t// If the input is blank - we just want the full data set\n\t\tif ( input.length <= 0 ) {\n\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t}\n\t\telse {\n\t\t\t// New search - start from the master array\n\t\t\tif ( invalidated ||\n\t\t\t\t force ||\n\t\t\t\t prevSearch.length > input.length ||\n\t\t\t\t input.indexOf(prevSearch) !== 0 ||\n\t\t\t\t settings.bSorted // On resort, the display master needs to be\n\t\t\t\t                  // re-filtered since indexes will have changed\n\t\t\t) {\n\t\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t\t}\n\t\n\t\t\t// Search the display array\n\t\t\tdisplay = settings.aiDisplay;\n\t\n\t\t\tfor ( i=0 ; i<display.length ; i++ ) {\n\t\t\t\tif ( rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {\n\t\t\t\t\tfiltered.push( display[i] );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tsettings.aiDisplay = filtered;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Build a regular expression object suitable for searching a table\n\t *  @param {string} sSearch string to search for\n\t *  @param {bool} bRegex treat as a regular expression or not\n\t *  @param {bool} bSmart perform smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n\t *  @returns {RegExp} constructed object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCreateSearch( search, regex, smart, caseInsensitive )\n\t{\n\t\tsearch = regex ?\n\t\t\tsearch :\n\t\t\t_fnEscapeRegex( search );\n\t\t\n\t\tif ( smart ) {\n\t\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t\t * order is important - a la google. So this is what we want to\n\t\t\t * generate:\n\t\t\t * \n\t\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t\t */\n\t\t\tvar a = $.map( search.match( /\"[^\"]+\"|[^ ]+/g ) || [''], function ( word ) {\n\t\t\t\tif ( word.charAt(0) === '\"' ) {\n\t\t\t\t\tvar m = word.match( /^\"(.*)\"$/ );\n\t\t\t\t\tword = m ? m[1] : word;\n\t\t\t\t}\n\t\n\t\t\t\treturn word.replace('\"', '');\n\t\t\t} );\n\t\n\t\t\tsearch = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';\n\t\t}\n\t\n\t\treturn new RegExp( search, caseInsensitive ? 'i' : '' );\n\t}\n\t\n\t\n\t/**\n\t * Escape a string such that it can be used in a regular expression\n\t *  @param {string} sVal string to escape\n\t *  @returns {string} escaped string\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnEscapeRegex = DataTable.util.escapeRegex;\n\t\n\tvar __filter_div = $('<div>')[0];\n\tvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\t\n\t// Update the filtering data for each row if needed (by invalidation or first run)\n\tfunction _fnFilterData ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar column;\n\t\tvar i, j, ien, jen, filterData, cellData, row;\n\t\tvar fomatters = DataTable.ext.type.search;\n\t\tvar wasInvalidated = false;\n\t\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\trow = settings.aoData[i];\n\t\n\t\t\tif ( ! row._aFilterData ) {\n\t\t\t\tfilterData = [];\n\t\n\t\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\n\t\t\t\t\tcolumn = columns[j];\n\t\n\t\t\t\t\tif ( column.bSearchable ) {\n\t\t\t\t\t\tcellData = _fnGetCellData( settings, i, j, 'filter' );\n\t\n\t\t\t\t\t\tif ( fomatters[ column.sType ] ) {\n\t\t\t\t\t\t\tcellData = fomatters[ column.sType ]( cellData );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Search in DataTables 1.10 is string based. In 1.11 this\n\t\t\t\t\t\t// should be altered to also allow strict type checking.\n\t\t\t\t\t\tif ( cellData === null ) {\n\t\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\n\t\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t\t// method used here is much faster http://jsperf.com/html-decode\n\t\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\n\t\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( cellData.replace ) {\n\t\t\t\t\t\tcellData = cellData.replace(/[\\r\\n]/g, '');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfilterData.push( cellData );\n\t\t\t\t}\n\t\n\t\t\t\trow._aFilterData = filterData;\n\t\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\t\twasInvalidated = true;\n\t\t\t}\n\t\t}\n\t\n\t\treturn wasInvalidated;\n\t}\n\t\n\t\n\t/**\n\t * Convert from the internal Hungarian notation to camelCase for external\n\t * interaction\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToCamel ( obj )\n\t{\n\t\treturn {\n\t\t\tsearch:          obj.sSearch,\n\t\t\tsmart:           obj.bSmart,\n\t\t\tregex:           obj.bRegex,\n\t\t\tcaseInsensitive: obj.bCaseInsensitive\n\t\t};\n\t}\n\t\n\t\n\t\n\t/**\n\t * Convert from camelCase notation to the internal Hungarian. We could use the\n\t * Hungarian convert function here, but this is cleaner\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToHung ( obj )\n\t{\n\t\treturn {\n\t\t\tsSearch:          obj.search,\n\t\t\tbSmart:           obj.smart,\n\t\t\tbRegex:           obj.regex,\n\t\t\tbCaseInsensitive: obj.caseInsensitive\n\t\t};\n\t}\n\t\n\t/**\n\t * Generate the node required for the info display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Information element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlInfo ( settings )\n\t{\n\t\tvar\n\t\t\ttid = settings.sTableId,\n\t\t\tnodes = settings.aanFeatures.i,\n\t\t\tn = $('<div/>', {\n\t\t\t\t'class': settings.oClasses.sInfo,\n\t\t\t\t'id': ! nodes ? tid+'_info' : null\n\t\t\t} );\n\t\n\t\tif ( ! nodes ) {\n\t\t\t// Update display on each draw\n\t\t\tsettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": _fnUpdateInfo,\n\t\t\t\t\"sName\": \"information\"\n\t\t\t} );\n\t\n\t\t\tn\n\t\t\t\t.attr( 'role', 'status' )\n\t\t\t\t.attr( 'aria-live', 'polite' );\n\t\n\t\t\t// Table is described by our info div\n\t\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\n\t\t}\n\t\n\t\treturn n[0];\n\t}\n\t\n\t\n\t/**\n\t * Update the information elements in the display\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnUpdateInfo ( settings )\n\t{\n\t\t/* Show information about the table */\n\t\tvar nodes = settings.aanFeatures.i;\n\t\tif ( nodes.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\tlang  = settings.oLanguage,\n\t\t\tstart = settings._iDisplayStart+1,\n\t\t\tend   = settings.fnDisplayEnd(),\n\t\t\tmax   = settings.fnRecordsTotal(),\n\t\t\ttotal = settings.fnRecordsDisplay(),\n\t\t\tout   = total ?\n\t\t\t\tlang.sInfo :\n\t\t\t\tlang.sInfoEmpty;\n\t\n\t\tif ( total !== max ) {\n\t\t\t/* Record set after filtering */\n\t\t\tout += ' ' + lang.sInfoFiltered;\n\t\t}\n\t\n\t\t// Convert the macros\n\t\tout += lang.sInfoPostFix;\n\t\tout = _fnInfoMacros( settings, out );\n\t\n\t\tvar callback = lang.fnInfoCallback;\n\t\tif ( callback !== null ) {\n\t\t\tout = callback.call( settings.oInstance,\n\t\t\t\tsettings, start, end, max, total, out\n\t\t\t);\n\t\t}\n\t\n\t\t$(nodes).html( out );\n\t}\n\t\n\t\n\tfunction _fnInfoMacros ( settings, str )\n\t{\n\t\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n\t\t// internally\n\t\tvar\n\t\t\tformatter  = settings.fnFormatNumber,\n\t\t\tstart      = settings._iDisplayStart+1,\n\t\t\tlen        = settings._iDisplayLength,\n\t\t\tvis        = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1;\n\t\n\t\treturn str.\n\t\t\treplace(/_START_/g, formatter.call( settings, start ) ).\n\t\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\n\t\t\treplace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).\n\t\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\n\t\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\n\t\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );\n\t}\n\t\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitialise ( settings )\n\t{\n\t\tvar i, iLen, iAjaxStart=settings.iInitDisplayStart;\n\t\tvar columns = settings.aoColumns, column;\n\t\tvar features = settings.oFeatures;\n\t\tvar deferLoading = settings.bDeferLoading; // value modified by the draw\n\t\n\t\t/* Ensure that the table data is fully initialised */\n\t\tif ( ! settings.bInitialised ) {\n\t\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\n\t\t\treturn;\n\t\t}\n\t\n\t\t/* Show the display HTML options */\n\t\t_fnAddOptionsHtml( settings );\n\t\n\t\t/* Build and draw the header / footer for the table */\n\t\t_fnBuildHead( settings );\n\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t/* Okay to show that something is going on now */\n\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t/* Calculate sizes for columns */\n\t\tif ( features.bAutoWidth ) {\n\t\t\t_fnCalculateColumnWidths( settings );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=columns.length ; i<iLen ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\n\t\t\tif ( column.sWidth ) {\n\t\t\t\tcolumn.nTh.style.width = _fnStringToCss( column.sWidth );\n\t\t\t}\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'preInit', [settings] );\n\t\n\t\t// If there is default sorting required - let's do it. The sort function\n\t\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t\t// data (show 'loading' message possibly)\n\t\t_fnReDraw( settings );\n\t\n\t\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\t\tvar dataSrc = _fnDataSource( settings );\n\t\tif ( dataSrc != 'ssp' || deferLoading ) {\n\t\t\t// if there is an ajax source load the data\n\t\t\tif ( dataSrc == 'ajax' ) {\n\t\t\t\t_fnBuildAjax( settings, [], function(json) {\n\t\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\n\t\n\t\t\t\t\t// Got the data - add it to the table\n\t\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( settings, aData[i] );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t\t// it appear 'fresh'\n\t\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\t\n\t\t\t\t\t_fnReDraw( settings );\n\t\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t_fnInitComplete( settings, json );\n\t\t\t\t}, settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t_fnInitComplete( settings );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n\t *    with client-side processing (optional)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitComplete ( settings, json )\n\t{\n\t\tsettings._bInitComplete = true;\n\t\n\t\t// When data was added after the initialisation (data or Ajax) we need to\n\t\t// calculate the column sizing\n\t\tif ( json || settings.oInit.aaData ) {\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );\n\t\t_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );\n\t}\n\t\n\t\n\tfunction _fnLengthChange ( settings, val )\n\t{\n\t\tvar len = parseInt( val, 10 );\n\t\tsettings._iDisplayLength = len;\n\t\n\t\t_fnLengthOverflow( settings );\n\t\n\t\t// Fire length change event\n\t\t_fnCallbackFire( settings, null, 'length', [settings, len] );\n\t}\n\t\n\t\n\t/**\n\t * Generate the node required for user display length changing\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Display length feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlLength ( settings )\n\t{\n\t\tvar\n\t\t\tclasses  = settings.oClasses,\n\t\t\ttableId  = settings.sTableId,\n\t\t\tmenu     = settings.aLengthMenu,\n\t\t\td2       = $.isArray( menu[0] ),\n\t\t\tlengths  = d2 ? menu[0] : menu,\n\t\t\tlanguage = d2 ? menu[1] : menu;\n\t\n\t\tvar select = $('<select/>', {\n\t\t\t'name':          tableId+'_length',\n\t\t\t'aria-controls': tableId,\n\t\t\t'class':         classes.sLengthSelect\n\t\t} );\n\t\n\t\tfor ( var i=0, ien=lengths.length ; i<ien ; i++ ) {\n\t\t\tselect[0][ i ] = new Option(\n\t\t\t\ttypeof language[i] === 'number' ?\n\t\t\t\t\tsettings.fnFormatNumber( language[i] ) :\n\t\t\t\t\tlanguage[i],\n\t\t\t\tlengths[i]\n\t\t\t);\n\t\t}\n\t\n\t\tvar div = $('<div><label/></div>').addClass( classes.sLength );\n\t\tif ( ! settings.aanFeatures.l ) {\n\t\t\tdiv[0].id = tableId+'_length';\n\t\t}\n\t\n\t\tdiv.children().append(\n\t\t\tsettings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )\n\t\t);\n\t\n\t\t// Can't use `select` variable as user might provide their own and the\n\t\t// reference is broken by the use of outerHTML\n\t\t$('select', div)\n\t\t\t.val( settings._iDisplayLength )\n\t\t\t.on( 'change.DT', function(e) {\n\t\t\t\t_fnLengthChange( settings, $(this).val() );\n\t\t\t\t_fnDraw( settings );\n\t\t\t} );\n\t\n\t\t// Update node value whenever anything changes the table's length\n\t\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\n\t\t\tif ( settings === s ) {\n\t\t\t\t$('select', div).val( len );\n\t\t\t}\n\t\t} );\n\t\n\t\treturn div[0];\n\t}\n\t\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Note that most of the paging logic is done in\n\t * DataTable.ext.pager\n\t */\n\t\n\t/**\n\t * Generate the node required for default pagination\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Pagination feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlPaginate ( settings )\n\t{\n\t\tvar\n\t\t\ttype   = settings.sPaginationType,\n\t\t\tplugin = DataTable.ext.pager[ type ],\n\t\t\tmodern = typeof plugin === 'function',\n\t\t\tredraw = function( settings ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t},\n\t\t\tnode = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],\n\t\t\tfeatures = settings.aanFeatures;\n\t\n\t\tif ( ! modern ) {\n\t\t\tplugin.fnInit( settings, node, redraw );\n\t\t}\n\t\n\t\t/* Add a draw callback for the pagination on first instance, to update the paging display */\n\t\tif ( ! features.p )\n\t\t{\n\t\t\tnode.id = settings.sTableId+'_paginate';\n\t\n\t\t\tsettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": function( settings ) {\n\t\t\t\t\tif ( modern ) {\n\t\t\t\t\t\tvar\n\t\t\t\t\t\t\tstart      = settings._iDisplayStart,\n\t\t\t\t\t\t\tlen        = settings._iDisplayLength,\n\t\t\t\t\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\t\t\t\t\tall        = len === -1,\n\t\t\t\t\t\t\tpage = all ? 0 : Math.ceil( start / len ),\n\t\t\t\t\t\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\t\t\t\tbuttons = plugin(page, pages),\n\t\t\t\t\t\t\ti, ien;\n\t\n\t\t\t\t\t\tfor ( i=0, ien=features.p.length ; i<ien ; i++ ) {\n\t\t\t\t\t\t\t_fnRenderer( settings, 'pageButton' )(\n\t\t\t\t\t\t\t\tsettings, features.p[i], i, buttons, page, pages\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tplugin.fnUpdate( settings, redraw );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"sName\": \"pagination\"\n\t\t\t} );\n\t\t}\n\t\n\t\treturn node;\n\t}\n\t\n\t\n\t/**\n\t * Alter the display settings to change the page\n\t *  @param {object} settings DataTables settings object\n\t *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n\t *    \"next\" or \"last\" or page number to jump to (integer)\n\t *  @param [bool] redraw Automatically draw the update or not\n\t *  @returns {bool} true page has changed, false - no change\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnPageChange ( settings, action, redraw )\n\t{\n\t\tvar\n\t\t\tstart     = settings._iDisplayStart,\n\t\t\tlen       = settings._iDisplayLength,\n\t\t\trecords   = settings.fnRecordsDisplay();\n\t\n\t\tif ( records === 0 || len === -1 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( typeof action === \"number\" )\n\t\t{\n\t\t\tstart = action * len;\n\t\n\t\t\tif ( start > records )\n\t\t\t{\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"first\" )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( action == \"previous\" )\n\t\t{\n\t\t\tstart = len >= 0 ?\n\t\t\t\tstart - len :\n\t\t\t\t0;\n\t\n\t\t\tif ( start < 0 )\n\t\t\t{\n\t\t\t  start = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"next\" )\n\t\t{\n\t\t\tif ( start + len < records )\n\t\t\t{\n\t\t\t\tstart += len;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"last\" )\n\t\t{\n\t\t\tstart = Math.floor( (records-1) / len) * len;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\n\t\t}\n\t\n\t\tvar changed = settings._iDisplayStart !== start;\n\t\tsettings._iDisplayStart = start;\n\t\n\t\tif ( changed ) {\n\t\t\t_fnCallbackFire( settings, null, 'page', [settings] );\n\t\n\t\t\tif ( redraw ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t}\n\t\n\t\treturn changed;\n\t}\n\t\n\t\n\t\n\t/**\n\t * Generate the node required for the processing node\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Processing element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlProcessing ( settings )\n\t{\n\t\treturn $('<div/>', {\n\t\t\t\t'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,\n\t\t\t\t'class': settings.oClasses.sProcessing\n\t\t\t} )\n\t\t\t.html( settings.oLanguage.sProcessing )\n\t\t\t.insertBefore( settings.nTable )[0];\n\t}\n\t\n\t\n\t/**\n\t * Display or hide the processing indicator\n\t *  @param {object} settings dataTables settings object\n\t *  @param {bool} show Show the processing indicator (true) or not (false)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnProcessingDisplay ( settings, show )\n\t{\n\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\n\t}\n\t\n\t/**\n\t * Add any control elements for the table - specifically scrolling\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Node to add to the DOM\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlTable ( settings )\n\t{\n\t\tvar table = $(settings.nTable);\n\t\n\t\t// Add the ARIA grid role to the table\n\t\ttable.attr( 'role', 'grid' );\n\t\n\t\t// Scrolling from here on in\n\t\tvar scroll = settings.oScroll;\n\t\n\t\tif ( scroll.sX === '' && scroll.sY === '' ) {\n\t\t\treturn settings.nTable;\n\t\t}\n\t\n\t\tvar scrollX = scroll.sX;\n\t\tvar scrollY = scroll.sY;\n\t\tvar classes = settings.oClasses;\n\t\tvar caption = table.children('caption');\n\t\tvar captionSide = caption.length ? caption[0]._captionSide : null;\n\t\tvar headerClone = $( table[0].cloneNode(false) );\n\t\tvar footerClone = $( table[0].cloneNode(false) );\n\t\tvar footer = table.children('tfoot');\n\t\tvar _div = '<div/>';\n\t\tvar size = function ( s ) {\n\t\t\treturn !s ? null : _fnStringToCss( s );\n\t\t};\n\t\n\t\tif ( ! footer.length ) {\n\t\t\tfooter = null;\n\t\t}\n\t\n\t\t/*\n\t\t * The HTML structure that we want to generate in this function is:\n\t\t *  div - scroller\n\t\t *    div - scroll head\n\t\t *      div - scroll head inner\n\t\t *        table - scroll head table\n\t\t *          thead - thead\n\t\t *    div - scroll body\n\t\t *      table - table (master table)\n\t\t *        thead - thead clone for sizing\n\t\t *        tbody - tbody\n\t\t *    div - scroll foot\n\t\t *      div - scroll foot inner\n\t\t *        table - scroll foot table\n\t\t *          tfoot - tfoot\n\t\t */\n\t\tvar scroller = $( _div, { 'class': classes.sScrollWrapper } )\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollHead } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.sScrollHeadInner } )\n\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollBody } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\t\twidth: size( scrollX )\n\t\t\t\t\t} )\n\t\t\t\t\t.append( table )\n\t\t\t);\n\t\n\t\tif ( footer ) {\n\t\t\tscroller.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollFoot } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.sScrollFootInner } )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\n\t\tvar children = scroller.children();\n\t\tvar scrollHead = children[0];\n\t\tvar scrollBody = children[1];\n\t\tvar scrollFoot = footer ? children[2] : null;\n\t\n\t\t// When the body is scrolled, then we also want to scroll the headers\n\t\tif ( scrollX ) {\n\t\t\t$(scrollBody).on( 'scroll.DT', function (e) {\n\t\t\t\tvar scrollLeft = this.scrollLeft;\n\t\n\t\t\t\tscrollHead.scrollLeft = scrollLeft;\n\t\n\t\t\t\tif ( footer ) {\n\t\t\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\n\t\t$(scrollBody).css(\n\t\t\tscrollY && scroll.bCollapse ? 'max-height' : 'height', \n\t\t\tscrollY\n\t\t);\n\t\n\t\tsettings.nScrollHead = scrollHead;\n\t\tsettings.nScrollBody = scrollBody;\n\t\tsettings.nScrollFoot = scrollFoot;\n\t\n\t\t// On redraw - align columns\n\t\tsettings.aoDrawCallback.push( {\n\t\t\t\"fn\": _fnScrollDraw,\n\t\t\t\"sName\": \"scrolling\"\n\t\t} );\n\t\n\t\treturn scroller[0];\n\t}\n\t\n\t\n\t\n\t/**\n\t * Update the header, footer and body tables for resizing - i.e. column\n\t * alignment.\n\t *\n\t * Welcome to the most horrible function DataTables. The process that this\n\t * function follows is basically:\n\t *   1. Re-create the table inside the scrolling div\n\t *   2. Take live measurements from the DOM\n\t *   3. Apply the measurements to align the columns\n\t *   4. Clean up\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnScrollDraw ( settings )\n\t{\n\t\t// Given that this is such a monster function, a lot of variables are use\n\t\t// to try and keep the minimised size as small as possible\n\t\tvar\n\t\t\tscroll         = settings.oScroll,\n\t\t\tscrollX        = scroll.sX,\n\t\t\tscrollXInner   = scroll.sXInner,\n\t\t\tscrollY        = scroll.sY,\n\t\t\tbarWidth       = scroll.iBarWidth,\n\t\t\tdivHeader      = $(settings.nScrollHead),\n\t\t\tdivHeaderStyle = divHeader[0].style,\n\t\t\tdivHeaderInner = divHeader.children('div'),\n\t\t\tdivHeaderInnerStyle = divHeaderInner[0].style,\n\t\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\t\tdivBodyEl      = settings.nScrollBody,\n\t\t\tdivBody        = $(divBodyEl),\n\t\t\tdivBodyStyle   = divBodyEl.style,\n\t\t\tdivFooter      = $(settings.nScrollFoot),\n\t\t\tdivFooterInner = divFooter.children('div'),\n\t\t\tdivFooterTable = divFooterInner.children('table'),\n\t\t\theader         = $(settings.nTHead),\n\t\t\ttable          = $(settings.nTable),\n\t\t\ttableEl        = table[0],\n\t\t\ttableStyle     = tableEl.style,\n\t\t\tfooter         = settings.nTFoot ? $(settings.nTFoot) : null,\n\t\t\tbrowser        = settings.oBrowser,\n\t\t\tie67           = browser.bScrollOversize,\n\t\t\tdtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),\n\t\t\theaderTrgEls, footerTrgEls,\n\t\t\theaderSrcEls, footerSrcEls,\n\t\t\theaderCopy, footerCopy,\n\t\t\theaderWidths=[], footerWidths=[],\n\t\t\theaderContent=[], footerContent=[],\n\t\t\tidx, correction, sanityWidth,\n\t\t\tzeroOut = function(nSizer) {\n\t\t\t\tvar style = nSizer.style;\n\t\t\t\tstyle.paddingTop = \"0\";\n\t\t\t\tstyle.paddingBottom = \"0\";\n\t\t\t\tstyle.borderTopWidth = \"0\";\n\t\t\t\tstyle.borderBottomWidth = \"0\";\n\t\t\t\tstyle.height = 0;\n\t\t\t};\n\t\n\t\t// If the scrollbar visibility has changed from the last draw, we need to\n\t\t// adjust the column sizes as the table width will have changed to account\n\t\t// for the scrollbar\n\t\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\t\t\n\t\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t\treturn; // adjust column sizing will call this function again\n\t\t}\n\t\telse {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t}\n\t\n\t\t/*\n\t\t * 1. Re-create the table inside the scrolling div\n\t\t */\n\t\n\t\t// Remove the old minimised thead and tfoot elements in the inner table\n\t\ttable.children('thead, tfoot').remove();\n\t\n\t\tif ( footer ) {\n\t\t\tfooterCopy = footer.clone().prependTo( table );\n\t\t\tfooterTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\n\t\t\tfooterSrcEls = footerCopy.find('tr');\n\t\t}\n\t\n\t\t// Clone the current header and footer elements and then place it into the inner table\n\t\theaderCopy = header.clone().prependTo( table );\n\t\theaderTrgEls = header.find('tr'); // original header is in its own table\n\t\theaderSrcEls = headerCopy.find('tr');\n\t\theaderCopy.find('th, td').removeAttr('tabindex');\n\t\n\t\n\t\t/*\n\t\t * 2. Take live measurements from the DOM - do not alter the DOM itself!\n\t\t */\n\t\n\t\t// Remove old sizing and apply the calculated column widths\n\t\t// Get the unique column headers in the newly created (cloned) header. We want to apply the\n\t\t// calculated sizes to this header\n\t\tif ( ! scrollX )\n\t\t{\n\t\t\tdivBodyStyle.width = '100%';\n\t\t\tdivHeader[0].style.width = '100%';\n\t\t}\n\t\n\t\t$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {\n\t\t\tidx = _fnVisibleToColumnIndex( settings, i );\n\t\t\tel.style.width = settings.aoColumns[idx].sWidth;\n\t\t} );\n\t\n\t\tif ( footer ) {\n\t\t\t_fnApplyToChildren( function(n) {\n\t\t\t\tn.style.width = \"\";\n\t\t\t}, footerSrcEls );\n\t\t}\n\t\n\t\t// Size the table as a whole\n\t\tsanityWidth = table.outerWidth();\n\t\tif ( scrollX === \"\" ) {\n\t\t\t// No x scrolling\n\t\t\ttableStyle.width = \"100%\";\n\t\n\t\t\t// IE7 will make the width of the table when 100% include the scrollbar\n\t\t\t// - which is shouldn't. When there is a scrollbar we need to take this\n\t\t\t// into account.\n\t\t\tif ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);\n\t\t\t}\n\t\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t}\n\t\telse if ( scrollXInner !== \"\" ) {\n\t\t\t// legacy x scroll inner has been given - use it\n\t\t\ttableStyle.width = _fnStringToCss(scrollXInner);\n\t\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t}\n\t\n\t\t// Hidden header should have zero height, so remove padding and borders. Then\n\t\t// set the width based on the real headers\n\t\n\t\t// Apply all styles in one pass\n\t\t_fnApplyToChildren( zeroOut, headerSrcEls );\n\t\n\t\t// Read all widths in next pass\n\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\theaderContent.push( nSizer.innerHTML );\n\t\t\theaderWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t}, headerSrcEls );\n\t\n\t\t// Apply all widths in final pass\n\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\t// Only apply widths to the DataTables detected header cells - this\n\t\t\t// prevents complex headers from having contradictory sizes applied\n\t\t\tif ( $.inArray( nToSize, dtHeaderCells ) !== -1 ) {\n\t\t\t\tnToSize.style.width = headerWidths[i];\n\t\t\t}\n\t\t}, headerTrgEls );\n\t\n\t\t$(headerSrcEls).height(0);\n\t\n\t\t/* Same again with the footer if we have one */\n\t\tif ( footer )\n\t\t{\n\t\t\t_fnApplyToChildren( zeroOut, footerSrcEls );\n\t\n\t\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\t\tfooterContent.push( nSizer.innerHTML );\n\t\t\t\tfooterWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t\t}, footerSrcEls );\n\t\n\t\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\t\tnToSize.style.width = footerWidths[i];\n\t\t\t}, footerTrgEls );\n\t\n\t\t\t$(footerSrcEls).height(0);\n\t\t}\n\t\n\t\n\t\t/*\n\t\t * 3. Apply the measurements\n\t\t */\n\t\n\t\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t\t// the content of the cell so that the width applied to the header and body\n\t\t// both match, but we want to hide it completely. We want to also fix their\n\t\t// width to what they currently are\n\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+headerContent[i]+'</div>';\n\t\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\t\tnSizer.style.width = headerWidths[i];\n\t\t}, headerSrcEls );\n\t\n\t\tif ( footer )\n\t\t{\n\t\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+footerContent[i]+'</div>';\n\t\t\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\t\t\tnSizer.style.width = footerWidths[i];\n\t\t\t}, footerSrcEls );\n\t\t}\n\t\n\t\t// Sanity check that the table is of a sensible width. If not then we are going to get\n\t\t// misalignment - try to prevent this by not allowing the table to shrink below its min width\n\t\tif ( table.outerWidth() < sanityWidth )\n\t\t{\n\t\t\t// The min width depends upon if we have a vertical scrollbar visible or not */\n\t\t\tcorrection = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")) ?\n\t\t\t\t\tsanityWidth+barWidth :\n\t\t\t\t\tsanityWidth;\n\t\n\t\t\t// IE6/7 are a law unto themselves...\n\t\t\tif ( ie67 && (divBodyEl.scrollHeight >\n\t\t\t\tdivBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss( correction-barWidth );\n\t\t\t}\n\t\n\t\t\t// And give the user a warning that we've stopped the table getting too small\n\t\t\tif ( scrollX === \"\" || scrollXInner !== \"\" ) {\n\t\t\t\t_fnLog( settings, 1, 'Possible column misalignment', 6 );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcorrection = '100%';\n\t\t}\n\t\n\t\t// Apply to the container elements\n\t\tdivBodyStyle.width = _fnStringToCss( correction );\n\t\tdivHeaderStyle.width = _fnStringToCss( correction );\n\t\n\t\tif ( footer ) {\n\t\t\tsettings.nScrollFoot.style.width = _fnStringToCss( correction );\n\t\t}\n\t\n\t\n\t\t/*\n\t\t * 4. Clean up\n\t\t */\n\t\tif ( ! scrollY ) {\n\t\t\t/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n\t\t\t * the scrollbar height from the visible display, rather than adding it on. We need to\n\t\t\t * set the height in order to sort this. Don't want to do it in any other browsers.\n\t\t\t */\n\t\t\tif ( ie67 ) {\n\t\t\t\tdivBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Finally set the width's of the header and footer tables */\n\t\tvar iOuterWidth = table.outerWidth();\n\t\tdivHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\tdivHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );\n\t\n\t\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\t\tvar bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\t\tvar padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n\t\tdivHeaderInnerStyle[ padding ] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t\n\t\tif ( footer ) {\n\t\t\tdivFooterTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\t\tdivFooterInner[0].style.width = _fnStringToCss( iOuterWidth );\n\t\t\tdivFooterInner[0].style[padding] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t\t}\n\t\n\t\t// Correct DOM ordering for colgroup - comes before the thead\n\t\ttable.children('colgroup').insertBefore( table.children('thead') );\n\t\n\t\t/* Adjust the position of the header in case we loose the y-scrollbar */\n\t\tdivBody.scroll();\n\t\n\t\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t\t// only if we aren't holding the position\n\t\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\n\t\t\tdivBodyEl.scrollTop = 0;\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Apply a given function to the display child nodes of an element array (typically\n\t * TD children of TR rows\n\t *  @param {function} fn Method to apply to the objects\n\t *  @param array {nodes} an1 List of elements to look through for display children\n\t *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyToChildren( fn, an1, an2 )\n\t{\n\t\tvar index=0, i=0, iLen=an1.length;\n\t\tvar nNode1, nNode2;\n\t\n\t\twhile ( i < iLen ) {\n\t\t\tnNode1 = an1[i].firstChild;\n\t\t\tnNode2 = an2 ? an2[i].firstChild : null;\n\t\n\t\t\twhile ( nNode1 ) {\n\t\t\t\tif ( nNode1.nodeType === 1 ) {\n\t\t\t\t\tif ( an2 ) {\n\t\t\t\t\t\tfn( nNode1, nNode2, index );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfn( nNode1, index );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\n\t\t\t\tnNode1 = nNode1.nextSibling;\n\t\t\t\tnNode2 = an2 ? nNode2.nextSibling : null;\n\t\t\t}\n\t\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\t\n\t\n\tvar __re_html_remove = /<.*?>/g;\n\t\n\t\n\t/**\n\t * Calculate the width of columns for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCalculateColumnWidths ( oSettings )\n\t{\n\t\tvar\n\t\t\ttable = oSettings.nTable,\n\t\t\tcolumns = oSettings.aoColumns,\n\t\t\tscroll = oSettings.oScroll,\n\t\t\tscrollY = scroll.sY,\n\t\t\tscrollX = scroll.sX,\n\t\t\tscrollXInner = scroll.sXInner,\n\t\t\tcolumnCount = columns.length,\n\t\t\tvisibleColumns = _fnGetColumns( oSettings, 'bVisible' ),\n\t\t\theaderCells = $('th', oSettings.nTHead),\n\t\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\n\t\t\ttableContainer = table.parentNode,\n\t\t\tuserInputs = false,\n\t\t\ti, column, columnIdx, width, outerWidth,\n\t\t\tbrowser = oSettings.oBrowser,\n\t\t\tie67 = browser.bScrollOversize;\n\t\n\t\tvar styleWidth = table.style.width;\n\t\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\n\t\t\ttableWidthAttr = styleWidth;\n\t\t}\n\t\n\t\t/* Convert any user input sizes into pixel sizes */\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\tcolumn = columns[ visibleColumns[i] ];\n\t\n\t\t\tif ( column.sWidth !== null ) {\n\t\t\t\tcolumn.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );\n\t\n\t\t\t\tuserInputs = true;\n\t\t\t}\n\t\t}\n\t\n\t\t/* If the number of columns in the DOM equals the number that we have to\n\t\t * process in DataTables, then we can use the offsets that are created by\n\t\t * the web- browser. No custom sizes can be set in order for this to happen,\n\t\t * nor scrolling used\n\t\t */\n\t\tif ( ie67 || ! userInputs && ! scrollX && ! scrollY &&\n\t\t     columnCount == _fnVisbleColumns( oSettings ) &&\n\t\t     columnCount == headerCells.length\n\t\t) {\n\t\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\t\tvar colIdx = _fnVisibleToColumnIndex( oSettings, i );\n\t\n\t\t\t\tif ( colIdx !== null ) {\n\t\t\t\t\tcolumns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Otherwise construct a single row, worst case, table with the widest\n\t\t\t// node in the data, assign any user defined widths, then insert it into\n\t\t\t// the DOM and allow the browser to do all the hard work of calculating\n\t\t\t// table widths\n\t\t\tvar tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\n\t\t\t\t.css( 'visibility', 'hidden' )\n\t\t\t\t.removeAttr( 'id' );\n\t\n\t\t\t// Clean up the table body\n\t\t\ttmpTable.find('tbody tr').remove();\n\t\t\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\n\t\n\t\t\t// Clone the table header and footer - we can't use the header / footer\n\t\t\t// from the cloned table, since if scrolling is active, the table's\n\t\t\t// real header and footer are contained in different table tags\n\t\t\ttmpTable.find('thead, tfoot').remove();\n\t\t\ttmpTable\n\t\t\t\t.append( $(oSettings.nTHead).clone() )\n\t\t\t\t.append( $(oSettings.nTFoot).clone() );\n\t\n\t\t\t// Remove any assigned widths from the footer (from scrolling)\n\t\t\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\t\n\t\t\t// Apply custom sizing to the cloned header\n\t\t\theaderCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );\n\t\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tcolumn = columns[ visibleColumns[i] ];\n\t\n\t\t\t\theaderCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\n\t\t\t\t\t_fnStringToCss( column.sWidthOrig ) :\n\t\t\t\t\t'';\n\t\n\t\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t\t// width the column requires, then it will have no effect\n\t\t\t\tif ( column.sWidthOrig && scrollX ) {\n\t\t\t\t\t$( headerCells[i] ).append( $('<div/>').css( {\n\t\t\t\t\t\twidth: column.sWidthOrig,\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\theight: 1\n\t\t\t\t\t} ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Find the widest cell for each column and put it into the table\n\t\t\tif ( oSettings.aoData.length ) {\n\t\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\t\tcolumnIdx = visibleColumns[i];\n\t\t\t\t\tcolumn = columns[ columnIdx ];\n\t\n\t\t\t\t\t$( _fnGetWidestNode( oSettings, columnIdx ) )\n\t\t\t\t\t\t.clone( false )\n\t\t\t\t\t\t.append( column.sContentPadding )\n\t\t\t\t\t\t.appendTo( tr );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Tidy the temporary table - remove name attributes so there aren't\n\t\t\t// duplicated in the dom (radio elements for example)\n\t\t\t$('[name]', tmpTable).removeAttr('name');\n\t\n\t\t\t// Table has been built, attach to the document so we can work with it.\n\t\t\t// A holding element is used, positioned at the top of the container\n\t\t\t// with minimal height, so it has no effect on if the container scrolls\n\t\t\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t\t\t// needed\n\t\t\tvar holder = $('<div/>').css( scrollX || scrollY ?\n\t\t\t\t\t{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\theight: 1,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t} :\n\t\t\t\t\t{}\n\t\t\t\t)\n\t\t\t\t.append( tmpTable )\n\t\t\t\t.appendTo( tableContainer );\n\t\n\t\t\t// When scrolling (X or Y) we want to set the width of the table as \n\t\t\t// appropriate. However, when not scrolling leave the table width as it\n\t\t\t// is. This results in slightly different, but I think correct behaviour\n\t\t\tif ( scrollX && scrollXInner ) {\n\t\t\t\ttmpTable.width( scrollXInner );\n\t\t\t}\n\t\t\telse if ( scrollX ) {\n\t\t\t\ttmpTable.css( 'width', 'auto' );\n\t\t\t\ttmpTable.removeAttr('width');\n\t\n\t\t\t\t// If there is no width attribute or style, then allow the table to\n\t\t\t\t// collapse\n\t\t\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\n\t\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( scrollY ) {\n\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t}\n\t\t\telse if ( tableWidthAttr ) {\n\t\t\t\ttmpTable.width( tableWidthAttr );\n\t\t\t}\n\t\n\t\t\t// Get the width of each column in the constructed table - we need to\n\t\t\t// know the inner width (so it can be assigned to the other table's\n\t\t\t// cells) and the outer width so we can calculate the full width of the\n\t\t\t// table. This is safe since DataTables requires a unique cell for each\n\t\t\t// column, but if ever a header can span multiple columns, this will\n\t\t\t// need to be modified.\n\t\t\tvar total = 0;\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tvar cell = $(headerCells[i]);\n\t\t\t\tvar border = cell.outerWidth() - cell.width();\n\t\n\t\t\t\t// Use getBounding... where possible (not IE8-) because it can give\n\t\t\t\t// sub-pixel accuracy, which we then want to round up!\n\t\t\t\tvar bounding = browser.bBounding ?\n\t\t\t\t\tMath.ceil( headerCells[i].getBoundingClientRect().width ) :\n\t\t\t\t\tcell.outerWidth();\n\t\n\t\t\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t\t\t// of the table might not equal the total given here (IE!).\n\t\t\t\ttotal += bounding;\n\t\n\t\t\t\t// Width for each column to use\n\t\t\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );\n\t\t\t}\n\t\n\t\t\ttable.style.width = _fnStringToCss( total );\n\t\n\t\t\t// Finished with the table - ditch it\n\t\t\tholder.remove();\n\t\t}\n\t\n\t\t// If there is a width attr, we want to attach an event listener which\n\t\t// allows the table sizing to automatically adjust when the window is\n\t\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t\t// CSS is a relative value or absolute - DOM read is always px.\n\t\tif ( tableWidthAttr ) {\n\t\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\n\t\t}\n\t\n\t\tif ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {\n\t\t\tvar bindResize = function () {\n\t\t\t\t$(window).on('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {\n\t\t\t\t\t_fnAdjustColumnSizing( oSettings );\n\t\t\t\t} ) );\n\t\t\t};\n\t\n\t\t\t// IE6/7 will crash if we bind a resize event handler on page load.\n\t\t\t// To be removed in 1.11 which drops IE6/7 support\n\t\t\tif ( ie67 ) {\n\t\t\t\tsetTimeout( bindResize, 1000 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbindResize();\n\t\t\t}\n\t\n\t\t\toSettings._reszEvt = true;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Throttle the calls to a function. Arguments and context are maintained for\n\t * the throttled function\n\t *  @param {function} fn Function to be called\n\t *  @param {int} [freq=200] call frequency in mS\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnThrottle = DataTable.util.throttle;\n\t\n\t\n\t/**\n\t * Convert a CSS unit width to pixels (e.g. 2em)\n\t *  @param {string} width width to be converted\n\t *  @param {node} parent parent to get the with for (required for relative widths) - optional\n\t *  @returns {int} width in pixels\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnConvertToWidth ( width, parent )\n\t{\n\t\tif ( ! width ) {\n\t\t\treturn 0;\n\t\t}\n\t\n\t\tvar n = $('<div/>')\n\t\t\t.css( 'width', _fnStringToCss( width ) )\n\t\t\t.appendTo( parent || document.body );\n\t\n\t\tvar val = n[0].offsetWidth;\n\t\tn.remove();\n\t\n\t\treturn val;\n\t}\n\t\n\t\n\t/**\n\t * Get the widest node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {node} widest table node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetWidestNode( settings, colIdx )\n\t{\n\t\tvar idx = _fnGetMaxLenString( settings, colIdx );\n\t\tif ( idx < 0 ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tvar data = settings.aoData[ idx ];\n\t\treturn ! data.nTr ? // Might not have been created when deferred rendering\n\t\t\t$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :\n\t\t\tdata.anCells[ colIdx ];\n\t}\n\t\n\t\n\t/**\n\t * Get the maximum strlen for each data column\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {string} max string length for each column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetMaxLenString( settings, colIdx )\n\t{\n\t\tvar s, max=-1, maxIdx = -1;\n\t\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\ts = _fnGetCellData( settings, i, colIdx, 'display' )+'';\n\t\t\ts = s.replace( __re_html_remove, '' );\n\t\t\ts = s.replace( /&nbsp;/g, ' ' );\n\t\n\t\t\tif ( s.length > max ) {\n\t\t\t\tmax = s.length;\n\t\t\t\tmaxIdx = i;\n\t\t\t}\n\t\t}\n\t\n\t\treturn maxIdx;\n\t}\n\t\n\t\n\t/**\n\t * Append a CSS unit (only if required) to a string\n\t *  @param {string} value to css-ify\n\t *  @returns {string} value with css unit\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnStringToCss( s )\n\t{\n\t\tif ( s === null ) {\n\t\t\treturn '0px';\n\t\t}\n\t\n\t\tif ( typeof s == 'number' ) {\n\t\t\treturn s < 0 ?\n\t\t\t\t'0px' :\n\t\t\t\ts+'px';\n\t\t}\n\t\n\t\t// Check it has a unit character already\n\t\treturn s.match(/\\d$/) ?\n\t\t\ts+'px' :\n\t\t\ts;\n\t}\n\t\n\t\n\t\n\tfunction _fnSortFlatten ( settings )\n\t{\n\t\tvar\n\t\t\ti, iLen, k, kLen,\n\t\t\taSort = [],\n\t\t\taiOrig = [],\n\t\t\taoColumns = settings.aoColumns,\n\t\t\taDataSort, iCol, sType, srcCol,\n\t\t\tfixed = settings.aaSortingFixed,\n\t\t\tfixedObj = $.isPlainObject( fixed ),\n\t\t\tnestedSort = [],\n\t\t\tadd = function ( a ) {\n\t\t\t\tif ( a.length && ! $.isArray( a[0] ) ) {\n\t\t\t\t\t// 1D array\n\t\t\t\t\tnestedSort.push( a );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// 2D array\n\t\t\t\t\t$.merge( nestedSort, a );\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t\t// specified\n\t\tif ( $.isArray( fixed ) ) {\n\t\t\tadd( fixed );\n\t\t}\n\t\n\t\tif ( fixedObj && fixed.pre ) {\n\t\t\tadd( fixed.pre );\n\t\t}\n\t\n\t\tadd( settings.aaSorting );\n\t\n\t\tif (fixedObj && fixed.post ) {\n\t\t\tadd( fixed.post );\n\t\t}\n\t\n\t\tfor ( i=0 ; i<nestedSort.length ; i++ )\n\t\t{\n\t\t\tsrcCol = nestedSort[i][0];\n\t\t\taDataSort = aoColumns[ srcCol ].aDataSort;\n\t\n\t\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t\t{\n\t\t\t\tiCol = aDataSort[k];\n\t\t\t\tsType = aoColumns[ iCol ].sType || 'string';\n\t\n\t\t\t\tif ( nestedSort[i]._idx === undefined ) {\n\t\t\t\t\tnestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );\n\t\t\t\t}\n\t\n\t\t\t\taSort.push( {\n\t\t\t\t\tsrc:       srcCol,\n\t\t\t\t\tcol:       iCol,\n\t\t\t\t\tdir:       nestedSort[i][1],\n\t\t\t\t\tindex:     nestedSort[i]._idx,\n\t\t\t\t\ttype:      sType,\n\t\t\t\t\tformatter: DataTable.ext.type.order[ sType+\"-pre\" ]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\n\t\treturn aSort;\n\t}\n\t\n\t/**\n\t * Change the order of the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t *  @todo This really needs split up!\n\t */\n\tfunction _fnSort ( oSettings )\n\t{\n\t\tvar\n\t\t\ti, ien, iLen, j, jLen, k, kLen,\n\t\t\tsDataType, nTh,\n\t\t\taiOrig = [],\n\t\t\toExtSort = DataTable.ext.type.order,\n\t\t\taoData = oSettings.aoData,\n\t\t\taoColumns = oSettings.aoColumns,\n\t\t\taDataSort, data, iCol, sType, oSort,\n\t\t\tformatters = 0,\n\t\t\tsortCol,\n\t\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\t\taSort;\n\t\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo Can this be moved into a 'data-ready' handler which is called when\n\t\t//   data is going to be used in the table?\n\t\t_fnColumnTypes( oSettings );\n\t\n\t\taSort = _fnSortFlatten( oSettings );\n\t\n\t\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\n\t\t\tsortCol = aSort[i];\n\t\n\t\t\t// Track if we can use the fast sort algorithm\n\t\t\tif ( sortCol.formatter ) {\n\t\t\t\tformatters++;\n\t\t\t}\n\t\n\t\t\t// Load the data needed for the sort, for each cell\n\t\t\t_fnSortData( oSettings, sortCol.col );\n\t\t}\n\t\n\t\t/* No sorting required if server-side or no sorting array */\n\t\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\n\t\t{\n\t\t\t// Create a value - key array of the current row positions such that we can use their\n\t\t\t// current position during the sort, if values match, in order to perform stable sorting\n\t\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\n\t\t\t\taiOrig[ displayMaster[i] ] = i;\n\t\t\t}\n\t\n\t\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t\t *  fnLocalSorting = function(a,b){\n\t\t\t *    var iTest;\n\t\t\t *    iTest = oSort['string-asc']('data11', 'data12');\n\t\t\t *      if (iTest !== 0)\n\t\t\t *        return iTest;\n\t\t\t *    iTest = oSort['numeric-desc']('data21', 'data22');\n\t\t\t *    if (iTest !== 0)\n\t\t\t *      return iTest;\n\t\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t\t *  }\n\t\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t\t * positions in the original data array to provide a stable sort.\n\t\t\t *\n\t\t\t * Note - I know it seems excessive to have two sorting methods, but the first is around\n\t\t\t * 15% faster, so the second is only maintained for backwards compatibility with sorting\n\t\t\t * methods which do not have a pre-sort formatting function.\n\t\t\t */\n\t\t\tif ( formatters === aSort.length ) {\n\t\t\t\t// All sort types have formatting functions\n\t\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, test, sort,\n\t\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\t\n\t\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\t\tsort = aSort[k];\n\t\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\t\n\t\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Depreciated - remove in 1.11 (providing a plug-in option)\n\t\t\t\t// Not all sort types have formatting methods, so we have to call their sorting\n\t\t\t\t// methods.\n\t\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, l, test, sort, fn,\n\t\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\t\n\t\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\t\tsort = aSort[k];\n\t\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\t\n\t\t\t\t\t\tfn = oExtSort[ sort.type+\"-\"+sort.dir ] || oExtSort[ \"string-\"+sort.dir ];\n\t\t\t\t\t\ttest = fn( x, y );\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Tell the draw function that we have sorted the data */\n\t\toSettings.bSorted = true;\n\t}\n\t\n\t\n\tfunction _fnSortAria ( settings )\n\t{\n\t\tvar label;\n\t\tvar nextSort;\n\t\tvar columns = settings.aoColumns;\n\t\tvar aSort = _fnSortFlatten( settings );\n\t\tvar oAria = settings.oLanguage.oAria;\n\t\n\t\t// ARIA attributes - need to loop all columns, to update all (removing old\n\t\t// attributes as needed)\n\t\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar col = columns[i];\n\t\t\tvar asSorting = col.asSorting;\n\t\t\tvar sTitle = col.sTitle.replace( /<.*?>/g, \"\" );\n\t\t\tvar th = col.nTh;\n\t\n\t\t\t// IE7 is throwing an error when setting these properties with jQuery's\n\t\t\t// attr() and removeAttr() methods...\n\t\t\tth.removeAttribute('aria-sort');\n\t\n\t\t\t/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n\t\t\tif ( col.bSortable ) {\n\t\t\t\tif ( aSort.length > 0 && aSort[0].col == i ) {\n\t\t\t\t\tth.setAttribute('aria-sort', aSort[0].dir==\"asc\" ? \"ascending\" : \"descending\" );\n\t\t\t\t\tnextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnextSort = asSorting[0];\n\t\t\t\t}\n\t\n\t\t\t\tlabel = sTitle + ( nextSort === \"asc\" ?\n\t\t\t\t\toAria.sSortAscending :\n\t\t\t\t\toAria.sSortDescending\n\t\t\t\t);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlabel = sTitle;\n\t\t\t}\n\t\n\t\t\tth.setAttribute('aria-label', label);\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Function to run on user sort request\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {boolean} [append=false] Append the requested sort to the existing\n\t *    sort if true (i.e. multi-column sort)\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortListener ( settings, colIdx, append, callback )\n\t{\n\t\tvar col = settings.aoColumns[ colIdx ];\n\t\tvar sorting = settings.aaSorting;\n\t\tvar asSorting = col.asSorting;\n\t\tvar nextSortIdx;\n\t\tvar next = function ( a, overflow ) {\n\t\t\tvar idx = a._idx;\n\t\t\tif ( idx === undefined ) {\n\t\t\t\tidx = $.inArray( a[1], asSorting );\n\t\t\t}\n\t\n\t\t\treturn idx+1 < asSorting.length ?\n\t\t\t\tidx+1 :\n\t\t\t\toverflow ?\n\t\t\t\t\tnull :\n\t\t\t\t\t0;\n\t\t};\n\t\n\t\t// Convert to 2D array if needed\n\t\tif ( typeof sorting[0] === 'number' ) {\n\t\t\tsorting = settings.aaSorting = [ sorting ];\n\t\t}\n\t\n\t\t// If appending the sort then we are multi-column sorting\n\t\tif ( append && settings.oFeatures.bSortMulti ) {\n\t\t\t// Are we already doing some kind of sort on this column?\n\t\t\tvar sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );\n\t\n\t\t\tif ( sortIdx !== -1 ) {\n\t\t\t\t// Yes, modify the sort\n\t\t\t\tnextSortIdx = next( sorting[sortIdx], true );\n\t\n\t\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\n\t\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\n\t\t\t\t}\n\t\n\t\t\t\tif ( nextSortIdx === null ) {\n\t\t\t\t\tsorting.splice( sortIdx, 1 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\n\t\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// No sort on this column yet\n\t\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\n\t\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( sorting.length && sorting[0][0] == colIdx ) {\n\t\t\t// Single column - already sorting on this column, modify the sort\n\t\t\tnextSortIdx = next( sorting[0] );\n\t\n\t\t\tsorting.length = 1;\n\t\t\tsorting[0][1] = asSorting[ nextSortIdx ];\n\t\t\tsorting[0]._idx = nextSortIdx;\n\t\t}\n\t\telse {\n\t\t\t// Single column - sort only on this column\n\t\t\tsorting.length = 0;\n\t\t\tsorting.push( [ colIdx, asSorting[0] ] );\n\t\t\tsorting[0]._idx = 0;\n\t\t}\n\t\n\t\t// Run the sort by calling a full redraw\n\t\t_fnReDraw( settings );\n\t\n\t\t// callback used for async user interaction\n\t\tif ( typeof callback == 'function' ) {\n\t\t\tcallback( settings );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Attach a sort handler (click) to a node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortAttachListener ( settings, attachTo, colIdx, callback )\n\t{\n\t\tvar col = settings.aoColumns[ colIdx ];\n\t\n\t\t_fnBindAction( attachTo, {}, function (e) {\n\t\t\t/* If the column is not sortable - don't to anything */\n\t\t\tif ( col.bSortable === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If processing is enabled use a timeout to allow the processing\n\t\t\t// display to be shown - otherwise to it synchronously\n\t\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\n\t\t\t\t\t// In server-side processing, the draw callback will remove the\n\t\t\t\t\t// processing display\n\t\t\t\t\tif ( _fnDataSource( settings ) !== 'ssp' ) {\n\t\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t}\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Set the sorting classes on table's body, Note: it is safe to call this function\n\t * when bSort and bSortClasses are false\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortingClasses( settings )\n\t{\n\t\tvar oldSort = settings.aLastSort;\n\t\tvar sortClass = settings.oClasses.sSortColumn;\n\t\tvar sort = _fnSortFlatten( settings );\n\t\tvar features = settings.oFeatures;\n\t\tvar i, ien, colIdx;\n\t\n\t\tif ( features.bSort && features.bSortClasses ) {\n\t\t\t// Remove old sorting classes\n\t\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = oldSort[i].src;\n\t\n\t\t\t\t// Remove column sorting\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\t\n\t\t\t// Add new column sorting\n\t\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = sort[i].src;\n\t\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\t\t}\n\t\n\t\tsettings.aLastSort = sort;\n\t}\n\t\n\t\n\t// Get the data to sort a column, be it from cache, fresh (populating the\n\t// cache), or from a sort formatter\n\tfunction _fnSortData( settings, idx )\n\t{\n\t\t// Custom sorting function - provided by the sort data type\n\t\tvar column = settings.aoColumns[ idx ];\n\t\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\n\t\tvar customData;\n\t\n\t\tif ( customSort ) {\n\t\t\tcustomData = customSort.call( settings.oInstance, settings, idx,\n\t\t\t\t_fnColumnIndexToVisible( settings, idx )\n\t\t\t);\n\t\t}\n\t\n\t\t// Use / populate cache\n\t\tvar row, cellData;\n\t\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\n\t\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\trow = settings.aoData[i];\n\t\n\t\t\tif ( ! row._aSortData ) {\n\t\t\t\trow._aSortData = [];\n\t\t\t}\n\t\n\t\t\tif ( ! row._aSortData[idx] || customSort ) {\n\t\t\t\tcellData = customSort ?\n\t\t\t\t\tcustomData[i] : // If there was a custom sort function, use data from there\n\t\t\t\t\t_fnGetCellData( settings, i, idx, 'sort' );\n\t\n\t\t\t\trow._aSortData[ idx ] = formatter ?\n\t\t\t\t\tformatter( cellData ) :\n\t\t\t\t\tcellData;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Save the state of a table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSaveState ( settings )\n\t{\n\t\tif ( !settings.oFeatures.bStateSave || settings.bDestroying )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\t/* Store the interesting variables */\n\t\tvar state = {\n\t\t\ttime:    +new Date(),\n\t\t\tstart:   settings._iDisplayStart,\n\t\t\tlength:  settings._iDisplayLength,\n\t\t\torder:   $.extend( true, [], settings.aaSorting ),\n\t\t\tsearch:  _fnSearchToCamel( settings.oPreviousSearch ),\n\t\t\tcolumns: $.map( settings.aoColumns, function ( col, i ) {\n\t\t\t\treturn {\n\t\t\t\t\tvisible: col.bVisible,\n\t\t\t\t\tsearch: _fnSearchToCamel( settings.aoPreSearchCols[i] )\n\t\t\t\t};\n\t\t\t} )\n\t\t};\n\t\n\t\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\n\t\n\t\tsettings.oSavedState = state;\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\n\t}\n\t\n\t\n\t/**\n\t * Attempt to load a saved table state\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oInit DataTables init object so we can override settings\n\t *  @param {function} callback Callback to execute when the state has been loaded\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLoadState ( settings, oInit, callback )\n\t{\n\t\tvar i, ien;\n\t\tvar columns = settings.aoColumns;\n\t\tvar loaded = function ( s ) {\n\t\t\tif ( ! s || ! s.time ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Allow custom and plug-in manipulation functions to alter the saved data set and\n\t\t\t// cancelling of loading by returning false\n\t\t\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\n\t\t\tif ( $.inArray( false, abStateLoad ) !== -1 ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Reject old data\n\t\t\tvar duration = settings.iStateDuration;\n\t\t\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Number of columns have changed - all bets are off, no restore of settings\n\t\t\tif ( s.columns && columns.length !== s.columns.length ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Store the saved state so it might be accessed at any time\n\t\t\tsettings.oLoadedState = $.extend( true, {}, s );\n\t\n\t\t\t// Restore key features - todo - for 1.11 this needs to be done by\n\t\t\t// subscribed events\n\t\t\tif ( s.start !== undefined ) {\n\t\t\t\tsettings._iDisplayStart    = s.start;\n\t\t\t\tsettings.iInitDisplayStart = s.start;\n\t\t\t}\n\t\t\tif ( s.length !== undefined ) {\n\t\t\t\tsettings._iDisplayLength   = s.length;\n\t\t\t}\n\t\n\t\t\t// Order\n\t\t\tif ( s.order !== undefined ) {\n\t\t\t\tsettings.aaSorting = [];\n\t\t\t\t$.each( s.order, function ( i, col ) {\n\t\t\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\n\t\t\t\t\t\t[ 0, col[1] ] :\n\t\t\t\t\t\tcol\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// Search\n\t\t\tif ( s.search !== undefined ) {\n\t\t\t\t$.extend( settings.oPreviousSearch, _fnSearchToHung( s.search ) );\n\t\t\t}\n\t\n\t\t\t// Columns\n\t\t\t//\n\t\t\tif ( s.columns ) {\n\t\t\t\tfor ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\n\t\t\t\t\tvar col = s.columns[i];\n\t\n\t\t\t\t\t// Visibility\n\t\t\t\t\tif ( col.visible !== undefined ) {\n\t\t\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Search\n\t\t\t\t\tif ( col.search !== undefined ) {\n\t\t\t\t\t\t$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\n\t\t\tcallback();\n\t\t}\n\t\n\t\tif ( ! settings.oFeatures.bStateSave ) {\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\n\t\n\t\tif ( state !== undefined ) {\n\t\t\tloaded( state );\n\t\t}\n\t\t// otherwise, wait for the loaded callback to be executed\n\t}\n\t\n\t\n\t/**\n\t * Return the settings object for a particular table\n\t *  @param {node} table table we are using as a dataTable\n\t *  @returns {object} Settings object - or null if not found\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSettingsFromNode ( table )\n\t{\n\t\tvar settings = DataTable.settings;\n\t\tvar idx = $.inArray( table, _pluck( settings, 'nTable' ) );\n\t\n\t\treturn idx !== -1 ?\n\t\t\tsettings[ idx ] :\n\t\t\tnull;\n\t}\n\t\n\t\n\t/**\n\t * Log an error message\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} level log error messages, or display them to the user\n\t *  @param {string} msg error message\n\t *  @param {int} tn Technical note id to get more information about the error.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLog( settings, level, msg, tn )\n\t{\n\t\tmsg = 'DataTables warning: '+\n\t\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\n\t\n\t\tif ( tn ) {\n\t\t\tmsg += '. For more information about this error, please see '+\n\t\t\t'http://datatables.net/tn/'+tn;\n\t\t}\n\t\n\t\tif ( ! level  ) {\n\t\t\t// Backwards compatibility pre 1.10\n\t\t\tvar ext = DataTable.ext;\n\t\t\tvar type = ext.sErrMode || ext.errMode;\n\t\n\t\t\tif ( settings ) {\n\t\t\t\t_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );\n\t\t\t}\n\t\n\t\t\tif ( type == 'alert' ) {\n\t\t\t\talert( msg );\n\t\t\t}\n\t\t\telse if ( type == 'throw' ) {\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t\telse if ( typeof type == 'function' ) {\n\t\t\t\ttype( settings, tn, msg );\n\t\t\t}\n\t\t}\n\t\telse if ( window.console && console.log ) {\n\t\t\tconsole.log( msg );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * See if a property is defined on one object, if so assign it to the other object\n\t *  @param {object} ret target object\n\t *  @param {object} src source object\n\t *  @param {string} name property\n\t *  @param {string} [mappedName] name to map too - optional, name used if not given\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnMap( ret, src, name, mappedName )\n\t{\n\t\tif ( $.isArray( name ) ) {\n\t\t\t$.each( name, function (i, val) {\n\t\t\t\tif ( $.isArray( val ) ) {\n\t\t\t\t\t_fnMap( ret, src, val[0], val[1] );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_fnMap( ret, src, val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( mappedName === undefined ) {\n\t\t\tmappedName = name;\n\t\t}\n\t\n\t\tif ( src[name] !== undefined ) {\n\t\t\tret[mappedName] = src[name];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n\t * shallow copy arrays. The reason we need to do this, is that we don't want to\n\t * deep copy array init values (such as aaSorting) since the dev wouldn't be\n\t * able to override them, but we do want to deep copy arrays.\n\t *  @param {object} out Object to extend\n\t *  @param {object} extender Object from which the properties will be applied to\n\t *      out\n\t *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n\t *      independent copy with the exception of the `data` or `aaData` parameters\n\t *      if they are present. This is so you can pass in a collection to\n\t *      DataTables and have that used as your data source without breaking the\n\t *      references\n\t *  @returns {object} out Reference, just for convenience - out === the return.\n\t *  @memberof DataTable#oApi\n\t *  @todo This doesn't take account of arrays inside the deep copied objects.\n\t */\n\tfunction _fnExtend( out, extender, breakRefs )\n\t{\n\t\tvar val;\n\t\n\t\tfor ( var prop in extender ) {\n\t\t\tif ( extender.hasOwnProperty(prop) ) {\n\t\t\t\tval = extender[prop];\n\t\n\t\t\t\tif ( $.isPlainObject( val ) ) {\n\t\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\n\t\t\t\t\t\tout[prop] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, out[prop], val );\n\t\t\t\t}\n\t\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && $.isArray(val) ) {\n\t\t\t\t\tout[prop] = val.slice();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout[prop] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t}\n\t\n\t\n\t/**\n\t * Bind an event handers to allow a click or return key to activate the callback.\n\t * This is good for accessibility since a return on the keyboard will have the\n\t * same effect as a click, if the element has focus.\n\t *  @param {element} n Element to bind the action to\n\t *  @param {object} oData Data object to pass to the triggered function\n\t *  @param {function} fn Callback function for when the event is triggered\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBindAction( n, oData, fn )\n\t{\n\t\t$(n)\n\t\t\t.on( 'click.DT', oData, function (e) {\n\t\t\t\t\t$(n).blur(); // Remove focus outline for mouse users\n\t\t\t\t\tfn(e);\n\t\t\t\t} )\n\t\t\t.on( 'keypress.DT', oData, function (e){\n\t\t\t\t\tif ( e.which === 13 ) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tfn(e);\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t.on( 'selectstart.DT', function () {\n\t\t\t\t\t/* Take the brutal approach to cancelling text selection */\n\t\t\t\t\treturn false;\n\t\t\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Register a callback function. Easily allows a callback function to be added to\n\t * an array store of callback functions that can then all be called together.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n\t *  @param {function} fn Function to be called back\n\t *  @param {string} sName Identifying name for the callback (i.e. a label)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackReg( oSettings, sStore, fn, sName )\n\t{\n\t\tif ( fn )\n\t\t{\n\t\t\toSettings[sStore].push( {\n\t\t\t\t\"fn\": fn,\n\t\t\t\t\"sName\": sName\n\t\t\t} );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Fire callback functions and trigger events. Note that the loop over the\n\t * callback array store is done backwards! Further note that you do not want to\n\t * fire off triggers in time sensitive applications (for example cell creation)\n\t * as its slow.\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} callbackArr Name of the array storage for the callbacks in\n\t *      oSettings\n\t *  @param {string} eventName Name of the jQuery custom event to trigger. If\n\t *      null no trigger is fired\n\t *  @param {array} args Array of arguments to pass to the callback function /\n\t *      trigger\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackFire( settings, callbackArr, eventName, args )\n\t{\n\t\tvar ret = [];\n\t\n\t\tif ( callbackArr ) {\n\t\t\tret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {\n\t\t\t\treturn val.fn.apply( settings.oInstance, args );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( eventName !== null ) {\n\t\t\tvar e = $.Event( eventName+'.dt' );\n\t\n\t\t\t$(settings.nTable).trigger( e, args );\n\t\n\t\t\tret.push( e.result );\n\t\t}\n\t\n\t\treturn ret;\n\t}\n\t\n\t\n\tfunction _fnLengthOverflow ( settings )\n\t{\n\t\tvar\n\t\t\tstart = settings._iDisplayStart,\n\t\t\tend = settings.fnDisplayEnd(),\n\t\t\tlen = settings._iDisplayLength;\n\t\n\t\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\t\tif ( start >= end )\n\t\t{\n\t\t\tstart = end - len;\n\t\t}\n\t\n\t\t// Keep the start record on the current page\n\t\tstart -= (start % len);\n\t\n\t\tif ( len === -1 || start < 0 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\n\t\tsettings._iDisplayStart = start;\n\t}\n\t\n\t\n\tfunction _fnRenderer( settings, type )\n\t{\n\t\tvar renderer = settings.renderer;\n\t\tvar host = DataTable.ext.renderer[type];\n\t\n\t\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\n\t\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t\t// the default.\n\t\t\treturn host[renderer[type]] || host._;\n\t\t}\n\t\telse if ( typeof renderer === 'string' ) {\n\t\t\t// Common renderer - if there is one available for this type use it,\n\t\t\t// otherwise use the default\n\t\t\treturn host[renderer] || host._;\n\t\t}\n\t\n\t\t// Use the default\n\t\treturn host._;\n\t}\n\t\n\t\n\t/**\n\t * Detect the data source being used for the table. Used to simplify the code\n\t * a little (ajax) and to make it compress a little smaller.\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {string} Data source\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDataSource ( settings )\n\t{\n\t\tif ( settings.oFeatures.bServerSide ) {\n\t\t\treturn 'ssp';\n\t\t}\n\t\telse if ( settings.ajax || settings.sAjaxSource ) {\n\t\t\treturn 'ajax';\n\t\t}\n\t\treturn 'dom';\n\t}\n\t\n\n\t\n\t\n\t/**\n\t * Computed structure of the DataTables API, defined by the options passed to\n\t * `DataTable.Api.register()` when building the API.\n\t *\n\t * The structure is built in order to speed creation and extension of the Api\n\t * objects since the extensions are effectively pre-parsed.\n\t *\n\t * The array is an array of objects with the following structure, where this\n\t * base array represents the Api prototype base:\n\t *\n\t *     [\n\t *       {\n\t *         name:      'data'                -- string   - Property name\n\t *         val:       function () {},       -- function - Api method (or undefined if just an object\n\t *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t *       },\n\t *       {\n\t *         name:     'row'\n\t *         val:       {},\n\t *         methodExt: [ ... ],\n\t *         propExt:   [\n\t *           {\n\t *             name:      'data'\n\t *             val:       function () {},\n\t *             methodExt: [ ... ],\n\t *             propExt:   [ ... ]\n\t *           },\n\t *           ...\n\t *         ]\n\t *       }\n\t *     ]\n\t *\n\t * @type {Array}\n\t * @ignore\n\t */\n\tvar __apiStruct = [];\n\t\n\t\n\t/**\n\t * `Array.prototype` reference.\n\t *\n\t * @type object\n\t * @ignore\n\t */\n\tvar __arrayProto = Array.prototype;\n\t\n\t\n\t/**\n\t * Abstraction for `context` parameter of the `Api` constructor to allow it to\n\t * take several different forms for ease of use.\n\t *\n\t * Each of the input parameter types will be converted to a DataTables settings\n\t * object where possible.\n\t *\n\t * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n\t *   of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t *   * `DataTables.Api` - API instance\n\t * @return {array|null} Matching DataTables settings objects. `null` or\n\t *   `undefined` is returned if no matching DataTable is found.\n\t * @ignore\n\t */\n\tvar _toSettings = function ( mixed )\n\t{\n\t\tvar idx, jq;\n\t\tvar settings = DataTable.settings;\n\t\tvar tables = $.map( settings, function (el, i) {\n\t\t\treturn el.nTable;\n\t\t} );\n\t\n\t\tif ( ! mixed ) {\n\t\t\treturn [];\n\t\t}\n\t\telse if ( mixed.nTable && mixed.oApi ) {\n\t\t\t// DataTables settings object\n\t\t\treturn [ mixed ];\n\t\t}\n\t\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\n\t\t\t// Table node\n\t\t\tidx = $.inArray( mixed, tables );\n\t\t\treturn idx !== -1 ? [ settings[idx] ] : null;\n\t\t}\n\t\telse if ( mixed && typeof mixed.settings === 'function' ) {\n\t\t\treturn mixed.settings().toArray();\n\t\t}\n\t\telse if ( typeof mixed === 'string' ) {\n\t\t\t// jQuery selector\n\t\t\tjq = $(mixed);\n\t\t}\n\t\telse if ( mixed instanceof $ ) {\n\t\t\t// jQuery object (also DataTables instance)\n\t\t\tjq = mixed;\n\t\t}\n\t\n\t\tif ( jq ) {\n\t\t\treturn jq.map( function(i) {\n\t\t\t\tidx = $.inArray( this, tables );\n\t\t\t\treturn idx !== -1 ? settings[idx] : null;\n\t\t\t} ).toArray();\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * DataTables API class - used to control and interface with  one or more\n\t * DataTables enhanced tables.\n\t *\n\t * The API class is heavily based on jQuery, presenting a chainable interface\n\t * that you can use to interact with tables. Each instance of the API class has\n\t * a \"context\" - i.e. the tables that it will operate on. This could be a single\n\t * table, all tables on a page or a sub-set thereof.\n\t *\n\t * Additionally the API is designed to allow you to easily work with the data in\n\t * the tables, retrieving and manipulating it as required. This is done by\n\t * presenting the API class as an array like interface. The contents of the\n\t * array depend upon the actions requested by each method (for example\n\t * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n\t * return an array of objects or arrays depending upon your table's\n\t * configuration). The API object has a number of array like methods (`push`,\n\t * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n\t * `unique` etc) to assist your working with the data held in a table.\n\t *\n\t * Most methods (those which return an Api instance) are chainable, which means\n\t * the return from a method call also has all of the methods available that the\n\t * top level object had. For example, these two calls are equivalent:\n\t *\n\t *     // Not chained\n\t *     api.row.add( {...} );\n\t *     api.draw();\n\t *\n\t *     // Chained\n\t *     api.row.add( {...} ).draw();\n\t *\n\t * @class DataTable.Api\n\t * @param {array|object|string|jQuery} context DataTable identifier. This is\n\t *   used to define which DataTables enhanced tables this API will operate on.\n\t *   Can be one of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t * @param {array} [data] Data to initialise the Api instance with.\n\t *\n\t * @example\n\t *   // Direct initialisation during DataTables construction\n\t *   var api = $('#example').DataTable();\n\t *\n\t * @example\n\t *   // Initialisation using a DataTables jQuery object\n\t *   var api = $('#example').dataTable().api();\n\t *\n\t * @example\n\t *   // Initialisation as a constructor\n\t *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n\t */\n\t_Api = function ( context, data )\n\t{\n\t\tif ( ! (this instanceof _Api) ) {\n\t\t\treturn new _Api( context, data );\n\t\t}\n\t\n\t\tvar settings = [];\n\t\tvar ctxSettings = function ( o ) {\n\t\t\tvar a = _toSettings( o );\n\t\t\tif ( a ) {\n\t\t\t\tsettings = settings.concat( a );\n\t\t\t}\n\t\t};\n\t\n\t\tif ( $.isArray( context ) ) {\n\t\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\t\tctxSettings( context[i] );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tctxSettings( context );\n\t\t}\n\t\n\t\t// Remove duplicates\n\t\tthis.context = _unique( settings );\n\t\n\t\t// Initial data\n\t\tif ( data ) {\n\t\t\t$.merge( this, data );\n\t\t}\n\t\n\t\t// selector\n\t\tthis.selector = {\n\t\t\trows: null,\n\t\t\tcols: null,\n\t\t\topts: null\n\t\t};\n\t\n\t\t_Api.extend( this, this, __apiStruct );\n\t};\n\t\n\tDataTable.Api = _Api;\n\t\n\t// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n\t// isPlainObject.\n\t$.extend( _Api.prototype, {\n\t\tany: function ()\n\t\t{\n\t\t\treturn this.count() !== 0;\n\t\t},\n\t\n\t\n\t\tconcat:  __arrayProto.concat,\n\t\n\t\n\t\tcontext: [], // array of table settings objects\n\t\n\t\n\t\tcount: function ()\n\t\t{\n\t\t\treturn this.flatten().length;\n\t\t},\n\t\n\t\n\t\teach: function ( fn )\n\t\t{\n\t\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\n\t\t\t\tfn.call( this, this[i], i, this );\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\n\t\teq: function ( idx )\n\t\t{\n\t\t\tvar ctx = this.context;\n\t\n\t\t\treturn ctx.length > idx ?\n\t\t\t\tnew _Api( ctx[idx], this[idx] ) :\n\t\t\t\tnull;\n\t\t},\n\t\n\t\n\t\tfilter: function ( fn )\n\t\t{\n\t\t\tvar a = [];\n\t\n\t\t\tif ( __arrayProto.filter ) {\n\t\t\t\ta = __arrayProto.filter.call( this, fn, this );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( fn.call( this, this[i], i, this ) ) {\n\t\t\t\t\t\ta.push( this[i] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\t\n\t\n\t\tflatten: function ()\n\t\t{\n\t\t\tvar a = [];\n\t\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\n\t\t},\n\t\n\t\n\t\tjoin:    __arrayProto.join,\n\t\n\t\n\t\tindexOf: __arrayProto.indexOf || function (obj, start)\n\t\t{\n\t\t\tfor ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {\n\t\t\t\tif ( this[i] === obj ) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t},\n\t\n\t\titerator: function ( flatten, type, fn, alwaysNew ) {\n\t\t\tvar\n\t\t\t\ta = [], ret,\n\t\t\t\ti, ien, j, jen,\n\t\t\t\tcontext = this.context,\n\t\t\t\trows, items, item,\n\t\t\t\tselector = this.selector;\n\t\n\t\t\t// Argument shifting\n\t\t\tif ( typeof flatten === 'string' ) {\n\t\t\t\talwaysNew = fn;\n\t\t\t\tfn = type;\n\t\t\t\ttype = flatten;\n\t\t\t\tflatten = false;\n\t\t\t}\n\t\n\t\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\t\tvar apiInst = new _Api( context[i] );\n\t\n\t\t\t\tif ( type === 'table' ) {\n\t\t\t\t\tret = fn.call( apiInst, context[i], i );\n\t\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'columns' || type === 'rows' ) {\n\t\t\t\t\t// this has same length as context - one entry for each table\n\t\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\n\t\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\n\t\t\t\t\t// columns and rows share the same structure.\n\t\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\t\titems = this[i];\n\t\n\t\t\t\t\tif ( type === 'column-rows' ) {\n\t\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\n\t\t\t\t\t\titem = items[j];\n\t\n\t\t\t\t\t\tif ( type === 'cell' ) {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( a.length || alwaysNew ) {\n\t\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\n\t\t\t\tvar apiSelector = api.selector;\n\t\t\t\tapiSelector.rows = selector.rows;\n\t\t\t\tapiSelector.cols = selector.cols;\n\t\t\t\tapiSelector.opts = selector.opts;\n\t\t\t\treturn api;\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\n\t\tlastIndexOf: __arrayProto.lastIndexOf || function (obj, start)\n\t\t{\n\t\t\t// Bit cheeky...\n\t\t\treturn this.indexOf.apply( this.toArray.reverse(), arguments );\n\t\t},\n\t\n\t\n\t\tlength:  0,\n\t\n\t\n\t\tmap: function ( fn )\n\t\t{\n\t\t\tvar a = [];\n\t\n\t\t\tif ( __arrayProto.map ) {\n\t\t\t\ta = __arrayProto.map.call( this, fn, this );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\t\ta.push( fn.call( this, this[i], i ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\t\n\t\n\t\tpluck: function ( prop )\n\t\t{\n\t\t\treturn this.map( function ( el ) {\n\t\t\t\treturn el[ prop ];\n\t\t\t} );\n\t\t},\n\t\n\t\tpop:     __arrayProto.pop,\n\t\n\t\n\t\tpush:    __arrayProto.push,\n\t\n\t\n\t\t// Does not return an API instance\n\t\treduce: __arrayProto.reduce || function ( fn, init )\n\t\t{\n\t\t\treturn _fnReduce( this, fn, init, 0, this.length, 1 );\n\t\t},\n\t\n\t\n\t\treduceRight: __arrayProto.reduceRight || function ( fn, init )\n\t\t{\n\t\t\treturn _fnReduce( this, fn, init, this.length-1, -1, -1 );\n\t\t},\n\t\n\t\n\t\treverse: __arrayProto.reverse,\n\t\n\t\n\t\t// Object with rows, columns and opts\n\t\tselector: null,\n\t\n\t\n\t\tshift:   __arrayProto.shift,\n\t\n\t\n\t\tslice: function () {\n\t\t\treturn new _Api( this.context, this );\n\t\t},\n\t\n\t\n\t\tsort:    __arrayProto.sort, // ? name - order?\n\t\n\t\n\t\tsplice:  __arrayProto.splice,\n\t\n\t\n\t\ttoArray: function ()\n\t\t{\n\t\t\treturn __arrayProto.slice.call( this );\n\t\t},\n\t\n\t\n\t\tto$: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\t\n\t\n\t\ttoJQuery: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\t\n\t\n\t\tunique: function ()\n\t\t{\n\t\t\treturn new _Api( this.context, _unique(this) );\n\t\t},\n\t\n\t\n\t\tunshift: __arrayProto.unshift\n\t} );\n\t\n\t\n\t_Api.extend = function ( scope, obj, ext )\n\t{\n\t\t// Only extend API instances and static properties of the API\n\t\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\ti, ien,\n\t\t\tj, jen,\n\t\t\tstruct, inner,\n\t\t\tmethodScoping = function ( scope, fn, struc ) {\n\t\t\t\treturn function () {\n\t\t\t\t\tvar ret = fn.apply( scope, arguments );\n\t\n\t\t\t\t\t// Method extension\n\t\t\t\t\t_Api.extend( ret, ret, struc.methodExt );\n\t\t\t\t\treturn ret;\n\t\t\t\t};\n\t\t\t};\n\t\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\tstruct = ext[i];\n\t\n\t\t\t// Value\n\t\t\tobj[ struct.name ] = typeof struct.val === 'function' ?\n\t\t\t\tmethodScoping( scope, struct.val, struct ) :\n\t\t\t\t$.isPlainObject( struct.val ) ?\n\t\t\t\t\t{} :\n\t\t\t\t\tstruct.val;\n\t\n\t\t\tobj[ struct.name ].__dt_wrapper = true;\n\t\n\t\t\t// Property extension\n\t\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\n\t\t}\n\t};\n\t\n\t\n\t// @todo - Is there need for an augment function?\n\t// _Api.augment = function ( inst, name )\n\t// {\n\t// \t// Find src object in the structure from the name\n\t// \tvar parts = name.split('.');\n\t\n\t// \t_Api.extend( inst, obj );\n\t// };\n\t\n\t\n\t//     [\n\t//       {\n\t//         name:      'data'                -- string   - Property name\n\t//         val:       function () {},       -- function - Api method (or undefined if just an object\n\t//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t//       },\n\t//       {\n\t//         name:     'row'\n\t//         val:       {},\n\t//         methodExt: [ ... ],\n\t//         propExt:   [\n\t//           {\n\t//             name:      'data'\n\t//             val:       function () {},\n\t//             methodExt: [ ... ],\n\t//             propExt:   [ ... ]\n\t//           },\n\t//           ...\n\t//         ]\n\t//       }\n\t//     ]\n\t\n\t_Api.register = _api_register = function ( name, val )\n\t{\n\t\tif ( $.isArray( name ) ) {\n\t\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\n\t\t\t\t_Api.register( name[j], val );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\ti, ien,\n\t\t\their = name.split('.'),\n\t\t\tstruct = __apiStruct,\n\t\t\tkey, method;\n\t\n\t\tvar find = function ( src, name ) {\n\t\t\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\n\t\t\t\tif ( src[i].name === name ) {\n\t\t\t\t\treturn src[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\n\t\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\n\t\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\t\tkey = method ?\n\t\t\t\their[i].replace('()', '') :\n\t\t\t\their[i];\n\t\n\t\t\tvar src = find( struct, key );\n\t\t\tif ( ! src ) {\n\t\t\t\tsrc = {\n\t\t\t\t\tname:      key,\n\t\t\t\t\tval:       {},\n\t\t\t\t\tmethodExt: [],\n\t\t\t\t\tpropExt:   []\n\t\t\t\t};\n\t\t\t\tstruct.push( src );\n\t\t\t}\n\t\n\t\t\tif ( i === ien-1 ) {\n\t\t\t\tsrc.val = val;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstruct = method ?\n\t\t\t\t\tsrc.methodExt :\n\t\t\t\t\tsrc.propExt;\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\t_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\n\t\t_Api.register( pluralName, val );\n\t\n\t\t_Api.register( singularName, function () {\n\t\t\tvar ret = val.apply( this, arguments );\n\t\n\t\t\tif ( ret === this ) {\n\t\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\telse if ( ret instanceof _Api ) {\n\t\t\t\t// New API instance returned, want the value from the first item\n\t\t\t\t// in the returned array for the singular result.\n\t\t\t\treturn ret.length ?\n\t\t\t\t\t$.isArray( ret[0] ) ?\n\t\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\n\t\t\t\t\t\tret[0] :\n\t\t\t\t\tundefined;\n\t\t\t}\n\t\n\t\t\t// Non-API return - just fire it back\n\t\t\treturn ret;\n\t\t} );\n\t};\n\t\n\t\n\t/**\n\t * Selector for HTML tables. Apply the given selector to the give array of\n\t * DataTables settings objects.\n\t *\n\t * @param {string|integer} [selector] jQuery selector string or integer\n\t * @param  {array} Array of DataTables settings objects to be filtered\n\t * @return {array}\n\t * @ignore\n\t */\n\tvar __table_selector = function ( selector, a )\n\t{\n\t\t// Integer is used to pick out a table by index\n\t\tif ( typeof selector === 'number' ) {\n\t\t\treturn [ a[ selector ] ];\n\t\t}\n\t\n\t\t// Perform a jQuery selector on the table nodes\n\t\tvar nodes = $.map( a, function (el, i) {\n\t\t\treturn el.nTable;\n\t\t} );\n\t\n\t\treturn $(nodes)\n\t\t\t.filter( selector )\n\t\t\t.map( function (i) {\n\t\t\t\t// Need to translate back from the table node to the settings\n\t\t\t\tvar idx = $.inArray( this, nodes );\n\t\t\t\treturn a[ idx ];\n\t\t\t} )\n\t\t\t.toArray();\n\t};\n\t\n\t\n\t\n\t/**\n\t * Context selector for the API's context (i.e. the tables the API instance\n\t * refers to.\n\t *\n\t * @name    DataTable.Api#tables\n\t * @param {string|integer} [selector] Selector to pick which tables the iterator\n\t *   should operate on. If not given, all tables in the current context are\n\t *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n\t *   select multiple tables or as an integer to select a single table.\n\t * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n\t */\n\t_api_register( 'tables()', function ( selector ) {\n\t\t// A new instance is created if there was a selector specified\n\t\treturn selector ?\n\t\t\tnew _Api( __table_selector( selector, this.context ) ) :\n\t\t\tthis;\n\t} );\n\t\n\t\n\t_api_register( 'table()', function ( selector ) {\n\t\tvar tables = this.tables( selector );\n\t\tvar ctx = tables.context;\n\t\n\t\t// Truncate to the first matched table\n\t\treturn ctx.length ?\n\t\t\tnew _Api( ctx[0] ) :\n\t\t\ttables;\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTable;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().body()', 'table().body()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTBody;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().header()', 'table().header()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTHead;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTFoot;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTableWrapper;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Redraw the tables in the current context.\n\t */\n\t_api_register( 'draw()', function ( paging ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( paging === 'page' ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( typeof paging === 'string' ) {\n\t\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\t\tfalse :\n\t\t\t\t\t\ttrue;\n\t\t\t\t}\n\t\n\t\t\t\t_fnReDraw( settings, paging===false );\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Get the current page index.\n\t *\n\t * @return {integer} Current page index (zero based)\n\t *//**\n\t * Set the current page.\n\t *\n\t * Note that if you attempt to show a page which does not exist, DataTables will\n\t * not throw an error, but rather reset the paging.\n\t *\n\t * @param {integer|string} action The paging action to take. This can be one of:\n\t *  * `integer` - The page index to jump to\n\t *  * `string` - An action to take:\n\t *    * `first` - Jump to first page.\n\t *    * `next` - Jump to the next page\n\t *    * `previous` - Jump to previous page\n\t *    * `last` - Jump to the last page.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page()', function ( action ) {\n\t\tif ( action === undefined ) {\n\t\t\treturn this.page.info().page; // not an expensive call\n\t\t}\n\t\n\t\t// else, have an action to take on all tables\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnPageChange( settings, action );\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Paging information for the first table in the current context.\n\t *\n\t * If you require paging information for another table, use the `table()` method\n\t * with a suitable selector.\n\t *\n\t * @return {object} Object with the following properties set:\n\t *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n\t *  * `pages` - Total number of pages\n\t *  * `start` - Display index for the first record shown on the current page\n\t *  * `end` - Display index for the last record shown on the current page\n\t *  * `length` - Display length (number of records). Note that generally `start\n\t *    + length = end`, but this is not always true, for example if there are\n\t *    only 2 records to show on the final page, with a length of 10.\n\t *  * `recordsTotal` - Full data set length\n\t *  * `recordsDisplay` - Data set length once the current filtering criterion\n\t *    are applied.\n\t */\n\t_api_register( 'page.info()', function ( action ) {\n\t\tif ( this.context.length === 0 ) {\n\t\t\treturn undefined;\n\t\t}\n\t\n\t\tvar\n\t\t\tsettings   = this.context[0],\n\t\t\tstart      = settings._iDisplayStart,\n\t\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1;\n\t\n\t\treturn {\n\t\t\t\"page\":           all ? 0 : Math.floor( start / len ),\n\t\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\"start\":          start,\n\t\t\t\"end\":            settings.fnDisplayEnd(),\n\t\t\t\"length\":         len,\n\t\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\n\t\t\t\"recordsDisplay\": visRecords,\n\t\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\n\t\t};\n\t} );\n\t\n\t\n\t/**\n\t * Get the current page length.\n\t *\n\t * @return {integer} Current page length. Note `-1` indicates that all records\n\t *   are to be shown.\n\t *//**\n\t * Set the current page length.\n\t *\n\t * @param {integer} Page length to set. Use `-1` to show all records.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page.len()', function ( len ) {\n\t\t// Note that we can't call this function 'length()' because `length`\n\t\t// is a Javascript property of functions which defines how many arguments\n\t\t// the function expects.\n\t\tif ( len === undefined ) {\n\t\t\treturn this.context.length !== 0 ?\n\t\t\t\tthis.context[0]._iDisplayLength :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// else, set the page length\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnLengthChange( settings, len );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\tvar __reload = function ( settings, holdPosition, callback ) {\n\t\t// Use the draw event to trigger a callback\n\t\tif ( callback ) {\n\t\t\tvar api = new _Api( settings );\n\t\n\t\t\tapi.one( 'draw', function () {\n\t\t\t\tcallback( api.ajax.json() );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t_fnReDraw( settings, holdPosition );\n\t\t}\n\t\telse {\n\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t// Cancel an existing request\n\t\t\tvar xhr = settings.jqXHR;\n\t\t\tif ( xhr && xhr.readyState !== 4 ) {\n\t\t\t\txhr.abort();\n\t\t\t}\n\t\n\t\t\t// Trigger xhr\n\t\t\t_fnBuildAjax( settings, [], function( json ) {\n\t\t\t\t_fnClearTable( settings );\n\t\n\t\t\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\t_fnAddData( settings, data[i] );\n\t\t\t\t}\n\t\n\t\t\t\t_fnReDraw( settings, holdPosition );\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t} );\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Get the JSON response from the last Ajax request that DataTables made to the\n\t * server. Note that this returns the JSON from the first table in the current\n\t * context.\n\t *\n\t * @return {object} JSON received from the server.\n\t */\n\t_api_register( 'ajax.json()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].json;\n\t\t}\n\t\n\t\t// else return undefined;\n\t} );\n\t\n\t\n\t/**\n\t * Get the data submitted in the last Ajax request\n\t */\n\t_api_register( 'ajax.params()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].oAjaxData;\n\t\t}\n\t\n\t\t// else return undefined;\n\t} );\n\t\n\t\n\t/**\n\t * Reload tables from the Ajax data source. Note that this function will\n\t * automatically re-draw the table when the remote data has been loaded.\n\t *\n\t * @param {boolean} [reset=true] Reset (default) or hold the current paging\n\t *   position. A full re-sort and re-filter is performed when this method is\n\t *   called, which is why the pagination reset is the default action.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\n\t\treturn this.iterator( 'table', function (settings) {\n\t\t\t__reload( settings, resetPaging===false, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Get the current Ajax URL. Note that this returns the URL from the first\n\t * table in the current context.\n\t *\n\t * @return {string} Current Ajax source URL\n\t *//**\n\t * Set the Ajax URL. Note that this will set the URL for all tables in the\n\t * current context.\n\t *\n\t * @param {string} url URL to set.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url()', function ( url ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( url === undefined ) {\n\t\t\t// get\n\t\t\tif ( ctx.length === 0 ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tctx = ctx[0];\n\t\n\t\t\treturn ctx.ajax ?\n\t\t\t\t$.isPlainObject( ctx.ajax ) ?\n\t\t\t\t\tctx.ajax.url :\n\t\t\t\t\tctx.ajax :\n\t\t\t\tctx.sAjaxSource;\n\t\t}\n\t\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( $.isPlainObject( settings.ajax ) ) {\n\t\t\t\tsettings.ajax.url = url;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsettings.ajax = url;\n\t\t\t}\n\t\t\t// No need to consider sAjaxSource here since DataTables gives priority\n\t\t\t// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n\t\t\t// value of `sAjaxSource` redundant.\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Load data from the newly set Ajax URL. Note that this method is only\n\t * available when `ajax.url()` is used to set a URL. Additionally, this method\n\t * has the same effect as calling `ajax.reload()` but is provided for\n\t * convenience when setting a new URL. Like `ajax.reload()` it will\n\t * automatically redraw the table once the remote data has been loaded.\n\t *\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\n\t\t// Same as a reload, but makes sense to present it for easy access after a\n\t\t// url change\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\t__reload( ctx, resetPaging===false, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t\n\tvar _selector_run = function ( type, selector, selectFn, settings, opts )\n\t{\n\t\tvar\n\t\t\tout = [], res,\n\t\t\ta, i, ien, j, jen,\n\t\t\tselectorType = typeof selector;\n\t\n\t\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t\t// given with their array like look\n\t\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\n\t\t\tselector = [ selector ];\n\t\t}\n\t\n\t\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t\t// Only split on simple strings - complex expressions will be jQuery selectors\n\t\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[\\[\\(:]/) ?\n\t\t\t\tselector[i].split(',') :\n\t\t\t\t[ selector[i] ];\n\t\n\t\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\n\t\t\t\tres = selectFn( typeof a[j] === 'string' ? $.trim(a[j]) : a[j] );\n\t\n\t\t\t\tif ( res && res.length ) {\n\t\t\t\t\tout = out.concat( res );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// selector extensions\n\t\tvar ext = _ext.selector[ type ];\n\t\tif ( ext.length ) {\n\t\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\t\tout = ext[i]( settings, opts, out );\n\t\t\t}\n\t\t}\n\t\n\t\treturn _unique( out );\n\t};\n\t\n\t\n\tvar _selector_opts = function ( opts )\n\t{\n\t\tif ( ! opts ) {\n\t\t\topts = {};\n\t\t}\n\t\n\t\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t\t// than search\n\t\tif ( opts.filter && opts.search === undefined ) {\n\t\t\topts.search = opts.filter;\n\t\t}\n\t\n\t\treturn $.extend( {\n\t\t\tsearch: 'none',\n\t\t\torder: 'current',\n\t\t\tpage: 'all'\n\t\t}, opts );\n\t};\n\t\n\t\n\tvar _selector_first = function ( inst )\n\t{\n\t\t// Reduce the API instance to the first item found\n\t\tfor ( var i=0, ien=inst.length ; i<ien ; i++ ) {\n\t\t\tif ( inst[i].length > 0 ) {\n\t\t\t\t// Assign the first element to the first item in the instance\n\t\t\t\t// and truncate the instance and context\n\t\t\t\tinst[0] = inst[i];\n\t\t\t\tinst[0].length = 1;\n\t\t\t\tinst.length = 1;\n\t\t\t\tinst.context = [ inst.context[i] ];\n\t\n\t\t\t\treturn inst;\n\t\t\t}\n\t\t}\n\t\n\t\t// Not found - return an empty instance\n\t\tinst.length = 0;\n\t\treturn inst;\n\t};\n\t\n\t\n\tvar _selector_row_indexes = function ( settings, opts )\n\t{\n\t\tvar\n\t\t\ti, ien, tmp, a=[],\n\t\t\tdisplayFiltered = settings.aiDisplay,\n\t\t\tdisplayMaster = settings.aiDisplayMaster;\n\t\n\t\tvar\n\t\t\tsearch = opts.search,  // none, applied, removed\n\t\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\n\t\t\tpage   = opts.page;    // all, current\n\t\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t// In server-side processing mode, most options are irrelevant since\n\t\t\t// rows not shown don't exist and the index order is the applied order\n\t\t\t// Removed is a special case - for consistency just return an empty\n\t\t\t// array\n\t\t\treturn search === 'removed' ?\n\t\t\t\t[] :\n\t\t\t\t_range( 0, displayMaster.length );\n\t\t}\n\t\telse if ( page == 'current' ) {\n\t\t\t// Current page implies that order=current and fitler=applied, since it is\n\t\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t\t// are\n\t\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\n\t\t\t\ta.push( displayFiltered[i] );\n\t\t\t}\n\t\t}\n\t\telse if ( order == 'current' || order == 'applied' ) {\n\t\t\tif ( search == 'none') {\n\t\t\t\ta = displayMaster.slice();\n\t\t\t}\n\t\t\telse if ( search == 'applied' ) {\n\t\t\t\ta = displayFiltered.slice();\n\t\t\t}\n\t\t\telse if ( search == 'removed' ) {\n\t\t\t\t// O(n+m) solution by creating a hash map\n\t\t\t\tvar displayFilteredMap = {};\n\t\n\t\t\t\tfor ( var i=0, ien=displayFiltered.length ; i<ien ; i++ ) {\n\t\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\n\t\t\t\t}\n\t\n\t\t\t\ta = $.map( displayMaster, function (el) {\n\t\t\t\t\treturn ! displayFilteredMap.hasOwnProperty(el) ?\n\t\t\t\t\t\tel :\n\t\t\t\t\t\tnull;\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( order == 'index' || order == 'original' ) {\n\t\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\t\tif ( search == 'none' ) {\n\t\t\t\t\ta.push( i );\n\t\t\t\t}\n\t\t\t\telse { // applied | removed\n\t\t\t\t\ttmp = $.inArray( i, displayFiltered );\n\t\n\t\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t\t{\n\t\t\t\t\t\ta.push( i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn a;\n\t};\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Rows\n\t *\n\t * {}          - no selector - use all available rows\n\t * {integer}   - row aoData index\n\t * {node}      - TR node\n\t * {string}    - jQuery selector to apply to the TR elements\n\t * {array}     - jQuery array of nodes, or simply an array of TR nodes\n\t *\n\t */\n\tvar __row_selector = function ( settings, selector, opts )\n\t{\n\t\tvar rows;\n\t\tvar run = function ( sel ) {\n\t\t\tvar selInt = _intVal( sel );\n\t\t\tvar i, ien;\n\t\t\tvar aoData = settings.aoData;\n\t\n\t\t\t// Short cut - selector is a number and no options provided (default is\n\t\t\t// all records, so no need to check if the index is in there, since it\n\t\t\t// must be - dev error if the index doesn't exist).\n\t\t\tif ( selInt !== null && ! opts ) {\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\t\n\t\t\tif ( ! rows ) {\n\t\t\t\trows = _selector_row_indexes( settings, opts );\n\t\t\t}\n\t\n\t\t\tif ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {\n\t\t\t\t// Selector - integer\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\t\t\telse if ( sel === null || sel === undefined || sel === '' ) {\n\t\t\t\t// Selector - none\n\t\t\t\treturn rows;\n\t\t\t}\n\t\n\t\t\t// Selector - function\n\t\t\tif ( typeof sel === 'function' ) {\n\t\t\t\treturn $.map( rows, function (idx) {\n\t\t\t\t\tvar row = aoData[ idx ];\n\t\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// Selector - node\n\t\t\tif ( sel.nodeName ) {\n\t\t\t\tvar rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup\n\t\t\t\tvar cellIdx = sel._DT_CellIndex;\n\t\n\t\t\t\tif ( rowIdx !== undefined ) {\n\t\t\t\t\t// Make sure that the row is actually still present in the table\n\t\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\n\t\t\t\t\t\t[ rowIdx ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t\telse if ( cellIdx ) {\n\t\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel ?\n\t\t\t\t\t\t[ cellIdx.row ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\t\treturn host.length ?\n\t\t\t\t\t\t[ host.data('dt-row') ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t\t// DataTables simplifies this for row selectors since you can select\n\t\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t\t// unescaped.\n\t\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\n\t\t\t\t// get row index from id\n\t\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\n\t\t\t\tif ( rowObj !== undefined ) {\n\t\t\t\t\treturn [ rowObj.idx ];\n\t\t\t\t}\n\t\n\t\t\t\t// need to fall through to jQuery in case there is DOM id that\n\t\t\t\t// matches\n\t\t\t}\n\t\t\t\n\t\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\t\tvar nodes = _removeEmpty(\n\t\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\n\t\t\t);\n\t\n\t\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t\t// it also allows arrays, so this will cope with all three options\n\t\t\treturn $(nodes)\n\t\t\t\t.filter( sel )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn this._DT_RowIndex;\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\t};\n\t\n\t\treturn _selector_run( 'row', selector, run, settings, opts );\n\t};\n\t\n\t\n\t_api_register( 'rows()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\t\n\t\topts = _selector_opts( opts );\n\t\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __row_selector( settings, selector, opts );\n\t\t}, 1 );\n\t\n\t\t// Want argument shifting here and in __row_selector?\n\t\tinst.selector.rows = selector;\n\t\tinst.selector.opts = opts;\n\t\n\t\treturn inst;\n\t} );\n\t\n\t_api_register( 'rows().nodes()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn settings.aoData[ row ].nTr || undefined;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'rows().data()', function () {\n\t\treturn this.iterator( true, 'rows', function ( settings, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\tvar r = settings.aoData[ row ];\n\t\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\t_fnInvalidate( settings, row, src );\n\t\t} );\n\t} );\n\t\n\t_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn row;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\n\t\tvar a = [];\n\t\tvar context = this.context;\n\t\n\t\t// `iterator` will drop undefined values, but in this case we want them\n\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\n\t\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\n\t\t\t\ta.push( (hash === true ? '#' : '' )+ id );\n\t\t\t}\n\t\t}\n\t\n\t\treturn new _Api( context, a );\n\t} );\n\t\n\t_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\n\t\tvar that = this;\n\t\n\t\tthis.iterator( 'row', function ( settings, row, thatIdx ) {\n\t\t\tvar data = settings.aoData;\n\t\t\tvar rowData = data[ row ];\n\t\t\tvar i, ien, j, jen;\n\t\t\tvar loopRow, loopCells;\n\t\n\t\t\tdata.splice( row, 1 );\n\t\n\t\t\t// Update the cached indexes\n\t\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\tloopRow = data[i];\n\t\t\t\tloopCells = loopRow.anCells;\n\t\n\t\t\t\t// Rows\n\t\t\t\tif ( loopRow.nTr !== null ) {\n\t\t\t\t\tloopRow.nTr._DT_RowIndex = i;\n\t\t\t\t}\n\t\n\t\t\t\t// Cells\n\t\t\t\tif ( loopCells !== null ) {\n\t\t\t\t\tfor ( j=0, jen=loopCells.length ; j<jen ; j++ ) {\n\t\t\t\t\t\tloopCells[j]._DT_CellIndex.row = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Delete from the display arrays\n\t\t\t_fnDeleteIndex( settings.aiDisplayMaster, row );\n\t\t\t_fnDeleteIndex( settings.aiDisplay, row );\n\t\t\t_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes\n\t\n\t\t\t// For server-side processing tables - subtract the deleted row from the count\n\t\t\tif ( settings._iRecordsDisplay > 0 ) {\n\t\t\t\tsettings._iRecordsDisplay--;\n\t\t\t}\n\t\n\t\t\t// Check for an 'overflow' they case for displaying the table\n\t\t\t_fnLengthOverflow( settings );\n\t\n\t\t\t// Remove the row's ID reference if there is one\n\t\t\tvar id = settings.rowIdFn( rowData._aData );\n\t\t\tif ( id !== undefined ) {\n\t\t\t\tdelete settings.aIds[ id ];\n\t\t\t}\n\t\t} );\n\t\n\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\t\tsettings.aoData[i].idx = i;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( 'rows.add()', function ( rows ) {\n\t\tvar newRows = this.iterator( 'table', function ( settings ) {\n\t\t\t\tvar row, i, ien;\n\t\t\t\tvar out = [];\n\t\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\t\n\t\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tout.push( _fnAddData( settings, row ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn out;\n\t\t\t}, 1 );\n\t\n\t\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\t\tvar modRows = this.rows( -1 );\n\t\tmodRows.pop();\n\t\t$.merge( modRows, newRows );\n\t\n\t\treturn modRows;\n\t} );\n\t\n\t\n\t\n\t\n\t\n\t/**\n\t *\n\t */\n\t_api_register( 'row()', function ( selector, opts ) {\n\t\treturn _selector_first( this.rows( selector, opts ) );\n\t} );\n\t\n\t\n\t_api_register( 'row().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._aData :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// Set\n\t\tvar row = ctx[0].aoData[ this[0] ];\n\t\trow._aData = data;\n\t\n\t\t// If the DOM has an id, and the data source is an array\n\t\tif ( $.isArray( data ) && row.nTr.id ) {\n\t\t\t_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );\n\t\t}\n\t\n\t\t// Automatically invalidate\n\t\t_fnInvalidate( ctx[0], this[0], 'data' );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( 'row().node()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\treturn ctx.length && this.length ?\n\t\t\tctx[0].aoData[ this[0] ].nTr || null :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'row.add()', function ( row ) {\n\t\t// Allow a jQuery object to be passed in - only a single row is added from\n\t\t// it though - the first element in the set\n\t\tif ( row instanceof $ && row.length ) {\n\t\t\trow = row[0];\n\t\t}\n\t\n\t\tvar rows = this.iterator( 'table', function ( settings ) {\n\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\treturn _fnAddTr( settings, row )[0];\n\t\t\t}\n\t\t\treturn _fnAddData( settings, row );\n\t\t} );\n\t\n\t\t// Return an Api.rows() extended instance, with the newly added row selected\n\t\treturn this.row( rows[0] );\n\t} );\n\t\n\t\n\t\n\tvar __details_add = function ( ctx, row, data, klass )\n\t{\n\t\t// Convert to array of TR elements\n\t\tvar rows = [];\n\t\tvar addRow = function ( r, k ) {\n\t\t\t// Recursion to allow for arrays of jQuery objects\n\t\t\tif ( $.isArray( r ) || r instanceof $ ) {\n\t\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\n\t\t\t\t\taddRow( r[i], k );\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t\t// to add the correct number of columns etc\n\t\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\n\t\t\t\trows.push( r );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Otherwise create a row with a wrapper\n\t\t\t\tvar created = $('<tr><td/></tr>').addClass( k );\n\t\t\t\t$('td', created)\n\t\t\t\t\t.addClass( k )\n\t\t\t\t\t.html( r )\n\t\t\t\t\t[0].colSpan = _fnVisbleColumns( ctx );\n\t\n\t\t\t\trows.push( created[0] );\n\t\t\t}\n\t\t};\n\t\n\t\taddRow( data, klass );\n\t\n\t\tif ( row._details ) {\n\t\t\trow._details.detach();\n\t\t}\n\t\n\t\trow._details = $(rows);\n\t\n\t\t// If the children were already shown, that state should be retained\n\t\tif ( row._detailsShow ) {\n\t\t\trow._details.insertAfter( row.nTr );\n\t\t}\n\t};\n\t\n\t\n\tvar __details_remove = function ( api, idx )\n\t{\n\t\tvar ctx = api.context;\n\t\n\t\tif ( ctx.length ) {\n\t\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\t\n\t\t\tif ( row && row._details ) {\n\t\t\t\trow._details.remove();\n\t\n\t\t\t\trow._detailsShow = undefined;\n\t\t\t\trow._details = undefined;\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\tvar __details_display = function ( api, show ) {\n\t\tvar ctx = api.context;\n\t\n\t\tif ( ctx.length && api.length ) {\n\t\t\tvar row = ctx[0].aoData[ api[0] ];\n\t\n\t\t\tif ( row._details ) {\n\t\t\t\trow._detailsShow = show;\n\t\n\t\t\t\tif ( show ) {\n\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trow._details.detach();\n\t\t\t\t}\n\t\n\t\t\t\t__details_events( ctx[0] );\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\tvar __details_events = function ( settings )\n\t{\n\t\tvar api = new _Api( settings );\n\t\tvar namespace = '.dt.DT_details';\n\t\tvar drawEvent = 'draw'+namespace;\n\t\tvar colvisEvent = 'column-visibility'+namespace;\n\t\tvar destroyEvent = 'destroy'+namespace;\n\t\tvar data = settings.aoData;\n\t\n\t\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\n\t\n\t\tif ( _pluck( data, '_details' ).length > 0 ) {\n\t\t\t// On each draw, insert the required elements into the document\n\t\t\tapi.on( drawEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\n\t\t\t\t\t// Internal data grab\n\t\t\t\t\tvar row = data[ idx ];\n\t\n\t\t\t\t\tif ( row._detailsShow ) {\n\t\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\n\t\t\t// Column visibility change - update the colspan\n\t\t\tapi.on( colvisEvent, function ( e, ctx, idx, vis ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t\t// a colspan)\n\t\t\t\tvar row, visible = _fnVisbleColumns( ctx );\n\t\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = data[i];\n\t\n\t\t\t\t\tif ( row._details ) {\n\t\t\t\t\t\trow._details.children('td[colspan]').attr('colspan', visible );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\t// Table destroyed - nuke any child rows\n\t\t\tapi.on( destroyEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( data[i]._details ) {\n\t\t\t\t\t\t__details_remove( api, i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t};\n\t\n\t// Strings for the method names to help minification\n\tvar _emp = '';\n\tvar _child_obj = _emp+'row().child';\n\tvar _child_mth = _child_obj+'()';\n\t\n\t// data can be:\n\t//  tr\n\t//  string\n\t//  jQuery or array of any of the above\n\t_api_register( _child_mth, function ( data, klass ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._details :\n\t\t\t\tundefined;\n\t\t}\n\t\telse if ( data === true ) {\n\t\t\t// show\n\t\t\tthis.child.show();\n\t\t}\n\t\telse if ( data === false ) {\n\t\t\t// remove\n\t\t\t__details_remove( this );\n\t\t}\n\t\telse if ( ctx.length && this.length ) {\n\t\t\t// set\n\t\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\n\t\t}\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.show()',\n\t\t_child_mth+'.show()' // only when `child()` was called with parameters (without\n\t], function ( show ) {   // it returns an object and this method is not executed)\n\t\t__details_display( this, true );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.hide()',\n\t\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\n\t], function () {         // it returns an object and this method is not executed)\n\t\t__details_display( this, false );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.remove()',\n\t\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\n\t], function () {           // it returns an object and this method is not executed)\n\t\t__details_remove( this );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( _child_obj+'.isShown()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length && this.length ) {\n\t\t\t// _detailsShown as false or undefined will fall through to return false\n\t\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\n\t\t}\n\t\treturn false;\n\t} );\n\t\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Columns\n\t *\n\t * {integer}           - column index (>=0 count from left, <0 count from right)\n\t * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n\t * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n\t * \"{string}:name\"     - column name\n\t * \"{string}\"          - jQuery selector on column header nodes\n\t *\n\t */\n\t\n\t// can be an array of these items, comma separated list, or an array of comma\n\t// separated lists\n\t\n\tvar __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;\n\t\n\t\n\t// r1 and r2 are redundant - but it means that the parameters match for the\n\t// iterator callback in columns().data()\n\tvar __columnData = function ( settings, column, r1, r2, rows ) {\n\t\tvar a = [];\n\t\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\n\t\t\ta.push( _fnGetCellData( settings, rows[row], column ) );\n\t\t}\n\t\treturn a;\n\t};\n\t\n\t\n\tvar __column_selector = function ( settings, selector, opts )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tnames = _pluck( columns, 'sName' ),\n\t\t\tnodes = _pluck( columns, 'nTh' );\n\t\n\t\tvar run = function ( s ) {\n\t\t\tvar selInt = _intVal( s );\n\t\n\t\t\t// Selector - all\n\t\t\tif ( s === '' ) {\n\t\t\t\treturn _range( columns.length );\n\t\t\t}\n\t\n\t\t\t// Selector - index\n\t\t\tif ( selInt !== null ) {\n\t\t\t\treturn [ selInt >= 0 ?\n\t\t\t\t\tselInt : // Count from left\n\t\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t\t];\n\t\t\t}\n\t\n\t\t\t// Selector = function\n\t\t\tif ( typeof s === 'function' ) {\n\t\t\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\n\t\t\t\treturn $.map( columns, function (col, idx) {\n\t\t\t\t\treturn s(\n\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\n\t\t\t\t\t\t\tnodes[ idx ]\n\t\t\t\t\t\t) ? idx : null;\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// jQuery or string selector\n\t\t\tvar match = typeof s === 'string' ?\n\t\t\t\ts.match( __re_column_selector ) :\n\t\t\t\t'';\n\t\n\t\t\tif ( match ) {\n\t\t\t\tswitch( match[2] ) {\n\t\t\t\t\tcase 'visIdx':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tvar idx = parseInt( match[1], 10 );\n\t\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\t\tif ( idx < 0 ) {\n\t\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\t\tvar visColumns = $.map( columns, function (col,i) {\n\t\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Counting from the left\n\t\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\n\t\n\t\t\t\t\tcase 'name':\n\t\t\t\t\t\t// match by name. `names` is column index complete and in order\n\t\t\t\t\t\treturn $.map( names, function (name, i) {\n\t\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t\t} );\n\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Cell in the table body\n\t\t\tif ( s.nodeName && s._DT_CellIndex ) {\n\t\t\t\treturn [ s._DT_CellIndex.column ];\n\t\t\t}\n\t\n\t\t\t// jQuery selector on the TH elements for the columns\n\t\t\tvar jqResult = $( nodes )\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn $.inArray( this, nodes ); // `nodes` is column index complete and in order\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\t\n\t\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t\t// a child or such an element\n\t\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\t\treturn host.length ?\n\t\t\t\t[ host.data('dt-column') ] :\n\t\t\t\t[];\n\t\t};\n\t\n\t\treturn _selector_run( 'column', selector, run, settings, opts );\n\t};\n\t\n\t\n\tvar __setColumnVis = function ( settings, column, vis ) {\n\t\tvar\n\t\t\tcols = settings.aoColumns,\n\t\t\tcol  = cols[ column ],\n\t\t\tdata = settings.aoData,\n\t\t\trow, cells, i, ien, tr;\n\t\n\t\t// Get\n\t\tif ( vis === undefined ) {\n\t\t\treturn col.bVisible;\n\t\t}\n\t\n\t\t// Set\n\t\t// No change\n\t\tif ( col.bVisible === vis ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( vis ) {\n\t\t\t// Insert column\n\t\t\t// Need to decide if we should use appendChild or insertBefore\n\t\t\tvar insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );\n\t\n\t\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\ttr = data[i].nTr;\n\t\t\t\tcells = data[i].anCells;\n\t\n\t\t\t\tif ( tr ) {\n\t\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\n\t\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Remove column\n\t\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\n\t\t}\n\t\n\t\t// Common actions\n\t\tcol.bVisible = vis;\n\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t// Update colspan for no records display. Child rows and extensions will use their own\n\t\t// listeners to do this - only need to update the empty table item here\n\t\tif ( ! settings.aiDisplay.length ) {\n\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n\t\t}\n\t\n\t\t_fnSaveState( settings );\n\t};\n\t\n\t\n\t_api_register( 'columns()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\t\n\t\topts = _selector_opts( opts );\n\t\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __column_selector( settings, selector, opts );\n\t\t}, 1 );\n\t\n\t\t// Want argument shifting here and in _row_selector?\n\t\tinst.selector.cols = selector;\n\t\tinst.selector.opts = opts;\n\t\n\t\treturn inst;\n\t} );\n\t\n\t_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].nTh;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].nTf;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().data()', 'column().data()', function () {\n\t\treturn this.iterator( 'column-rows', __columnData, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].mData;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows,\n\t\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t\t);\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\n\t\tvar ret = this.iterator( 'column', function ( settings, column ) {\n\t\t\tif ( vis === undefined ) {\n\t\t\t\treturn settings.aoColumns[ column ].bVisible;\n\t\t\t} // else\n\t\t\t__setColumnVis( settings, column, vis );\n\t\t} );\n\t\n\t\t// Group the column visibility changes\n\t\tif ( vis !== undefined ) {\n\t\t\t// Second loop once the first is done for events\n\t\t\tthis.iterator( 'column', function ( settings, column ) {\n\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\n\t\t\t} );\n\t\n\t\t\tif ( calc === undefined || calc ) {\n\t\t\t\tthis.columns.adjust();\n\t\t\t}\n\t\t}\n\t\n\t\treturn ret;\n\t} );\n\t\n\t_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn type === 'visible' ?\n\t\t\t\t_fnColumnIndexToVisible( settings, column ) :\n\t\t\t\tcolumn;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'columns.adjust()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'column.index()', function ( type, idx ) {\n\t\tif ( this.context.length !== 0 ) {\n\t\t\tvar ctx = this.context[0];\n\t\n\t\t\tif ( type === 'fromVisible' || type === 'toData' ) {\n\t\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\n\t\t\t}\n\t\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\n\t\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t_api_register( 'column()', function ( selector, opts ) {\n\t\treturn _selector_first( this.columns( selector, opts ) );\n\t} );\n\t\n\t\n\t\n\tvar __cell_selector = function ( settings, selector, opts )\n\t{\n\t\tvar data = settings.aoData;\n\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\n\t\tvar allCells = $( [].concat.apply([], cells) );\n\t\tvar row;\n\t\tvar columns = settings.aoColumns.length;\n\t\tvar a, i, ien, j, o, host;\n\t\n\t\tvar run = function ( s ) {\n\t\t\tvar fnSelector = typeof s === 'function';\n\t\n\t\t\tif ( s === null || s === undefined || fnSelector ) {\n\t\t\t\t// All cells and function selectors\n\t\t\t\ta = [];\n\t\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\t\n\t\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\n\t\t\t\t\t\to = {\n\t\t\t\t\t\t\trow: row,\n\t\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\tif ( fnSelector ) {\n\t\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\t\thost = data[ row ];\n\t\n\t\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\n\t\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn a;\n\t\t\t}\n\t\t\t\n\t\t\t// Selector - index\n\t\t\tif ( $.isPlainObject( s ) ) {\n\t\t\t\t// Valid cell index and its in the array of selectable rows\n\t\t\t\treturn s.column !== undefined && s.row !== undefined && $.inArray( s.row, rows ) !== -1 ?\n\t\t\t\t\t[s] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\n\t\t\t// Selector - jQuery filtered cells\n\t\t\tvar jqResult = allCells\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function (i, el) {\n\t\t\t\t\treturn { // use a new object, in case someone changes the values\n\t\t\t\t\t\trow:    el._DT_CellIndex.row,\n\t\t\t\t\t\tcolumn: el._DT_CellIndex.column\n\t \t\t\t\t};\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\t\n\t\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t\t// data attributes\n\t\t\thost = $(s).closest('*[data-dt-row]');\n\t\t\treturn host.length ?\n\t\t\t\t[ {\n\t\t\t\t\trow: host.data('dt-row'),\n\t\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t\t} ] :\n\t\t\t\t[];\n\t\t};\n\t\n\t\treturn _selector_run( 'cell', selector, run, settings, opts );\n\t};\n\t\n\t\n\t\n\t\n\t_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\n\t\t// Argument shifting\n\t\tif ( $.isPlainObject( rowSelector ) ) {\n\t\t\t// Indexes\n\t\t\tif ( rowSelector.row === undefined ) {\n\t\t\t\t// Selector options in first parameter\n\t\t\t\topts = rowSelector;\n\t\t\t\trowSelector = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Cell index objects in first parameter\n\t\t\t\topts = columnSelector;\n\t\t\t\tcolumnSelector = null;\n\t\t\t}\n\t\t}\n\t\tif ( $.isPlainObject( columnSelector ) ) {\n\t\t\topts = columnSelector;\n\t\t\tcolumnSelector = null;\n\t\t}\n\t\n\t\t// Cell selector\n\t\tif ( columnSelector === null || columnSelector === undefined ) {\n\t\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\n\t\t\t} );\n\t\t}\n\t\n\t\t// Row + column selector\n\t\tvar columns = this.columns( columnSelector );\n\t\tvar rows = this.rows( rowSelector );\n\t\tvar a, i, ien, j, jen;\n\t\n\t\tthis.iterator( 'table', function ( settings, idx ) {\n\t\t\ta = [];\n\t\n\t\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\n\t\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\n\t\t\t\t\ta.push( {\n\t\t\t\t\t\trow:    rows[idx][i],\n\t\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}, 1 );\n\t\n\t    // Now pass through the cell selector for options\n\t    var cells = this.cells( a, opts );\n\t\n\t\t$.extend( cells.selector, {\n\t\t\tcols: columnSelector,\n\t\t\trows: rowSelector,\n\t\t\topts: opts\n\t\t} );\n\t\n\t\treturn cells;\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\tvar data = settings.aoData[ row ];\n\t\n\t\t\treturn data && data.anCells ?\n\t\t\t\tdata.anCells[ column ] :\n\t\t\t\tundefined;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_register( 'cells().data()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column );\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\n\t\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\t\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn settings.aoData[ row ][ type ][ column ];\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column, type );\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn {\n\t\t\t\trow: row,\n\t\t\t\tcolumn: column,\n\t\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\n\t\t\t};\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\t_fnInvalidate( settings, row, src, column );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\n\t\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\n\t} );\n\t\n\t\n\t_api_register( 'cell().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\t\tvar cell = this[0];\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && cell.length ?\n\t\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// Set\n\t\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\n\t\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Get current ordering (sorting) that has been applied to the table.\n\t *\n\t * @returns {array} 2D array containing the sorting information for the first\n\t *   table in the current context. Each element in the parent array represents\n\t *   a column being sorted upon (i.e. multi-sorting with two columns would have\n\t *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n\t *   the column index that the sorting condition applies to, the second is the\n\t *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n\t *   index of the sorting order from the `column.sorting` initialisation array.\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {integer} order Column index to sort upon.\n\t * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 1D array of sorting information to be applied.\n\t * @param {array} [...] Optional additional sorting conditions\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 2D array of sorting information to be applied.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order()', function ( order, dir ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( order === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].aaSorting :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// set\n\t\tif ( typeof order === 'number' ) {\n\t\t\t// Simple column / direction passed in\n\t\t\torder = [ [ order, dir ] ];\n\t\t}\n\t\telse if ( order.length && ! $.isArray( order[0] ) ) {\n\t\t\t// Arguments passed in (list of 1D arrays)\n\t\t\torder = Array.prototype.slice.call( arguments );\n\t\t}\n\t\t// otherwise a 2D array was passed in\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSorting = order.slice();\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Attach a sort listener to an element for a given column\n\t *\n\t * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n\t *   listener to. This can take the form of a single DOM node, a jQuery\n\t *   collection of nodes or a jQuery selector which will identify the node(s).\n\t * @param {integer} column the column that a click on this node will sort on\n\t * @param {function} [callback] callback function when sort is run\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order.listener()', function ( node, column, callback ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSortAttachListener( settings, node, column, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'order.fixed()', function ( set ) {\n\t\tif ( ! set ) {\n\t\t\tvar ctx = this.context;\n\t\t\tvar fixed = ctx.length ?\n\t\t\t\tctx[0].aaSortingFixed :\n\t\t\t\tundefined;\n\t\n\t\t\treturn $.isArray( fixed ) ?\n\t\t\t\t{ pre: fixed } :\n\t\t\t\tfixed;\n\t\t}\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\n\t\t} );\n\t} );\n\t\n\t\n\t// Order by the selected column(s)\n\t_api_register( [\n\t\t'columns().order()',\n\t\t'column().order()'\n\t], function ( dir ) {\n\t\tvar that = this;\n\t\n\t\treturn this.iterator( 'table', function ( settings, i ) {\n\t\t\tvar sort = [];\n\t\n\t\t\t$.each( that[i], function (j, col) {\n\t\t\t\tsort.push( [ col, dir ] );\n\t\t\t} );\n\t\n\t\t\tsettings.aaSorting = sort;\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( input === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].oPreviousSearch.sSearch :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {\n\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t} ), 1 );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_registerPlural(\n\t\t'columns().search()',\n\t\t'column().search()',\n\t\tfunction ( input, regex, smart, caseInsen ) {\n\t\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\t\tvar preSearch = settings.aoPreSearchCols;\n\t\n\t\t\t\tif ( input === undefined ) {\n\t\t\t\t\t// get\n\t\t\t\t\treturn preSearch[ column ].sSearch;\n\t\t\t\t}\n\t\n\t\t\t\t// set\n\t\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t$.extend( preSearch[ column ], {\n\t\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t\t} );\n\t\n\t\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch, 1 );\n\t\t\t} );\n\t\t}\n\t);\n\t\n\t/*\n\t * State API methods\n\t */\n\t\n\t_api_register( 'state()', function () {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oSavedState :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'state.clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t// Save an empty object\n\t\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'state.loaded()', function () {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oLoadedState :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'state.save()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSaveState( settings );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Provide a common method for plug-ins to check the version of DataTables being\n\t * used, in order to ensure compatibility.\n\t *\n\t *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n\t *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to\n\t *    the required version, or false if this version of DataTales is not\n\t *    suitable\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n\t */\n\tDataTable.versionCheck = DataTable.fnVersionCheck = function( version )\n\t{\n\t\tvar aThis = DataTable.version.split('.');\n\t\tvar aThat = version.split('.');\n\t\tvar iThis, iThat;\n\t\n\t\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\n\t\t\tiThis = parseInt( aThis[i], 10 ) || 0;\n\t\t\tiThat = parseInt( aThat[i], 10 ) || 0;\n\t\n\t\t\t// Parts are the same, keep comparing\n\t\t\tif (iThis === iThat) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\t// Parts are different, return immediately\n\t\t\treturn iThis > iThat;\n\t\t}\n\t\n\t\treturn true;\n\t};\n\t\n\t\n\t/**\n\t * Check if a `<table>` node is a DataTable table already or not.\n\t *\n\t *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n\t *      selector for the table to test. Note that if more than more than one\n\t *      table is passed on, only the first will be checked\n\t *  @returns {boolean} true the table given is a DataTable, or false otherwise\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n\t *      $('#example').dataTable();\n\t *    }\n\t */\n\tDataTable.isDataTable = DataTable.fnIsDataTable = function ( table )\n\t{\n\t\tvar t = $(table).get(0);\n\t\tvar is = false;\n\t\n\t\tif ( table instanceof DataTable.Api ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\t$.each( DataTable.settings, function (i, o) {\n\t\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\t\n\t\t\tif ( o.nTable === t || head === t || foot === t ) {\n\t\t\t\tis = true;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn is;\n\t};\n\t\n\t\n\t/**\n\t * Get all DataTable tables that have been initialised - optionally you can\n\t * select to get only currently visible tables.\n\t *\n\t *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n\t *    or visible tables only.\n\t *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n\t *    DataTables\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    $.each( $.fn.dataTable.tables(true), function () {\n\t *      $(table).DataTable().columns.adjust();\n\t *    } );\n\t */\n\tDataTable.tables = DataTable.fnTables = function ( visible )\n\t{\n\t\tvar api = false;\n\t\n\t\tif ( $.isPlainObject( visible ) ) {\n\t\t\tapi = visible.api;\n\t\t\tvisible = visible.visible;\n\t\t}\n\t\n\t\tvar a = $.map( DataTable.settings, function (o) {\n\t\t\tif ( !visible || (visible && $(o.nTable).is(':visible')) ) {\n\t\t\t\treturn o.nTable;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn api ?\n\t\t\tnew _Api( a ) :\n\t\t\ta;\n\t};\n\t\n\t\n\t/**\n\t * Convert from camel case parameters to Hungarian notation. This is made public\n\t * for the extensions to provide the same ability as DataTables core to accept\n\t * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n\t * parameters.\n\t *\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t */\n\tDataTable.camelToHungarian = _fnCamelToHungarian;\n\t\n\t\n\t\n\t/**\n\t *\n\t */\n\t_api_register( '$()', function ( selector, opts ) {\n\t\tvar\n\t\t\trows   = this.rows( opts ).nodes(), // Get all rows\n\t\t\tjqRows = $(rows);\n\t\n\t\treturn $( [].concat(\n\t\t\tjqRows.filter( selector ).toArray(),\n\t\t\tjqRows.find( selector ).toArray()\n\t\t) );\n\t} );\n\t\n\t\n\t// jQuery functions to operate on the tables\n\t$.each( [ 'on', 'one', 'off' ], function (i, key) {\n\t\t_api_register( key+'()', function ( /* event, handler */ ) {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\n\t\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\t\targs[0] = $.map( args[0].split( /\\s/ ), function ( e ) {\n\t\t\t\treturn ! e.match(/\\.dt\\b/) ?\n\t\t\t\t\te+'.dt' :\n\t\t\t\t\te;\n\t\t\t\t} ).join( ' ' );\n\t\n\t\t\tvar inst = $( this.tables().nodes() );\n\t\t\tinst[key].apply( inst, args );\n\t\t\treturn this;\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnClearTable( settings );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'settings()', function () {\n\t\treturn new _Api( this.context, this.context );\n\t} );\n\t\n\t\n\t_api_register( 'init()', function () {\n\t\tvar ctx = this.context;\n\t\treturn ctx.length ? ctx[0].oInit : null;\n\t} );\n\t\n\t\n\t_api_register( 'data()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\treturn _pluck( settings.aoData, '_aData' );\n\t\t} ).flatten();\n\t} );\n\t\n\t\n\t_api_register( 'destroy()', function ( remove ) {\n\t\tremove = remove || false;\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tvar orig      = settings.nTableWrapper.parentNode;\n\t\t\tvar classes   = settings.oClasses;\n\t\t\tvar table     = settings.nTable;\n\t\t\tvar tbody     = settings.nTBody;\n\t\t\tvar thead     = settings.nTHead;\n\t\t\tvar tfoot     = settings.nTFoot;\n\t\t\tvar jqTable   = $(table);\n\t\t\tvar jqTbody   = $(tbody);\n\t\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\t\tvar rows      = $.map( settings.aoData, function (r) { return r.nTr; } );\n\t\t\tvar i, ien;\n\t\n\t\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t\t// should be taken\n\t\t\tsettings.bDestroying = true;\n\t\n\t\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings] );\n\t\n\t\t\t// If not being removed from the document, make all columns visible\n\t\t\tif ( ! remove ) {\n\t\t\t\tnew _Api( settings ).columns().visible( true );\n\t\t\t}\n\t\n\t\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t\t// for removing them\n\t\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n\t\t\t$(window).off('.DT-'+settings.sInstance);\n\t\n\t\t\t// When scrolling we had to break the table up - restore it\n\t\t\tif ( table != thead.parentNode ) {\n\t\t\t\tjqTable.children('thead').detach();\n\t\t\t\tjqTable.append( thead );\n\t\t\t}\n\t\n\t\t\tif ( tfoot && table != tfoot.parentNode ) {\n\t\t\t\tjqTable.children('tfoot').detach();\n\t\t\t\tjqTable.append( tfoot );\n\t\t\t}\n\t\n\t\t\tsettings.aaSorting = [];\n\t\t\tsettings.aaSortingFixed = [];\n\t\t\t_fnSortingClasses( settings );\n\t\n\t\t\t$( rows ).removeClass( settings.asStripeClasses.join(' ') );\n\t\n\t\t\t$('th, td', thead).removeClass( classes.sSortable+' '+\n\t\t\t\tclasses.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone\n\t\t\t);\n\t\n\t\t\t// Add the TR elements back into the table in their original order\n\t\t\tjqTbody.children().detach();\n\t\t\tjqTbody.append( rows );\n\t\n\t\t\t// Remove the DataTables generated nodes, events and classes\n\t\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\t\tjqTable[ removedMethod ]();\n\t\t\tjqWrapper[ removedMethod ]();\n\t\n\t\t\t// If we need to reattach the table to the document\n\t\t\tif ( ! remove && orig ) {\n\t\t\t\t// insertBefore acts like appendChild if !arg[1]\n\t\t\t\torig.insertBefore( table, settings.nTableReinsertBefore );\n\t\n\t\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t\t// so we can restore directly to that\n\t\t\t\tjqTable\n\t\t\t\t\t.css( 'width', settings.sDestroyWidth )\n\t\t\t\t\t.removeClass( classes.sTable );\n\t\n\t\t\t\t// If the were originally stripe classes - then we add them back here.\n\t\t\t\t// Note this is not fool proof (for example if not all rows had stripe\n\t\t\t\t// classes - but it's a good effort without getting carried away\n\t\t\t\tien = settings.asDestroyStripes.length;\n\t\n\t\t\t\tif ( ien ) {\n\t\t\t\t\tjqTbody.children().each( function (i) {\n\t\t\t\t\t\t$(this).addClass( settings.asDestroyStripes[i % ien] );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Remove the settings object from the settings array */\n\t\t\tvar idx = $.inArray( settings, DataTable.settings );\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tDataTable.settings.splice( idx, 1 );\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t// Add the `every()` method for rows, columns and cells in a compact form\n\t$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\n\t\t_api_register( type+'s().every()', function ( fn ) {\n\t\t\tvar opts = this.selector.opts;\n\t\t\tvar api = this;\n\t\n\t\t\treturn this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {\n\t\t\t\t// Rows and columns:\n\t\t\t\t//  arg1 - index\n\t\t\t\t//  arg2 - table counter\n\t\t\t\t//  arg3 - loop counter\n\t\t\t\t//  arg4 - undefined\n\t\t\t\t// Cells:\n\t\t\t\t//  arg1 - row index\n\t\t\t\t//  arg2 - column index\n\t\t\t\t//  arg3 - table counter\n\t\t\t\t//  arg4 - loop counter\n\t\t\t\tfn.call(\n\t\t\t\t\tapi[ type ](\n\t\t\t\t\t\targ1,\n\t\t\t\t\t\ttype==='cell' ? arg2 : opts,\n\t\t\t\t\t\ttype==='cell' ? opts : undefined\n\t\t\t\t\t),\n\t\t\t\t\targ1, arg2, arg3, arg4\n\t\t\t\t);\n\t\t\t} );\n\t\t} );\n\t} );\n\t\n\t\n\t// i18n method for extensions to be able to use the language object from the\n\t// DataTable\n\t_api_register( 'i18n()', function ( token, def, plural ) {\n\t\tvar ctx = this.context[0];\n\t\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\n\t\n\t\tif ( resolved === undefined ) {\n\t\t\tresolved = def;\n\t\t}\n\t\n\t\tif ( plural !== undefined && $.isPlainObject( resolved ) ) {\n\t\t\tresolved = resolved[ plural ] !== undefined ?\n\t\t\t\tresolved[ plural ] :\n\t\t\t\tresolved._;\n\t\t}\n\t\n\t\treturn resolved.replace( '%d', plural ); // nb: plural might be undefined,\n\t} );\n\n\t/**\n\t * Version string for plug-ins to check compatibility. Allowed format is\n\t * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n\t * only for non-release builds. See http://semver.org/ for more information.\n\t *  @member\n\t *  @type string\n\t *  @default Version number\n\t */\n\tDataTable.version = \"1.10.18\";\n\n\t/**\n\t * Private data store, containing all of the settings objects that are\n\t * created for the tables on a given page.\n\t *\n\t * Note that the `DataTable.settings` object is aliased to\n\t * `jQuery.fn.dataTableExt` through which it may be accessed and\n\t * manipulated, or `jQuery.fn.dataTable.settings`.\n\t *  @member\n\t *  @type array\n\t *  @default []\n\t *  @private\n\t */\n\tDataTable.settings = [];\n\n\t/**\n\t * Object models container, for the various models that DataTables has\n\t * available to it. These models define the objects that are used to hold\n\t * the active state and configuration of the table.\n\t *  @namespace\n\t */\n\tDataTable.models = {};\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * search information for the global filter and individual column filters.\n\t *  @namespace\n\t */\n\tDataTable.models.oSearch = {\n\t\t/**\n\t\t * Flag to indicate if the filtering should be case insensitive or not\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bCaseInsensitive\": true,\n\t\n\t\t/**\n\t\t * Applied search term\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sSearch\": \"\",\n\t\n\t\t/**\n\t\t * Flag to indicate if the search term should be interpreted as a\n\t\t * regular expression (true) or not (false) and therefore and special\n\t\t * regex characters escaped.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bRegex\": false,\n\t\n\t\t/**\n\t\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bSmart\": true\n\t};\n\t\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * each individual row. This is the object format used for the settings\n\t * aoData array.\n\t *  @namespace\n\t */\n\tDataTable.models.oRow = {\n\t\t/**\n\t\t * TR element for the row\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTr\": null,\n\t\n\t\t/**\n\t\t * Array of TD elements for each row. This is null until the row has been\n\t\t * created.\n\t\t *  @type array nodes\n\t\t *  @default []\n\t\t */\n\t\t\"anCells\": null,\n\t\n\t\t/**\n\t\t * Data object from the original data source for the row. This is either\n\t\t * an array if using the traditional form of DataTables, or an object if\n\t\t * using mData options. The exact type will depend on the passed in\n\t\t * data from the data source, or will be an array if using DOM a data\n\t\t * source.\n\t\t *  @type array|object\n\t\t *  @default []\n\t\t */\n\t\t\"_aData\": [],\n\t\n\t\t/**\n\t\t * Sorting data cache - this array is ostensibly the same length as the\n\t\t * number of columns (although each index is generated only as it is\n\t\t * needed), and holds the data that is used for sorting each column in the\n\t\t * row. We do this cache generation at the start of the sort in order that\n\t\t * the formatting of the sort data need be done only once for each cell\n\t\t * per sort. This array should not be read from or written to by anything\n\t\t * other than the master sorting methods.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aSortData\": null,\n\t\n\t\t/**\n\t\t * Per cell filtering data cache. As per the sort data cache, used to\n\t\t * increase the performance of the filtering in DataTables\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aFilterData\": null,\n\t\n\t\t/**\n\t\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t\t * in this case a string rather than an array. This is easily computed with\n\t\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t\t * needed on every search (memory traded for performance)\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sFilterRow\": null,\n\t\n\t\t/**\n\t\t * Cache of the class name that DataTables has applied to the row, so we\n\t\t * can quickly look at this variable rather than needing to do a DOM check\n\t\t * on className for the nTr property.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *  @private\n\t\t */\n\t\t\"_sRowStripe\": \"\",\n\t\n\t\t/**\n\t\t * Denote if the original data source was from the DOM, or the data source\n\t\t * object. This is used for invalidating data, so DataTables can\n\t\t * automatically read data from the original source, unless uninstructed\n\t\t * otherwise.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"src\": null,\n\t\n\t\t/**\n\t\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t\t * object, but want to know the index\n\t\t *  @type integer\n\t\t *  @default -1\n\t\t *  @private\n\t\t */\n\t\t\"idx\": -1\n\t};\n\t\n\t\n\t/**\n\t * Template object for the column information object in DataTables. This object\n\t * is held in the settings aoColumns array and contains all the information that\n\t * DataTables needs about each individual column.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults.column}\n\t * but this one is the internal data store for DataTables's cache of columns.\n\t * It should NOT be manipulated outside of DataTables. Any configuration should\n\t * be done through the initialisation options.\n\t *  @namespace\n\t */\n\tDataTable.models.oColumn = {\n\t\t/**\n\t\t * Column index. This could be worked out on-the-fly with $.inArray, but it\n\t\t * is faster to just hold it as a variable\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"idx\": null,\n\t\n\t\t/**\n\t\t * A list of the columns that sorting should occur on when this column\n\t\t * is sorted. That this property is an array allows multi-column sorting\n\t\t * to be defined for a column (for example first name / last name columns\n\t\t * would benefit from this). The values are integers pointing to the\n\t\t * columns to be sorted on (typically it will be a single integer pointing\n\t\t * at itself, but that doesn't need to be the case).\n\t\t *  @type array\n\t\t */\n\t\t\"aDataSort\": null,\n\t\n\t\t/**\n\t\t * Define the sorting directions that are applied to the column, in sequence\n\t\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t\t * as the sorting direction when the column if first sorted (clicked on).\n\t\t * Sort it again (click again) and it will move on to the next index.\n\t\t * Repeat until loop.\n\t\t *  @type array\n\t\t */\n\t\t\"asSorting\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is searchable, and thus should be included\n\t\t * in the filtering or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSearchable\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is sortable or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortable\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is currently visible in the table or not\n\t\t *  @type boolean\n\t\t */\n\t\t\"bVisible\": null,\n\t\n\t\t/**\n\t\t * Store for manual type assignment using the `column.type` option. This\n\t\t * is held in store so we can manipulate the column's `sType` property.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sManualType\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t\t * source for filtering or sorting. True is either are.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @private\n\t\t */\n\t\t\"_bAttrSrc\": false,\n\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} nTd The TD node that has been created\n\t\t *  @param {*} sData The Data for the cell\n\t\t *  @param {array|object} oData The data for the whole row\n\t\t *  @param {int} iRow The row index for the aoData data store\n\t\t *  @default null\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\n\t\t/**\n\t\t * Function to get data from a cell in a column. You should <b>never</b>\n\t\t * access data directly through _aData internally in DataTables - always use\n\t\t * the method attached to this property. It allows mData to function as\n\t\t * required. This function is automatically assigned by the column\n\t\t * initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {string} sSpecific The specific data type you want to get -\n\t\t *    'display', 'type' 'filter' 'sort'\n\t\t *  @returns {*} The data for the cell from the given row's data\n\t\t *  @default null\n\t\t */\n\t\t\"fnGetData\": null,\n\t\n\t\t/**\n\t\t * Function to set data for a cell in the column. You should <b>never</b>\n\t\t * set the data directly to _aData internally in DataTables - always use\n\t\t * this method. It allows mData to function as required. This function\n\t\t * is automatically assigned by the column initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {*} sValue Value to set\n\t\t *  @default null\n\t\t */\n\t\t\"fnSetData\": null,\n\t\n\t\t/**\n\t\t * Property to read the value for the cells in the column from the data\n\t\t * source array / object. If null, then the default content is used, if a\n\t\t * function is given then the return from the function is used.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mData\": null,\n\t\n\t\t/**\n\t\t * Partner property to mData which is used (only when defined) to get\n\t\t * the data - i.e. it is basically the same as mData, but without the\n\t\t * 'set' option, and also the data fed to it is the result from mData.\n\t\t * This is the rendering method to match the data method of mData.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mRender\": null,\n\t\n\t\t/**\n\t\t * Unique header TH/TD element for this column - this is what the sorting\n\t\t * listener is attached to (if sorting is enabled.)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTh\": null,\n\t\n\t\t/**\n\t\t * Unique footer TH/TD element for this column (if there is one). Not used\n\t\t * in DataTables as such, but can be used for plug-ins to reference the\n\t\t * footer for each column.\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTf\": null,\n\t\n\t\t/**\n\t\t * The class to apply to all TD elements in the table's TBODY for the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sClass\": null,\n\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t *  @type string\n\t\t */\n\t\t\"sContentPadding\": null,\n\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because mData\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\n\t\t/**\n\t\t * Name for the column, allowing reference to the column by name as well as\n\t\t * by index (needs a lookup to work by name).\n\t\t *  @type string\n\t\t */\n\t\t\"sName\": null,\n\t\n\t\t/**\n\t\t * Custom sorting data type - defines which of the available plug-ins in\n\t\t * afnSortData the custom sorting will use - if any is defined.\n\t\t *  @type string\n\t\t *  @default std\n\t\t */\n\t\t\"sSortDataType\": 'std',\n\t\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClass\": null,\n\t\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column -\n\t\t * when jQuery UI theming is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClassJUI\": null,\n\t\n\t\t/**\n\t\t * Title of the column - what is seen in the TH element (nTh).\n\t\t *  @type string\n\t\t */\n\t\t\"sTitle\": null,\n\t\n\t\t/**\n\t\t * Column sorting and filtering type\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sType\": null,\n\t\n\t\t/**\n\t\t * Width of the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidth\": null,\n\t\n\t\t/**\n\t\t * Width of the column when it was first \"encountered\"\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidthOrig\": null\n\t};\n\t\n\t\n\t/*\n\t * Developer note: The properties of the object below are given in Hungarian\n\t * notation, that was used as the interface for DataTables prior to v1.10, however\n\t * from v1.10 onwards the primary interface is camel case. In order to avoid\n\t * breaking backwards compatibility utterly with this change, the Hungarian\n\t * version is still, internally the primary interface, but is is not documented\n\t * - hence the @name tags in each doc comment. This allows a Javascript function\n\t * to create a map from Hungarian notation to camel case (going the other direction\n\t * would require each property to be listed, which would at around 3K to the size\n\t * of DataTables, while this method is about a 0.5K hit.\n\t *\n\t * Ultimately this does pave the way for Hungarian notation to be dropped\n\t * completely, but that is a massive amount of work and will break current\n\t * installs (therefore is on-hold until v2).\n\t */\n\t\n\t/**\n\t * Initialisation options that can be given to DataTables at initialisation\n\t * time.\n\t *  @namespace\n\t */\n\tDataTable.defaults = {\n\t\t/**\n\t\t * An array of data to use for the table, passed in at initialisation which\n\t\t * will be used in preference to any data which is already in the DOM. This is\n\t\t * particularly useful for constructing tables purely in Javascript, for\n\t\t * example with a custom Ajax call.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.data\n\t\t *\n\t\t *  @example\n\t\t *    // Using a 2D array data source\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n\t\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\" },\n\t\t *          { \"title\": \"Browser\" },\n\t\t *          { \"title\": \"Platform\" },\n\t\t *          { \"title\": \"Version\" },\n\t\t *          { \"title\": \"Grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using an array of objects as a data source (`data`)\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 4.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  4,\n\t\t *            \"grade\":    \"X\"\n\t\t *          },\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 5.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  5,\n\t\t *            \"grade\":    \"C\"\n\t\t *          }\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n\t\t *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n\t\t *          { \"title\": \"Platform\", \"data\": \"platform\" },\n\t\t *          { \"title\": \"Version\",  \"data\": \"version\" },\n\t\t *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaData\": null,\n\t\n\t\n\t\t/**\n\t\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t\t * initialisation. You can define which column(s) the sort is performed\n\t\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t\t * should contain an array for each column to be sorted initially containing\n\t\t * the column's index and a direction string ('asc' or 'desc').\n\t\t *  @type array\n\t\t *  @default [[0,'asc']]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.order\n\t\t *\n\t\t *  @example\n\t\t *    // Sort by 3rd column first, and then 4th column\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": [[2,'asc'], [3,'desc']]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *    // No initial sorting\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": []\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaSorting\": [[0,'asc']],\n\t\n\t\n\t\t/**\n\t\t * This parameter is basically identical to the `sorting` parameter, but\n\t\t * cannot be overridden by user interaction with the table. What this means\n\t\t * is that you could have a column (visible or hidden) which the sorting\n\t\t * will always be forced on first - any sorting after that (from the user)\n\t\t * will then be performed as required. This can be useful for grouping rows\n\t\t * together.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.orderFixed\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderFixed\": [[0,'asc']]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\t\n\t\n\t\t/**\n\t\t * DataTables can be instructed to load data to display in the table from a\n\t\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t\t *\n\t\t * The `ajax` property has three different modes of operation, depending on\n\t\t * how it is defined. These are:\n\t\t *\n\t\t * * `string` - Set the URL from where the data should be loaded from.\n\t\t * * `object` - Define properties for `jQuery.ajax`.\n\t\t * * `function` - Custom data get function\n\t\t *\n\t\t * `string`\n\t\t * --------\n\t\t *\n\t\t * As a string, the `ajax` property simply defines the URL from which\n\t\t * DataTables will load data.\n\t\t *\n\t\t * `object`\n\t\t * --------\n\t\t *\n\t\t * As an object, the parameters in the object are passed to\n\t\t * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\n\t\t * of the Ajax request. DataTables has a number of default parameters which\n\t\t * you can override using this option. Please refer to the jQuery\n\t\t * documentation for a full description of the options available, although\n\t\t * the following parameters provide additional options in DataTables or\n\t\t * require special consideration:\n\t\t *\n\t\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t\t *   can also be used as a function to manipulate the data DataTables sends\n\t\t *   to the server. The function takes a single parameter, an object of\n\t\t *   parameters with the values that DataTables has readied for sending. An\n\t\t *   object may be returned which will be merged into the DataTables\n\t\t *   defaults, or you can add the items to the object that was passed in and\n\t\t *   not return anything from the function. This supersedes `fnServerParams`\n\t\t *   from DataTables 1.9-.\n\t\t *\n\t\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t\t *   from an Ajax source or for server-side processing - this parameter\n\t\t *   allows that property to be changed. You can use Javascript dotted\n\t\t *   object notation to get a data source for multiple levels of nesting, or\n\t\t *   it my be used as a function. As a function it takes a single parameter,\n\t\t *   the JSON returned from the server, which can be manipulated as\n\t\t *   required, with the returned value being that used by DataTables as the\n\t\t *   data source for the table. This supersedes `sAjaxDataProp` from\n\t\t *   DataTables 1.9-.\n\t\t *\n\t\t * * `success` - Should not be overridden it is used internally in\n\t\t *   DataTables. To manipulate / transform the data returned by the server\n\t\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t\t *\n\t\t * `function`\n\t\t * ----------\n\t\t *\n\t\t * As a function, making the Ajax call is left up to yourself allowing\n\t\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t\t * than Ajax could be used to obtain the required data, such as Web storage\n\t\t * or an AIR database.\n\t\t *\n\t\t * The function is given four parameters and no return is required. The\n\t\t * parameters are:\n\t\t *\n\t\t * 1. _object_ - Data to send to the server\n\t\t * 2. _function_ - Callback function that must be executed when the required\n\t\t *    data has been obtained. That data should be passed into the callback\n\t\t *    as the only parameter\n\t\t * 3. _object_ - DataTables settings object for the table\n\t\t *\n\t\t * Note that this supersedes `fnServerData` from DataTables 1.9-.\n\t\t *\n\t\t *  @type string|object|function\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.ajax\n\t\t *  @since 1.10.0\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax.\n\t\t *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": \"data.json\"\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n\t\t *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"tableData\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n\t\t *   // from a plain array rather than an array in an object\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Manipulate the data returned from the server - add a link to data\n\t\t *   // (note this can, should, be done using `render` for the column - this\n\t\t *   // is just a simple example of how the data can be manipulated).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": function ( json ) {\n\t\t *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n\t\t *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n\t\t *         }\n\t\t *         return json;\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Add data to the request\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"data\": function ( d ) {\n\t\t *         return {\n\t\t *           \"extra_search\": $('#extra').val()\n\t\t *         };\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Send request as POST\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"type\": \"POST\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get the data from localStorage (could interface with a form for\n\t\t *   // adding, editing and removing rows).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": function (data, callback, settings) {\n\t\t *       callback(\n\t\t *         JSON.parse( localStorage.getItem('dataTablesData') )\n\t\t *       );\n\t\t *     }\n\t\t *   } );\n\t\t */\n\t\t\"ajax\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to readily specify the entries in the length drop\n\t\t * down menu that DataTables shows when pagination is enabled. It can be\n\t\t * either a 1D array of options which will be used for both the displayed\n\t\t * option and the value, or a 2D array which will use the array in the first\n\t\t * position as the value, and the array in the second position as the\n\t\t * displayed options (useful for language strings such as 'All').\n\t\t *\n\t\t * Note that the `pageLength` property will be automatically set to the\n\t\t * first value given in this array, unless `pageLength` is also provided.\n\t\t *  @type array\n\t\t *  @default [ 10, 25, 50, 100 ]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.lengthMenu\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\t\n\t\n\t\t/**\n\t\t * The `columns` option in the initialisation parameter allows you to define\n\t\t * details about the way individual columns behave. For a full list of\n\t\t * column options that can be set, please see\n\t\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t\t * define your columns, you must have an entry in the array for every single\n\t\t * column that you have in your table (these can be null if you don't which\n\t\t * to specify any options).\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.column\n\t\t */\n\t\t\"aoColumns\": null,\n\t\n\t\t/**\n\t\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t\t * column, multiple columns, or all columns, using the `targets` property of\n\t\t * each object in the array. This allows great flexibility when creating\n\t\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t\t * columns you specifically want. `columnDefs` may use any of the column\n\t\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t\t * have `targets` defined in each object in the array. Values in the `targets`\n\t\t * array may be:\n\t\t *   <ul>\n\t\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t\t *     <li>a negative integer - column index counting from the right</li>\n\t\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t\t *   </ul>\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.columnDefs\n\t\t */\n\t\t\"aoColumnDefs\": null,\n\t\n\t\n\t\t/**\n\t\t * Basically the same as `search`, this parameter defines the individual column\n\t\t * filtering state at initialisation time. The array must be of the same size\n\t\t * as the number of columns, and each element be an object with the parameters\n\t\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t\t * accepted and the default will be used.\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.searchCols\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchCols\": [\n\t\t *          null,\n\t\t *          { \"search\": \"My filter\" },\n\t\t *          null,\n\t\t *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aoSearchCols\": [],\n\t\n\t\n\t\t/**\n\t\t * An array of CSS classes that should be applied to displayed rows. This\n\t\t * array may be of any length, and DataTables will apply each class\n\t\t * sequentially, looping when required.\n\t\t *  @type array\n\t\t *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n\t\t *    options</i>\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.stripeClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"asStripeClasses\": null,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable automatic column width calculation. This can be disabled\n\t\t * as an optimisation (it takes some time to calculate the widths) if the\n\t\t * tables widths are passed in using `columns`.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.autoWidth\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"autoWidth\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bAutoWidth\": true,\n\t\n\t\n\t\t/**\n\t\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t\t * are using an Ajax or JS data source for the table. This option, when set to\n\t\t * true, will cause DataTables to defer the creation of the table elements for\n\t\t * each row until they are needed for a draw - saving a significant amount of\n\t\t * time.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.deferRender\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajax\": \"sources/arrays.txt\",\n\t\t *        \"deferRender\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDeferRender\": false,\n\t\n\t\n\t\t/**\n\t\t * Replace a DataTable which matches the given selector and replace it with\n\t\t * one which has the properties of the new initialisation object passed. If no\n\t\t * table matches the selector, then the new DataTable will be constructed as\n\t\t * per normal.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.destroy\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"srollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      // Some time later....\n\t\t *      $('#example').dataTable( {\n\t\t *        \"filter\": false,\n\t\t *        \"destroy\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDestroy\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t\t * that it allows the end user to input multiple words (space separated) and\n\t\t * will match a row containing those words, even if not in the order that was\n\t\t * specified (this allow matching across multiple columns). Note that if you\n\t\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t\t * default filtering input box and retain filtering abilities, please use\n\t\t * {@link DataTable.defaults.dom}.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.searching\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searching\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bFilter\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the table information display. This shows information\n\t\t * about the data that is currently visible on the page, including information\n\t\t * about filtered data if that action is being performed.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.info\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"info\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bInfo\": true,\n\t\n\t\n\t\t/**\n\t\t * Allows the end user to select the size of a formatted page from a select\n\t\t * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.lengthChange\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthChange\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bLengthChange\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable pagination.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.paging\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"paging\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bPaginate\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of a 'processing' indicator when the table is\n\t\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t\t * large amounts of data where it can take a noticeable amount of time to sort\n\t\t * the entries.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.processing\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"processing\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bProcessing\": false,\n\t\n\t\n\t\t/**\n\t\t * Retrieve the DataTables object for the given selector. Note that if the\n\t\t * table has already been initialised, this parameter will cause DataTables\n\t\t * to simply return the object that has already been set up - it will not take\n\t\t * account of any changes you might have made to the initialisation object\n\t\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t\t * you need.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.retrieve\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      initTable();\n\t\t *      tableActions();\n\t\t *    } );\n\t\t *\n\t\t *    function initTable ()\n\t\t *    {\n\t\t *      return $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false,\n\t\t *        \"retrieve\": true\n\t\t *      } );\n\t\t *    }\n\t\t *\n\t\t *    function tableActions ()\n\t\t *    {\n\t\t *      var table = initTable();\n\t\t *      // perform API operations with oTable\n\t\t *    }\n\t\t */\n\t\t\"bRetrieve\": false,\n\t\n\t\n\t\t/**\n\t\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t\t * the table's viewport to the given height at all times (useful for layout).\n\t\t * However, this can look odd when filtering data down to a small data set,\n\t\t * and the footer is left \"floating\" further down. This parameter (when\n\t\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t\t * the result set will fit within the given Y height.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollCollapse\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200\",\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bScrollCollapse\": false,\n\t\n\t\n\t\t/**\n\t\t * Configure DataTables to use server-side processing. Note that the\n\t\t * `ajax` parameter must also be given in order to give DataTables a\n\t\t * source to obtain the required data for each draw.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverSide\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"xhr.php\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bServerSide\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t\t * disabled by the `sortable` option for each column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.ordering\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ordering\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSort\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or display DataTables' ability to sort multiple columns at the\n\t\t * same time (activated by shift-click by the user).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderMulti\n\t\t *\n\t\t *  @example\n\t\t *    // Disable multiple column sorting ability\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderMulti\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortMulti\": true,\n\t\n\t\n\t\t/**\n\t\t * Allows control over whether DataTables should use the top (true) unique\n\t\t * cell that is found for a single column, or the bottom (false - default).\n\t\t * This is useful when using complex headers.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderCellsTop\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderCellsTop\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortCellsTop\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t\t * presented as a feature switch as it can increase processing time (while\n\t\t * classes are removed and added) so for large data sets you might want to\n\t\t * turn this off.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.orderClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderClasses\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortClasses\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t\t * used to save table display information such as pagination information,\n\t\t * display length, filtering and sorting. As such when the end user reloads\n\t\t * the page the display display will match what thy had previously set up.\n\t\t *\n\t\t * Due to the use of `localStorage` the default state saving is not supported\n\t\t * in IE6 or 7. If state saving is required in those browsers, use\n\t\t * `stateSaveCallback` to provide a storage solution such as cookies.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.stateSave\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bStateSave\": false,\n\t\n\t\n\t\t/**\n\t\t * This function is called when a TR element is created (and all TD child\n\t\t * elements have been inserted), or registered if using a DOM source, allowing\n\t\t * manipulation of the TR element (adding classes etc).\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} dataIndex The index of this row in the internal aoData array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.createdRow\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"createdRow\": function( row, data, dataIndex ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" )\n\t\t *          {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedRow\": null,\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify any aspect you want about the created DOM.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.drawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"drawCallback\": function( settings ) {\n\t\t *          alert( 'DataTables has redrawn the table' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Identical to fnHeaderCallback() but for the table footer this function\n\t\t * allows you to modify the table footer on every 'draw' event.\n\t\t *  @type function\n\t\t *  @param {node} foot \"TR\" element for the footer\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.footerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n\t\t *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnFooterCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * When rendering large numbers in the information element for the table\n\t\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t\t * function will override the default method DataTables uses.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {int} toFormat number to be formatted\n\t\t *  @returns {string} formatted string for DataTables to show the number\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.formatNumber\n\t\t *\n\t\t *  @example\n\t\t *    // Format a number using a single quote for the separator (note that\n\t\t *    // this can also be done with the language.thousands option)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"formatNumber\": function ( toFormat ) {\n\t\t *          return toFormat.toString().replace(\n\t\t *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n\t\t *          );\n\t\t *        };\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnFormatNumber\": function ( toFormat ) {\n\t\t\treturn toFormat.toString().replace(\n\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\t\tthis.oLanguage.sThousands\n\t\t\t);\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify the header row. This can be used to calculate and\n\t\t * display useful information about the table.\n\t\t *  @type function\n\t\t *  @param {node} head \"TR\" element for the header\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.headerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"fheaderCallback\": function( head, data, start, end, display ) {\n\t\t *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnHeaderCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * The information element can be used to convey information about the current\n\t\t * state of the table. Although the internationalisation options presented by\n\t\t * DataTables are quite capable of dealing with most customisations, there may\n\t\t * be times where you wish to customise the string further. This callback\n\t\t * allows you to do exactly that.\n\t\t *  @type function\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {int} start Starting position in data for the draw\n\t\t *  @param {int} end End position in data for the draw\n\t\t *  @param {int} max Total number of rows in the table (regardless of\n\t\t *    filtering)\n\t\t *  @param {int} total Total number of rows in the data set, after filtering\n\t\t *  @param {string} pre The string that DataTables has formatted using it's\n\t\t *    own rules\n\t\t *  @returns {string} The string to be displayed in the information element.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.infoCallback\n\t\t *\n\t\t *  @example\n\t\t *    $('#example').dataTable( {\n\t\t *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n\t\t *        return start +\" to \"+ end;\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\t\"fnInfoCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Called when the table has been initialised. Normally DataTables will\n\t\t * initialise sequentially and there will be no need for this function,\n\t\t * however, this does not hold true when using external language information\n\t\t * since that is obtained using an async XHR call.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} json The JSON object request from the server - only\n\t\t *    present if client-side Ajax sourced data is used\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.initComplete\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"initComplete\": function(settings, json) {\n\t\t *          alert( 'DataTables has finished its initialisation.' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnInitComplete\": null,\n\t\n\t\n\t\t/**\n\t\t * Called at the very start of each table draw and can be used to cancel the\n\t\t * draw by returning false, any other return (including undefined) results in\n\t\t * the full draw occurring).\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @returns {boolean} False will cancel the draw, anything else (including no\n\t\t *    return) will allow it to complete.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.preDrawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"preDrawCallback\": function( settings ) {\n\t\t *          if ( $('#test').val() == 1 ) {\n\t\t *            return false;\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnPreDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * This function allows you to 'post process' each row after it have been\n\t\t * generated for each table draw, but before it is rendered on screen. This\n\t\t * function might be used for setting the row class name etc.\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} displayIndex The display index for the current table draw\n\t\t *  @param {int} displayIndexFull The index of the data in the full list of\n\t\t *    rows (after filtering)\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.rowCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" ) {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnRowCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * This parameter allows you to override the default function which obtains\n\t\t * the data from the server so something more suitable for your application.\n\t\t * For example you could use POST data, or pull information from a Gears or\n\t\t * AIR database.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {string} source HTTP source to obtain the data from (`ajax`)\n\t\t *  @param {array} data A key/value pair object containing the data to send\n\t\t *    to the server\n\t\t *  @param {function} callback to be called on completion of the data get\n\t\t *    process that will draw the data on the page.\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverData\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerData\": null,\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t *  It is often useful to send extra data to the server when making an Ajax\n\t\t * request - for example custom filtering information, and this callback\n\t\t * function makes it trivial to send extra information to the server. The\n\t\t * passed in parameter is the data set that has been constructed by\n\t\t * DataTables, and you can add to this or modify it as you require.\n\t\t *  @type function\n\t\t *  @param {array} data Data array (array of objects which are name/value\n\t\t *    pairs) that has been constructed by DataTables and will be sent to the\n\t\t *    server. In the case of Ajax sourced data with server-side processing\n\t\t *    this will be an empty array, for server-side processing there will be a\n\t\t *    significant number of parameters!\n\t\t *  @returns {undefined} Ensure that you modify the data array passed in,\n\t\t *    as this is passed by reference.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverParams\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Load the table state. With this function you can define from where, and how, the\n\t\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} callback Callback that can be executed when done. It\n\t\t *    should be passed the loaded state object.\n\t\t *  @return {object} The DataTables state object to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadCallback\": function (settings, callback) {\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_load\",\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"success\": function (json) {\n\t\t *              callback( json );\n\t\t *            }\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadCallback\": function ( settings ) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(\n\t\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} catch (e) {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the saved state prior to loading that state.\n\t\t * This callback is called when the table is loading state from the stored data, but\n\t\t * prior to the settings object being modified by the saved state. Note that for\n\t\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t\t * a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that is to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never loaded\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Disallow state loading by returning false\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          return false;\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Callback that is called when the state has been loaded from the state saving method\n\t\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that was loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoaded\n\t\t *\n\t\t *  @example\n\t\t *    // Show an alert with the filtering value that was saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoaded\": function (settings, data) {\n\t\t *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoaded\": null,\n\t\n\t\n\t\t/**\n\t\t * Save the table state. This function allows you to define where and how the state\n\t\t * information for the table is stored By default DataTables will use `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveCallback\": function (settings, data) {\n\t\t *          // Send an Ajax request to the server with the state object\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_save\",\n\t\t *            \"data\": data,\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"method\": \"POST\"\n\t\t *            \"success\": function () {}\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveCallback\": function ( settings, data ) {\n\t\t\ttry {\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\n\t\t\t\t\tJSON.stringify( data )\n\t\t\t\t);\n\t\t\t} catch (e) {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the state to be saved. Called when the table\n\t\t * has changed state a new state save is required. This method allows modification of\n\t\t * the state saving object prior to actually doing the save, including addition or\n\t\t * other state properties or modification. Note that for plug-in authors, you should\n\t\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Duration for which the saved state information is considered valid. After this period\n\t\t * has elapsed the state will be returned to the default.\n\t\t * Value is given in seconds.\n\t\t *  @type int\n\t\t *  @default 7200 <i>(2 hours)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.stateDuration\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateDuration\": 60*60*24; // 1 day\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iStateDuration\": 7200,\n\t\n\t\n\t\t/**\n\t\t * When enabled DataTables will not make a request to the server for the first\n\t\t * page draw - rather it will use the data already on the page (no sorting etc\n\t\t * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n\t\t * is used to indicate that deferred loading is required, but it is also used\n\t\t * to tell DataTables how many records there are in the full table (allowing\n\t\t * the information element and pagination to be displayed correctly). In the case\n\t\t * where a filtering is applied to the table on initial load, this can be\n\t\t * indicated by giving the parameter as an array, where the first element is\n\t\t * the number of records available after filtering and the second element is the\n\t\t * number of records without filtering (allowing the table information element\n\t\t * to be shown correctly).\n\t\t *  @type int | array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.deferLoading\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records available in the table, no filtering applied\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": 57\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": [ 57, 100 ],\n\t\t *        \"search\": {\n\t\t *          \"search\": \"my_filter\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iDeferLoading\": null,\n\t\n\t\n\t\t/**\n\t\t * Number of rows to display on a single page when using pagination. If\n\t\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t\t * this to a custom setting using a pop-up menu.\n\t\t *  @type int\n\t\t *  @default 10\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pageLength\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pageLength\": 50\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayLength\": 10,\n\t\n\t\n\t\t/**\n\t\t * Define the starting point for data display when using DataTables with\n\t\t * pagination. Note that this parameter is the number of records, rather than\n\t\t * the page number, so if you have 10 records per page and want to start on\n\t\t * the third page, it should be \"20\".\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.displayStart\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"displayStart\": 20\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayStart\": 0,\n\t\n\t\n\t\t/**\n\t\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t\t * allows you to tab through the controls and press the enter key to activate them.\n\t\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t\t * disable built-in keyboard navigation.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.tabIndex\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"tabIndex\": 1\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\n\t\t/**\n\t\t * Classes that DataTables assigns to the various components and features\n\t\t * that it adds to the HTML table. This allows classes to be configured\n\t\t * during initialisation in addition to through the static\n\t\t * {@link DataTable.ext.oStdClasses} object).\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.classes\n\t\t */\n\t\t\"oClasses\": {},\n\t\n\t\n\t\t/**\n\t\t * All strings that DataTables uses in the user interface that it creates\n\t\t * are defined in this object, allowing you to modified them individually or\n\t\t * completely replace them all as required.\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.language\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t\t * must be internationalised as well).\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.aria\n\t\t\t */\n\t\t\t\"oAria\": {\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted ascending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortAscending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortAscending\": \" - click/return to sort ascending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortAscending\": \": activate to sort column ascending\",\n\t\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted descending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortDescending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortDescending\": \" - click/return to sort descending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortDescending\": \": activate to sort column descending\"\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t\t * control types.\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.paginate\n\t\t\t */\n\t\t\t\"oPaginate\": {\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the first page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default First\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.first\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"first\": \"First page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sFirst\": \"First\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the last page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Last\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.last\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"last\": \"Last page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sLast\": \"Last\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'next' pagination button (to take the user to the\n\t\t\t\t * next page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Next\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.next\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"next\": \"Next page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sNext\": \"Next\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'previous' pagination button (to take the user to\n\t\t\t\t * the previous page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Previous\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.previous\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"previous\": \"Previous page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sPrevious\": \"Previous\"\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t\t * instead (either the default or given value).\n\t\t\t *  @type string\n\t\t\t *  @default No data available in table\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.emptyTable\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"emptyTable\": \"No data available in table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sEmptyTable\": \"No data available in table\",\n\t\n\t\n\t\t\t/**\n\t\t\t * This string gives information to the end user about the information\n\t\t\t * that is current on display on the page. The following tokens can be\n\t\t\t * used in the string and will be dynamically replaced as the table\n\t\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t\t * removed as needed by the language requires:\n\t\t\t *\n\t\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t\t * * `\\_PAGE\\_` - Current page number\n\t\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t\t *\n\t\t\t *  @type string\n\t\t\t *  @default Showing _START_ to _END_ of _TOTAL_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.info\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Display information string for when the table is empty. Typically the\n\t\t\t * format of this string should match `info`.\n\t\t\t *  @type string\n\t\t\t *  @default Showing 0 to 0 of 0 entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoEmpty\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoEmpty\": \"No entries to show\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * When a user filters the information in a table, this string is appended\n\t\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t\t *  @type string\n\t\t\t *  @default (filtered from _MAX_ total entries)\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoFiltered\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n\t\n\t\n\t\t\t/**\n\t\t\t * If can be useful to append extra information to the info string at times,\n\t\t\t * and this variable does exactly that. This information will be appended to\n\t\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t\t * being used) at all times.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoPostFix\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoPostFix\": \"All records shown are derived from real information.\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoPostFix\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * This decimal place operator is a little different from the other\n\t\t\t * language options since DataTables doesn't output floating point\n\t\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t\t * what this parameter does is modify the sort methods of the table so\n\t\t\t * that numbers which are in a format which has a character other than\n\t\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t\t *\n\t\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t\t * the same table and still be sortable, the table must be consistent.\n\t\t\t * However, multiple different tables on the page can use different\n\t\t\t * decimal place characters.\n\t\t\t *  @type string\n\t\t\t *  @default \n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.decimal\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"decimal\": \",\"\n\t\t\t *          \"thousands\": \".\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sDecimal\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t\t * used to format large numbers that are used in the table information.\n\t\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t\t * character you wish with this parameter.\n\t\t\t *  @type string\n\t\t\t *  @default ,\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.thousands\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"thousands\": \"'\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sThousands\": \",\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t\t * with a custom select box if required.\n\t\t\t *  @type string\n\t\t\t *  @default Show _MENU_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.lengthMenu\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language change only\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": \"Display _MENU_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language and options change\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": 'Display <select>'+\n\t\t\t *            '<option value=\"10\">10</option>'+\n\t\t\t *            '<option value=\"20\">20</option>'+\n\t\t\t *            '<option value=\"30\">30</option>'+\n\t\t\t *            '<option value=\"40\">40</option>'+\n\t\t\t *            '<option value=\"50\">50</option>'+\n\t\t\t *            '<option value=\"-1\">All</option>'+\n\t\t\t *            '</select> records'\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLengthMenu\": \"Show _MENU_ entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t\t * parameter is not used when loading data by server-side processing, just\n\t\t\t * Ajax sourced data with client-side processing.\n\t\t\t *  @type string\n\t\t\t *  @default Loading...\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.loadingRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"loadingRecords\": \"Please wait - loading...\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLoadingRecords\": \"Loading...\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Text which is displayed when the table is processing a user action\n\t\t\t * (usually a sort command or similar).\n\t\t\t *  @type string\n\t\t\t *  @default Processing...\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.processing\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"processing\": \"DataTables is currently busy\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sProcessing\": \"Processing...\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Details the actions that will be taken when the user types into the\n\t\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t\t * then the input box is appended to the string automatically.\n\t\t\t *  @type string\n\t\t\t *  @default Search:\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.search\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Input text box will be appended at the end automatically\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Filter records:\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Specify where the filter should appear\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Apply filter _INPUT_ to table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSearch\": \"Search:\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t\t *  @type string\n\t\t\t *  @default \n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t\t */\n\t\t\t\"sSearchPlaceholder\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * All of the language information can be stored in a file on the\n\t\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t\t * and the object has the same properties as the oLanguage object in the\n\t\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t\t * the example language files to see how this works in action.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string - i.e. disabled</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.url\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sUrl\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Text shown inside the table records when the is no information to be\n\t\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t\t * information in the table at all (regardless of filtering).\n\t\t\t *  @type string\n\t\t\t *  @default No matching records found\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.zeroRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"zeroRecords\": \"No records to display\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sZeroRecords\": \"No matching records found\"\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to have define the global filtering state at\n\t\t * initialisation time. As an object the `search` parameter must be\n\t\t * defined, but all other parameters are optional. When `regex` is true,\n\t\t * the search string will be treated as a regular expression, when false\n\t\t * (default) it will be treated as a straight string. When `smart`\n\t\t * DataTables will use it's smart filtering methods (to word match at\n\t\t * any point in the data), when false this will not be done.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.search\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"search\": {\"search\": \"Initial search\"}\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * By default DataTables will look for the property `data` (or `aaData` for\n\t\t * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n\t\t * source or for server-side processing - this parameter allows that\n\t\t * property to be changed. You can use Javascript dotted object notation to\n\t\t * get a data source for multiple levels of nesting.\n\t\t *  @type string\n\t\t *  @default data\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxDataProp\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxDataProp\": \"data\",\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * You can instruct DataTables to load data from an external\n\t\t * source using this parameter (use aData if you want to pass data in you\n\t\t * already have). Simply provide a url a JSON object can be obtained from.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxSource\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxSource\": null,\n\t\n\t\n\t\t/**\n\t\t * This initialisation variable allows you to specify exactly where in the\n\t\t * DOM you want DataTables to inject the various controls it adds to the page\n\t\t * (for example you might want the pagination controls at the top of the\n\t\t * table). DIV elements (with or without a custom class) can also be added to\n\t\t * aid styling. The follow syntax is used:\n\t\t *   <ul>\n\t\t *     <li>The following options are allowed:\n\t\t *       <ul>\n\t\t *         <li>'l' - Length changing</li>\n\t\t *         <li>'f' - Filtering input</li>\n\t\t *         <li>'t' - The table!</li>\n\t\t *         <li>'i' - Information</li>\n\t\t *         <li>'p' - Pagination</li>\n\t\t *         <li>'r' - pRocessing</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following constants are allowed:\n\t\t *       <ul>\n\t\t *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n\t\t *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following syntax is expected:\n\t\t *       <ul>\n\t\t *         <li>'&lt;' and '&gt;' - div elements</li>\n\t\t *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n\t\t *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>Examples:\n\t\t *       <ul>\n\t\t *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n\t\t *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *   </ul>\n\t\t *  @type string\n\t\t *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n\t\t *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.dom\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDom\": \"lfrtip\",\n\t\n\t\n\t\t/**\n\t\t * Search delay option. This will throttle full table searches that use the\n\t\t * DataTables provided search input element (it does not effect calls to\n\t\t * `dt-api search()`, providing a delay before the search is made.\n\t\t *  @type integer\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.searchDelay\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchDelay\": 200\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"searchDelay\": null,\n\t\n\t\n\t\t/**\n\t\t * DataTables features six different built-in options for the buttons to\n\t\t * display for pagination control:\n\t\t *\n\t\t * * `numbers` - Page number buttons only\n\t\t * * `simple` - 'Previous' and 'Next' buttons only\n\t\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n\t\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n\t\t *  \n\t\t * Further methods can be added using {@link DataTable.ext.oPagination}.\n\t\t *  @type string\n\t\t *  @default simple_numbers\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pagingType\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pagingType\": \"full_numbers\"\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"sPaginationType\": \"simple_numbers\",\n\t\n\t\n\t\t/**\n\t\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t\t * certain layout, or you have a large number of columns in the table, you\n\t\t * can enable x-scrolling to show the table in a viewport, which can be\n\t\t * scrolled. This property can be `true` which will allow the table to\n\t\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t\t * is recommended.\n\t\t *  @type boolean|string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollX\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": true,\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollX\": \"\",\n\t\n\t\n\t\t/**\n\t\t * This property can be used to force a DataTable to use more width than it\n\t\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t\t * table which requires to be well spaced, this parameter is useful for\n\t\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t\t * measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollXInner\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": \"100%\",\n\t\t *        \"scrollXInner\": \"110%\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollXInner\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t\t * to the given height, and enable scrolling for any data which overflows the\n\t\t * current viewport. This can be used as an alternative to paging to display\n\t\t * a lot of data in a small area (although paging and scrolling can both be\n\t\t * enabled at the same time). This property can be any CSS unit, or a number\n\t\t * (in which case it will be treated as a pixel measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollY\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollY\": \"\",\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t\t * processing or Ajax sourced data.\n\t\t *  @type string\n\t\t *  @default GET\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverMethod\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sServerMethod\": \"GET\",\n\t\n\t\n\t\t/**\n\t\t * DataTables makes use of renderers when displaying HTML elements for\n\t\t * a table. These renderers can be added or modified by plug-ins to\n\t\t * generate suitable mark-up for a site. For example the Bootstrap\n\t\t * integration plug-in for DataTables uses a paging button renderer to\n\t\t * display pagination buttons in the mark-up required by Bootstrap.\n\t\t *\n\t\t * For further information about the renderers available see\n\t\t * DataTable.ext.renderer\n\t\t *  @type string|object\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.renderer\n\t\t *\n\t\t */\n\t\t\"renderer\": null,\n\t\n\t\n\t\t/**\n\t\t * Set the data property name that DataTables should use to get a row's id\n\t\t * to set as the `id` property in the node.\n\t\t *  @type string\n\t\t *  @default DT_RowId\n\t\t *\n\t\t *  @name DataTable.defaults.rowId\n\t\t */\n\t\t\"rowId\": \"DT_RowId\"\n\t};\n\t\n\t_fnHungarianMap( DataTable.defaults );\n\t\n\t\n\t\n\t/*\n\t * Developer note - See note in model.defaults.js about the use of Hungarian\n\t * notation and camel case.\n\t */\n\t\n\t/**\n\t * Column options that can be given to DataTables at initialisation time.\n\t *  @namespace\n\t */\n\tDataTable.defaults.column = {\n\t\t/**\n\t\t * Define which column(s) an order will occur on for this column. This\n\t\t * allows a column's ordering to take multiple columns into account when\n\t\t * doing a sort or use the data from a different column. For example first\n\t\t * name / last name columns make sense to do a multi-column sort over the\n\t\t * two columns.\n\t\t *  @type array|int\n\t\t *  @default null <i>Takes the value of the column index automatically</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderData\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n\t\t *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n\t\t *          { \"orderData\": 2, \"targets\": [ 2 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderData\": [ 0, 1 ] },\n\t\t *          { \"orderData\": [ 1, 0 ] },\n\t\t *          { \"orderData\": 2 },\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aDataSort\": null,\n\t\t\"iDataSort\": -1,\n\t\n\t\n\t\t/**\n\t\t * You can control the default ordering direction, and even alter the\n\t\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t\t * using this parameter.\n\t\t *  @type array\n\t\t *  @default [ 'asc', 'desc' ]\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderSequence\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          { \"orderSequence\": [ \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ] },\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"asSorting\": [ 'asc', 'desc' ],\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering on the data in this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.searchable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"searchable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"searchable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSearchable\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable ordering on this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortable\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.visible\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"visible\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"visible\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bVisible\": true,\n\t\n\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} td The TD node that has been created\n\t\t *  @param {*} cellData The Data for the cell\n\t\t *  @param {array|object} rowData The data for the whole row\n\t\t *  @param {int} row The row index for the aoData data store\n\t\t *  @param {int} col The column index for aoColumns\n\t\t *\n\t\t *  @name DataTable.defaults.column.createdCell\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [3],\n\t\t *          \"createdCell\": function (td, cellData, rowData, row, col) {\n\t\t *            if ( cellData == \"1.7\" ) {\n\t\t *              $(td).css('color', 'blue')\n\t\t *            }\n\t\t *          }\n\t\t *        } ]\n\t\t *      });\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter has been replaced by `data` in DataTables to ensure naming\n\t\t * consistency. `dataProp` can still be used, as there is backwards\n\t\t * compatibility in DataTables for this option, but it is strongly\n\t\t * recommended that you use `data` in preference to `dataProp`.\n\t\t *  @name DataTable.defaults.column.dataProp\n\t\t */\n\t\n\t\n\t\t/**\n\t\t * This property can be used to read data from any data source property,\n\t\t * including deeply nested objects / properties. `data` can be given in a\n\t\t * number of different ways which effect its behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object. Note that\n\t\t *      function notation is recommended for use in `render` rather than\n\t\t *      `data` as it is much simpler to use as a renderer.\n\t\t * * `null` - use the original data source for the row rather than plucking\n\t\t *   data directly from it. This action has effects on two other\n\t\t *   initialisation options:\n\t\t *    * `defaultContent` - When null is given as the `data` option and\n\t\t *      `defaultContent` is specified for the column, the value defined by\n\t\t *      `defaultContent` will be used for the cell.\n\t\t *    * `render` - When null is used for the `data` option and the `render`\n\t\t *      option is specified for the column, the whole data source for the\n\t\t *      row is used for the renderer.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * `{array|object}` The data source for the row\n\t\t *      * `{string}` The type call data requested - this will be 'set' when\n\t\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t\t *        when gathering data. Note that when `undefined` is given for the\n\t\t *        type DataTables expects to get the raw data for the object back<\n\t\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t\t *    * Return:\n\t\t *      * The return value from the function is not required when 'set' is\n\t\t *        the type of call, but otherwise the return is what will be used\n\t\t *        for the data requested.\n\t\t *\n\t\t * Note that `data` is a getter and setter option. If you just require\n\t\t * formatting of data for output, you will likely want to use `render` which\n\t\t * is simply a getter and thus simpler to use.\n\t\t *\n\t\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t\t * name change reflects the flexibility of this property and is consistent\n\t\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t\t * be used by DataTables, as it automatically maps the old name to the new\n\t\t * if required.\n\t\t *\n\t\t *  @type string|int|function|null\n\t\t *  @default null <i>Use automatically calculated column index</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.data\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Read table data from objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {value},\n\t\t *    //      \"version\": {value},\n\t\t *    //      \"grade\": {value}\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/objects.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform\" },\n\t\t *          { \"data\": \"version\" },\n\t\t *          { \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Read information from deeply nested objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {\n\t\t *    //         \"inner\": {value}\n\t\t *    //      },\n\t\t *    //      \"details\": [\n\t\t *    //         {value}, {value}\n\t\t *    //      ]\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform.inner\" },\n\t\t *          { \"data\": \"details.0\" },\n\t\t *          { \"data\": \"details.1\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `data` as a function to provide different information for\n\t\t *    // sorting, filtering and display. In this case, currency (price)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": function ( source, type, val ) {\n\t\t *            if (type === 'set') {\n\t\t *              source.price = val;\n\t\t *              // Store the computed dislay and filter values for efficiency\n\t\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n\t\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n\t\t *              return;\n\t\t *            }\n\t\t *            else if (type === 'display') {\n\t\t *              return source.price_display;\n\t\t *            }\n\t\t *            else if (type === 'filter') {\n\t\t *              return source.price_filter;\n\t\t *            }\n\t\t *            // 'sort', 'type' and undefined all just use the integer\n\t\t *            return source.price;\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using default content\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null,\n\t\t *          \"defaultContent\": \"Click to edit\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using array notation - outputting a list from an array\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"name[, ]\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t */\n\t\t\"mData\": null,\n\t\n\t\n\t\t/**\n\t\t * This property is the rendering partner to `data` and it is suggested that\n\t\t * when you want to manipulate data for display (including filtering,\n\t\t * sorting etc) without altering the underlying data for the table, use this\n\t\t * property. `render` can be considered to be the the read only companion to\n\t\t * `data` which is read / write (then as such more complex). Like `data`\n\t\t * this option can be given in a number of different ways to effect its\n\t\t * behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object.\n\t\t * * `object` - use different data for the different data types requested by\n\t\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t\t *   of the object is the data type the property refers to and the value can\n\t\t *   defined using an integer, string or function using the same rules as\n\t\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t\t *   This is the default value to use if you haven't specified a value for\n\t\t *   the data type requested by DataTables.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * {array|object} The data source for the row (based on `data`)\n\t\t *      * {string} The type call data requested - this will be 'filter',\n\t\t *        'display', 'type' or 'sort'.\n\t\t *      * {array|object} The full data source for the row (not based on\n\t\t *        `data`)\n\t\t *    * Return:\n\t\t *      * The return value from the function is what will be used for the\n\t\t *        data requested.\n\t\t *\n\t\t *  @type string|int|function|object|null\n\t\t *  @default null Use the data source value.\n\t\t *\n\t\t *  @name DataTable.defaults.column.render\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Create a comma separated list from an array of objects\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          {\n\t\t *            \"data\": \"platform\",\n\t\t *            \"render\": \"[, ].name\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Execute a function to obtain data\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": \"browserName()\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // As an object, extracting different data for the different types\n\t\t *    // This would be used with a data source such as:\n\t\t *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n\t\t *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n\t\t *    // (which has both forms) is used for filtering for if a user inputs either format, while\n\t\t *    // the formatted phone number is the one that is shown in the table.\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": {\n\t\t *            \"_\": \"phone\",\n\t\t *            \"filter\": \"phone_filter\",\n\t\t *            \"display\": \"phone_display\"\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Use as a function to create a link from the data source\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"download_link\",\n\t\t *          \"render\": function ( data, type, full ) {\n\t\t *            return '<a href=\"'+data+'\">Download</a>';\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"mRender\": null,\n\t\n\t\n\t\t/**\n\t\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t\t *  @type string\n\t\t *  @default td\n\t\t *\n\t\t *  @name DataTable.defaults.column.cellType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Make the first column use TH cells\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"cellType\": \"th\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sCellType\": \"td\",\n\t\n\t\n\t\t/**\n\t\t * Class to give to each cell in this column.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.class\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"class\": \"my_class\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sClass\": \"\",\n\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t * Generally you shouldn't need this!\n\t\t *  @type string\n\t\t *  @default <i>Empty string<i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.contentPadding\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"contentPadding\": \"mmm\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sContentPadding\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because `data`\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.column.defaultContent\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\",\n\t\t *            \"targets\": [ -1 ]\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter is only used in DataTables' server-side processing. It can\n\t\t * be exceptionally useful to know what columns are being displayed on the\n\t\t * client side, and to map these to database fields. When defined, the names\n\t\t * also allow DataTables to reorder information from the server if it comes\n\t\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t\t * client-side, your server-side code does not also need updating).\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.name\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n\t\t *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n\t\t *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n\t\t *          { \"name\": \"version\", \"targets\": [ 3 ] },\n\t\t *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"name\": \"engine\" },\n\t\t *          { \"name\": \"browser\" },\n\t\t *          { \"name\": \"platform\" },\n\t\t *          { \"name\": \"version\" },\n\t\t *          { \"name\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sName\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Defines a data source type for the ordering which can be used to read\n\t\t * real-time information from the table (updating the internally cached\n\t\t * version) prior to ordering. This allows ordering to occur on user\n\t\t * editable elements such as form inputs.\n\t\t *  @type string\n\t\t *  @default std\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderDataType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n\t\t *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n\t\t *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n\t\t *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          { \"orderDataType\": \"dom-text\" },\n\t\t *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n\t\t *          { \"orderDataType\": \"dom-select\" },\n\t\t *          { \"orderDataType\": \"dom-checkbox\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sSortDataType\": \"std\",\n\t\n\t\n\t\t/**\n\t\t * The title of this column.\n\t\t *  @type string\n\t\t *  @default null <i>Derived from the 'TH' value for this column in the\n\t\t *    original HTML table.</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.title\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"My column title\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sTitle\": null,\n\t\n\t\n\t\t/**\n\t\t * The type allows you to specify how the data for this column will be\n\t\t * ordered. Four types (string, numeric, date and html (which will strip\n\t\t * HTML tags before ordering)) are currently available. Note that only date\n\t\t * formats understood by Javascript's Date() object will be accepted as type\n\t\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t\t * through plug-ins.\n\t\t *  @type string\n\t\t *  @default null <i>Auto-detected from raw data</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.type\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"type\": \"html\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"type\": \"html\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sType\": null,\n\t\n\t\n\t\t/**\n\t\t * Defining the width of the column, this parameter may take any CSS value\n\t\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t\t * been given a specific width through this interface ensuring that the table\n\t\t * remains readable.\n\t\t *  @type string\n\t\t *  @default null <i>Automatic</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.width\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"width\": \"20%\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sWidth\": null\n\t};\n\t\n\t_fnHungarianMap( DataTable.defaults.column );\n\t\n\t\n\t\n\t/**\n\t * DataTables settings object - this holds all the information needed for a\n\t * given table, including configuration, data and current application of the\n\t * table options. DataTables does not have a single instance for each DataTable\n\t * with the settings attached to that instance, but rather instances of the\n\t * DataTable \"class\" are created on-the-fly as needed (typically by a\n\t * $().dataTable() call) and the settings object is then applied to that\n\t * instance.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults} but this\n\t * one is the internal data store for DataTables's cache of columns. It should\n\t * NOT be manipulated outside of DataTables. Any configuration should be done\n\t * through the initialisation options.\n\t *  @namespace\n\t *  @todo Really should attach the settings object to individual instances so we\n\t *    don't need to create new instances on each $().dataTable() call (if the\n\t *    table already exists). It would also save passing oSettings around and\n\t *    into every single function. However, this is a very significant\n\t *    architecture change for DataTables and will almost certainly break\n\t *    backwards compatibility with older installations. This is something that\n\t *    will be done in 2.0.\n\t */\n\tDataTable.models.oSettings = {\n\t\t/**\n\t\t * Primary features of DataTables and their enablement state.\n\t\t *  @namespace\n\t\t */\n\t\t\"oFeatures\": {\n\t\n\t\t\t/**\n\t\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t\t * optimum table and columns widths (true) or not (false).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bAutoWidth\": null,\n\t\n\t\t\t/**\n\t\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t\t * needed by a driven page draw. This can give a significant speed\n\t\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t\t * difference at all fro DOM and server-side processing tables.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bDeferRender\": null,\n\t\n\t\t\t/**\n\t\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bFilter\": null,\n\t\n\t\t\t/**\n\t\t\t * Table information element (the 'Showing x of y records' div) enable\n\t\t\t * flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bInfo\": null,\n\t\n\t\t\t/**\n\t\t\t * Present a user control allowing the end user to change the page size\n\t\t\t * when pagination is enabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bLengthChange\": null,\n\t\n\t\t\t/**\n\t\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t\t * changing must also be disabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bPaginate\": null,\n\t\n\t\t\t/**\n\t\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t\t * user request - typically an Ajax request for server-side processing.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bProcessing\": null,\n\t\n\t\t\t/**\n\t\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t\t * get all data from the server for every draw - there is no filtering,\n\t\t\t * sorting or paging done on the client-side.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bServerSide\": null,\n\t\n\t\t\t/**\n\t\t\t * Sorting enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSort\": null,\n\t\n\t\t\t/**\n\t\t\t * Multi-column sorting\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortMulti\": null,\n\t\n\t\t\t/**\n\t\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t\t * there is a lot of DOM interaction.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortClasses\": null,\n\t\n\t\t\t/**\n\t\t\t * State saving enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bStateSave\": null\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Scrolling settings for a table.\n\t\t *  @namespace\n\t\t */\n\t\t\"oScroll\": {\n\t\t\t/**\n\t\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t\t * table container down to the height of the table (when true).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bCollapse\": null,\n\t\n\t\t\t/**\n\t\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t\t * during table initialisation.\n\t\t\t *  @type int\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"iBarWidth\": 0,\n\t\n\t\t\t/**\n\t\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t\t * disabled if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sX\": null,\n\t\n\t\t\t/**\n\t\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t\t * should not need to use this.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t *  @deprecated\n\t\t\t */\n\t\t\t\"sXInner\": null,\n\t\n\t\t\t/**\n\t\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t\t * if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sY\": null\n\t\t},\n\t\n\t\t/**\n\t\t * Language information for the table.\n\t\t *  @namespace\n\t\t *  @extends DataTable.defaults.oLanguage\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Information callback function. See\n\t\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t\t *  @type function\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"fnInfoCallback\": null\n\t\t},\n\t\n\t\t/**\n\t\t * Browser support parameters\n\t\t *  @namespace\n\t\t */\n\t\t\"oBrowser\": {\n\t\t\t/**\n\t\t\t * Indicate if the browser incorrectly calculates width:100% inside a\n\t\t\t * scrolling element (IE6/7)\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollOversize\": false,\n\t\n\t\t\t/**\n\t\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t\t * scrolling container - needed for rtl language layout, although not\n\t\t\t * all browsers move the scrollbar (Safari).\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollbarLeft\": false,\n\t\n\t\t\t/**\n\t\t\t * Flag for if `getBoundingClientRect` is fully supported or not\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bBounding\": false,\n\t\n\t\t\t/**\n\t\t\t * Browser scrollbar width\n\t\t\t *  @type integer\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"barWidth\": 0\n\t\t},\n\t\n\t\n\t\t\"ajax\": null,\n\t\n\t\n\t\t/**\n\t\t * Array referencing the nodes which are used for the features. The\n\t\t * parameters of this object match what is allowed by sDom - i.e.\n\t\t *   <ul>\n\t\t *     <li>'l' - Length changing</li>\n\t\t *     <li>'f' - Filtering input</li>\n\t\t *     <li>'t' - The table!</li>\n\t\t *     <li>'i' - Information</li>\n\t\t *     <li>'p' - Pagination</li>\n\t\t *     <li>'r' - pRocessing</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aanFeatures\": [],\n\t\n\t\t/**\n\t\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t\t * information.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoData\": [],\n\t\n\t\t/**\n\t\t * Array of indexes which are in the current display (after filtering etc)\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplay\": [],\n\t\n\t\t/**\n\t\t * Array of indexes for display - no filtering\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplayMaster\": [],\n\t\n\t\t/**\n\t\t * Map of row ids to data indexes\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"aIds\": {},\n\t\n\t\t/**\n\t\t * Store information about each column that is in use\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoColumns\": [],\n\t\n\t\t/**\n\t\t * Store information about the table's header\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeader\": [],\n\t\n\t\t/**\n\t\t * Store information about the table's footer\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooter\": [],\n\t\n\t\t/**\n\t\t * Store the applied global search information in case we want to force a\n\t\t * research or compare the old search to a new one.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t */\n\t\t\"oPreviousSearch\": {},\n\t\n\t\t/**\n\t\t * Store the applied search for each column - see\n\t\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t\t * filtering information for each column.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreSearchCols\": [],\n\t\n\t\t/**\n\t\t * Sorting that is applied to the table. Note that the inner arrays are\n\t\t * used in the following manner:\n\t\t * <ul>\n\t\t *   <li>Index 0 - column number</li>\n\t\t *   <li>Index 1 - current sorting direction</li>\n\t\t * </ul>\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @todo These inner arrays should really be objects\n\t\t */\n\t\t\"aaSorting\": null,\n\t\n\t\t/**\n\t\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t\t * aaSorting).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\t\n\t\t/**\n\t\t * Classes to use for the striping of a table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asStripeClasses\": null,\n\t\n\t\t/**\n\t\t * If restoring a table - we should restore its striping classes as well\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asDestroyStripes\": [],\n\t\n\t\t/**\n\t\t * If restoring a table - we should restore its width\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"sDestroyWidth\": 0,\n\t\n\t\t/**\n\t\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for the header on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeaderCallback\": [],\n\t\n\t\t/**\n\t\t * Callback function for the footer on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooterCallback\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for draw callback functions\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDrawCallback\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for row created function\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCreatedCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for just before the table is redrawn. A return of\n\t\t * false will be used to cancel the draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreDrawCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for when the table has been initialised.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoInitComplete\": [],\n\t\n\t\n\t\t/**\n\t\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t\t * saving state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSaveParams\": [],\n\t\n\t\t/**\n\t\t * Callbacks for modifying the settings that have been stored for state saving\n\t\t * prior to using the stored values to restore the state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoadParams\": [],\n\t\n\t\t/**\n\t\t * Callbacks for operating on the settings object once the saved state has been\n\t\t * loaded\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoaded\": [],\n\t\n\t\t/**\n\t\t * Cache the table ID for quick access\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sTableId\": \"\",\n\t\n\t\t/**\n\t\t * The TABLE node for the main table\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTable\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the thead element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTHead\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the tfoot element - if it exists\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTFoot\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the tbody element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTBody\": null,\n\t\n\t\t/**\n\t\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTableWrapper\": null,\n\t\n\t\t/**\n\t\t * Indicate if when using server-side processing the loading of data\n\t\t * should be deferred until the second draw.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDeferLoading\": false,\n\t\n\t\t/**\n\t\t * Indicate if all required information has been read in\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bInitialised\": false,\n\t\n\t\t/**\n\t\t * Information about open rows. Each object in the array has the parameters\n\t\t * 'nTr' and 'nParent'\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoOpenRows\": [],\n\t\n\t\t/**\n\t\t * Dictate the positioning of DataTables' control elements - see\n\t\t * {@link DataTable.model.oInit.sDom}.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDom\": null,\n\t\n\t\t/**\n\t\t * Search delay (in mS)\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"searchDelay\": null,\n\t\n\t\t/**\n\t\t * Which type of pagination should be used.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default two_button\n\t\t */\n\t\t\"sPaginationType\": \"two_button\",\n\t\n\t\t/**\n\t\t * The state duration (for `stateSave`) in seconds.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iStateDuration\": 0,\n\t\n\t\t/**\n\t\t * Array of callback functions for state saving. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the JSON string to save that has been thus far created. Returns\n\t\t *       a JSON string to be inserted into a json object\n\t\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSave\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for state loading. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the object stored. May return false to cancel state loading</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoad\": [],\n\t\n\t\t/**\n\t\t * State that was saved. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oSavedState\": null,\n\t\n\t\t/**\n\t\t * State that was loaded. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oLoadedState\": null,\n\t\n\t\t/**\n\t\t * Source url for AJAX data for the table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sAjaxSource\": null,\n\t\n\t\t/**\n\t\t * Property from a given object from which to read the table data from. This\n\t\t * can be an empty string (when not server-side processing), in which case\n\t\t * it is  assumed an an array is given directly.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sAjaxDataProp\": null,\n\t\n\t\t/**\n\t\t * Note if draw should be blocked while getting data\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bAjaxDataGet\": true,\n\t\n\t\t/**\n\t\t * The last jQuery XHR object that was used for server-side data gathering.\n\t\t * This can be used for working with the XHR information in one of the\n\t\t * callbacks\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"jqXHR\": null,\n\t\n\t\t/**\n\t\t * JSON returned from the server in the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"json\": undefined,\n\t\n\t\t/**\n\t\t * Data submitted as part of the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"oAjaxData\": undefined,\n\t\n\t\t/**\n\t\t * Function to get the server-side data.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnServerData\": null,\n\t\n\t\t/**\n\t\t * Functions which are called prior to sending an Ajax request so extra\n\t\t * parameters can easily be sent to the server\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoServerParams\": [],\n\t\n\t\t/**\n\t\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t\t * required).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sServerMethod\": null,\n\t\n\t\t/**\n\t\t * Format numbers for display.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnFormatNumber\": null,\n\t\n\t\t/**\n\t\t * List of options that can be used for the user selectable length menu.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLengthMenu\": null,\n\t\n\t\t/**\n\t\t * Counter for the draws that the table does. Also used as a tracker for\n\t\t * server-side processing\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iDraw\": 0,\n\t\n\t\t/**\n\t\t * Indicate if a redraw is being done - useful for Ajax\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDrawing\": false,\n\t\n\t\t/**\n\t\t * Draw index (iDraw) of the last error when parsing the returned data\n\t\t *  @type int\n\t\t *  @default -1\n\t\t */\n\t\t\"iDrawError\": -1,\n\t\n\t\t/**\n\t\t * Paging display length\n\t\t *  @type int\n\t\t *  @default 10\n\t\t */\n\t\t\"_iDisplayLength\": 10,\n\t\n\t\t/**\n\t\t * Paging start point - aiDisplay index\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"_iDisplayStart\": 0,\n\t\n\t\t/**\n\t\t * Server-side processing - number of records in the result set\n\t\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsTotal\": 0,\n\t\n\t\t/**\n\t\t * Server-side processing - number of records in the current display set\n\t\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type boolean\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsDisplay\": 0,\n\t\n\t\t/**\n\t\t * The classes to use for the table\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oClasses\": {},\n\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bFiltered\": false,\n\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bSorted\": false,\n\t\n\t\t/**\n\t\t * Indicate that if multiple rows are in the header and there is more than\n\t\t * one unique cell per column, if the top one (true) or bottom one (false)\n\t\t * should be used for sorting / title by DataTables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortCellsTop\": null,\n\t\n\t\t/**\n\t\t * Initialisation object that is used for the table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInit\": null,\n\t\n\t\t/**\n\t\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t\t * destroy so they can clean up markup and events.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDestroyCallback\": [],\n\t\n\t\n\t\t/**\n\t\t * Get the number of records in the current record set, before filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsTotal\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsTotal * 1 :\n\t\t\t\tthis.aiDisplayMaster.length;\n\t\t},\n\t\n\t\t/**\n\t\t * Get the number of records in the current record set, after filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsDisplay\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\t\tthis.aiDisplay.length;\n\t\t},\n\t\n\t\t/**\n\t\t * Get the display end point - aiDisplay index\n\t\t *  @type function\n\t\t */\n\t\t\"fnDisplayEnd\": function ()\n\t\t{\n\t\t\tvar\n\t\t\t\tlen      = this._iDisplayLength,\n\t\t\t\tstart    = this._iDisplayStart,\n\t\t\t\tcalc     = start + len,\n\t\t\t\trecords  = this.aiDisplay.length,\n\t\t\t\tfeatures = this.oFeatures,\n\t\t\t\tpaginate = features.bPaginate;\n\t\n\t\t\tif ( features.bServerSide ) {\n\t\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\t\tstart + records :\n\t\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn ! paginate || calc>records || len===-1 ?\n\t\t\t\t\trecords :\n\t\t\t\t\tcalc;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * The DataTables object for this table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInstance\": null,\n\t\n\t\t/**\n\t\t * Unique identifier for each instance of the DataTables object. If there\n\t\t * is an ID on the table node, then it takes that value, otherwise an\n\t\t * incrementing internal counter is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sInstance\": null,\n\t\n\t\t/**\n\t\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t\t * keyboard navigation of the table and its controls.\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollHead\": null,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollFoot\": null,\n\t\n\t\t/**\n\t\t * Last applied sort\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLastSort\": [],\n\t\n\t\t/**\n\t\t * Stored plug-in instances\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oPlugins\": {},\n\t\n\t\t/**\n\t\t * Function used to get a row's id from the row's data\n\t\t *  @type function\n\t\t *  @default null\n\t\t */\n\t\t\"rowIdFn\": null,\n\t\n\t\t/**\n\t\t * Data location where to store a row's id\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"rowId\": null\n\t};\n\n\t/**\n\t * Extension object for DataTables that is used to provide all extension\n\t * options.\n\t *\n\t * Note that the `DataTable.ext` object is available through\n\t * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n\t * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n\t *  @namespace\n\t *  @extends DataTable.models.ext\n\t */\n\t\n\t\n\t/**\n\t * DataTables extensions\n\t * \n\t * This namespace acts as a collection area for plug-ins that can be used to\n\t * extend DataTables capabilities. Indeed many of the build in methods\n\t * use this method to provide their own capabilities (sorting methods for\n\t * example).\n\t *\n\t * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n\t * reasons\n\t *\n\t *  @namespace\n\t */\n\tDataTable.ext = _ext = {\n\t\t/**\n\t\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t\t * defined here so other extensions can define buttons regardless of load\n\t\t * order. It is _not_ used by DataTables core.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tbuttons: {},\n\t\n\t\n\t\t/**\n\t\t * Element class names\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tclasses: {},\n\t\n\t\n\t\t/**\n\t\t * DataTables build type (expanded by the download builder)\n\t\t *\n\t\t *  @type string\n\t\t */\n\t\tbuilder: \"-source-\",\n\t\n\t\n\t\t/**\n\t\t * Error reporting.\n\t\t * \n\t\t * How should DataTables report an error. Can take the value 'alert',\n\t\t * 'throw', 'none' or a function.\n\t\t *\n\t\t *  @type string|function\n\t\t *  @default alert\n\t\t */\n\t\terrMode: \"alert\",\n\t\n\t\n\t\t/**\n\t\t * Feature plug-ins.\n\t\t * \n\t\t * This is an array of objects which describe the feature plug-ins that are\n\t\t * available to DataTables. These feature plug-ins are then available for\n\t\t * use through the `dom` initialisation option.\n\t\t * \n\t\t * Each feature plug-in is described by an object which must have the\n\t\t * following properties:\n\t\t * \n\t\t * * `fnInit` - function that is used to initialise the plug-in,\n\t\t * * `cFeature` - a character so the feature can be enabled by the `dom`\n\t\t *   instillation option. This is case sensitive.\n\t\t *\n\t\t * The `fnInit` function has the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *\n\t\t * And the following return is expected:\n\t\t * \n\t\t * * {node|null} The element which contains your feature. Note that the\n\t\t *   return may also be void if your plug-in does not require to inject any\n\t\t *   DOM elements into DataTables control (`dom`) - for example this might\n\t\t *   be useful when developing a plug-in which allows table control via\n\t\t *   keyboard entry\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.features.push( {\n\t\t *      \"fnInit\": function( oSettings ) {\n\t\t *        return new TableTools( { \"oDTSettings\": oSettings } );\n\t\t *      },\n\t\t *      \"cFeature\": \"T\"\n\t\t *    } );\n\t\t */\n\t\tfeature: [],\n\t\n\t\n\t\t/**\n\t\t * Row searching.\n\t\t * \n\t\t * This method of searching is complimentary to the default type based\n\t\t * searching, and a lot more comprehensive as it allows you complete control\n\t\t * over the searching logic. Each element in this array is a function\n\t\t * (parameters described below) that is called for every row in the table,\n\t\t * and your logic decides if it should be included in the searching data set\n\t\t * or not.\n\t\t *\n\t\t * Searching functions have the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t\t *    original format that was passed in as the data source, or an array\n\t\t *    from a DOM data source\n\t\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t\t *\n\t\t * And the following return is expected:\n\t\t *\n\t\t * * {boolean} Include the row in the searched result set (true) or not\n\t\t *   (false)\n\t\t *\n\t\t * Note that as with the main search ability in DataTables, technically this\n\t\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t\t * naming we call it searching here.\n\t\t *\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @example\n\t\t *    // The following example shows custom search being applied to the\n\t\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t\t *    // from the end-user, matching the data in a certain range.\n\t\t *    $.fn.dataTable.ext.search.push(\n\t\t *      function( settings, data, dataIndex ) {\n\t\t *        var min = document.getElementById('min').value * 1;\n\t\t *        var max = document.getElementById('max').value * 1;\n\t\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t\t *\n\t\t *        if ( min == \"\" && max == \"\" ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min == \"\" && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && \"\" == max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        return false;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tsearch: [],\n\t\n\t\n\t\t/**\n\t\t * Selector extensions\n\t\t *\n\t\t * The `selector` option can be used to extend the options available for the\n\t\t * selector modifier options (`selector-modifier` object data type) that\n\t\t * each of the three built in selector types offer (row, column and cell +\n\t\t * their plural counterparts). For example the Select extension uses this\n\t\t * mechanism to provide an option to select only rows, columns and cells\n\t\t * that have been marked as selected by the end user (`{selected: true}`),\n\t\t * which can be used in conjunction with the existing built in selector\n\t\t * options.\n\t\t *\n\t\t * Each property is an array to which functions can be pushed. The functions\n\t\t * take three attributes:\n\t\t *\n\t\t * * Settings object for the host table\n\t\t * * Options object (`selector-modifier` object type)\n\t\t * * Array of selected item indexes\n\t\t *\n\t\t * The return is an array of the resulting item indexes after the custom\n\t\t * selector has been applied.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tselector: {\n\t\t\tcell: [],\n\t\t\tcolumn: [],\n\t\t\trow: []\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Internal functions, exposed for used in plug-ins.\n\t\t * \n\t\t * Please note that you should not need to use the internal methods for\n\t\t * anything other than a plug-in (and even then, try to avoid if possible).\n\t\t * The internal function may change between releases.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tinternal: {},\n\t\n\t\n\t\t/**\n\t\t * Legacy configuration options. Enable and disable legacy options that\n\t\t * are available in DataTables.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tlegacy: {\n\t\t\t/**\n\t\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t\t * requests\n\t\t\t *\n\t\t\t *  @type boolean\n\t\t\t *  @default null\n\t\t\t */\n\t\t\tajax: null\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Pagination plug-in methods.\n\t\t * \n\t\t * Each entry in this object is a function and defines which buttons should\n\t\t * be shown by the pagination rendering method that is used for the table:\n\t\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t\t * buttons are displayed in the document, while the functions here tell it\n\t\t * what buttons to display. This is done by returning an array of button\n\t\t * descriptions (what each button will do).\n\t\t *\n\t\t * Pagination types (the four built in options and any additional plug-in\n\t\t * options defined here) can be used through the `paginationType`\n\t\t * initialisation parameter.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{int} page` The current page index\n\t\t * 2. `{int} pages` The number of pages in the table\n\t\t *\n\t\t * Each function is expected to return an array where each element of the\n\t\t * array can be one of:\n\t\t *\n\t\t * * `first` - Jump to first page when activated\n\t\t * * `last` - Jump to last page when activated\n\t\t * * `previous` - Show previous page when activated\n\t\t * * `next` - Show next page when activated\n\t\t * * `{int}` - Show page of the index given\n\t\t * * `{array}` - A nested array containing the above elements to add a\n\t\t *   containing 'DIV' element (might be useful for styling).\n\t\t *\n\t\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t\t * an object with two functions would be defined for each plug-in. That\n\t\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t\t * compatibility, but this option of use is now decremented and no longer\n\t\t * documented in DataTables 1.10+.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Show previous, next and current page buttons only\n\t\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t\t *      return [ 'previous', page, 'next' ];\n\t\t *    };\n\t\t */\n\t\tpager: {},\n\t\n\t\n\t\trenderer: {\n\t\t\tpageButton: {},\n\t\t\theader: {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Ordering plug-ins - custom data source\n\t\t * \n\t\t * The extension options for ordering of data available here is complimentary\n\t\t * to the default type based ordering that DataTables typically uses. It\n\t\t * allows much greater control over the the data that is being used to\n\t\t * order a column, but is necessarily therefore more complex.\n\t\t * \n\t\t * This type of ordering is useful if you want to do ordering based on data\n\t\t * live from the DOM (for example the contents of an 'input' element) rather\n\t\t * than just the static string that DataTables knows of.\n\t\t * \n\t\t * The way these plug-ins work is that you create an array of the values you\n\t\t * wish to be ordering for the column in question and then return that\n\t\t * array. The data in the array much be in the index order of the rows in\n\t\t * the table (not the currently ordering order!). Which order data gathering\n\t\t * function is run here depends on the `dt-init columns.orderDataType`\n\t\t * parameter that is used for the column (if any).\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{int}` Target column index\n\t\t *\n\t\t * Each function is expected to return an array:\n\t\t *\n\t\t * * `{array}` Data for the column to be ordering upon\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Ordering using `input` node values\n\t\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t\t *    {\n\t\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t\t *        return $('input', td).val();\n\t\t *      } );\n\t\t *    }\n\t\t */\n\t\torder: {},\n\t\n\t\n\t\t/**\n\t\t * Type based plug-ins.\n\t\t *\n\t\t * Each column in DataTables has a type assigned to it, either by automatic\n\t\t * detection or by direct assignment using the `type` option for the column.\n\t\t * The type of a column will effect how it is ordering and search (plug-ins\n\t\t * can also make use of the column type if required).\n\t\t *\n\t\t * @namespace\n\t\t */\n\t\ttype: {\n\t\t\t/**\n\t\t\t * Type detection functions.\n\t\t\t *\n\t\t\t * The functions defined in this object are used to automatically detect\n\t\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t\t * when complex data is in the table.\n\t\t\t *\n\t\t\t * The functions defined take two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be analysed\n\t\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t\t     *     perform context specific type detection - for example detection\n\t\t     *     based on language settings such as using a comma for a decimal\n\t\t     *     place. Generally speaking the options from the settings will not\n\t\t     *     be required\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t\t *   pass it on to the other type detection functions.\n\t\t\t *\n\t\t\t *  @type array\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Currency type detection plug-in:\n\t\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t\t *      function ( data, settings ) {\n\t\t\t *        // Check the numeric part\n\t\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\n\t\t\t *          return null;\n\t\t\t *        }\n\t\t\t *\n\t\t\t *        // Check prefixed by currency\n\t\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t\t *          return 'currency';\n\t\t\t *        }\n\t\t\t *        return null;\n\t\t\t *      }\n\t\t\t *    );\n\t\t\t */\n\t\t\tdetect: [],\n\t\n\t\n\t\t\t/**\n\t\t\t * Type based search formatting.\n\t\t\t *\n\t\t\t * The type based searching functions can be used to pre-format the\n\t\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t\t *\n\t\t\t * Note that is a search is not defined for a column of a given type,\n\t\t\t * no search formatting will be performed.\n\t\t\t * \n\t\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t\t * or a type detection plug-in), you will typically be using this for\n\t\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t\t * the format that should be searched upon. This is done by adding\n\t\t\t * functions this object with a parameter name which matches the sType\n\t\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t\t * for searching data.\n\t\t\t *\n\t\t\t * The functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t\t *\n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t\t *    }\n\t\t\t */\n\t\t\tsearch: {},\n\t\n\t\n\t\t\t/**\n\t\t\t * Type based ordering.\n\t\t\t *\n\t\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t\t * is defined by the functions available in this object.\n\t\t\t *\n\t\t\t * Each ordering option can be described by three properties added to\n\t\t\t * this object:\n\t\t\t *\n\t\t\t * * `{type}-pre` - Pre-formatting function\n\t\t\t * * `{type}-asc` - Ascending order function\n\t\t\t * * `{type}-desc` - Descending order function\n\t\t\t *\n\t\t\t * All three can be used together, only `{type}-pre` or only\n\t\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t\t * implementation in terms of speed, although the others are provided\n\t\t\t * for compatibility with existing Javascript sort functions.\n\t\t\t *\n\t\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t\t *\n\t\t\t * And return:\n\t\t\t *\n\t\t\t * * `{*}` Data to be sorted upon\n\t\t\t *\n\t\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t\t * functions, taking two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data to compare to the second parameter\n\t\t     *  2. `{*}` Data to compare to the first parameter\n\t\t\t *\n\t\t\t * And returning:\n\t\t\t *\n\t\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t\t *   parameter.\n\t\t\t * \n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t\t *      \"string-pre\": function(x) {\n\t\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t\t *        return parseFloat( a );\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t\t *      \"string-case-asc\": function(x,y) {\n\t\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t\t *      },\n\t\t\t *      \"string-case-desc\": function(x,y) {\n\t\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t */\n\t\t\torder: {}\n\t\t},\n\t\n\t\t/**\n\t\t * Unique DataTables instance counter\n\t\t *\n\t\t * @type int\n\t\t * @private\n\t\t */\n\t\t_unique: 0,\n\t\n\t\n\t\t//\n\t\t// Depreciated\n\t\t// The following properties are retained for backwards compatiblity only.\n\t\t// The should not be used in new projects and will be removed in a future\n\t\t// version\n\t\t//\n\t\n\t\t/**\n\t\t * Version check function.\n\t\t *  @type function\n\t\t *  @depreciated Since 1.10\n\t\t */\n\t\tfnVersionCheck: DataTable.fnVersionCheck,\n\t\n\t\n\t\t/**\n\t\t * Index for what 'this' index API functions should use\n\t\t *  @type int\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tiApiIndex: 0,\n\t\n\t\n\t\t/**\n\t\t * jQuery UI class container\n\t\t *  @type object\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\toJUIClasses: {},\n\t\n\t\n\t\t/**\n\t\t * Software version\n\t\t *  @type string\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tsVersion: DataTable.version\n\t};\n\t\n\t\n\t//\n\t// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n\t//\n\t$.extend( _ext, {\n\t\tafnFiltering: _ext.search,\n\t\taTypes:       _ext.type.detect,\n\t\tofnSearch:    _ext.type.search,\n\t\toSort:        _ext.type.order,\n\t\tafnSortData:  _ext.order,\n\t\taoFeatures:   _ext.feature,\n\t\toApi:         _ext.internal,\n\t\toStdClasses:  _ext.classes,\n\t\toPagination:  _ext.pager\n\t} );\n\t\n\t\n\t$.extend( DataTable.ext.classes, {\n\t\t\"sTable\": \"dataTable\",\n\t\t\"sNoFooter\": \"no-footer\",\n\t\n\t\t/* Paging buttons */\n\t\t\"sPageButton\": \"paginate_button\",\n\t\t\"sPageButtonActive\": \"current\",\n\t\t\"sPageButtonDisabled\": \"disabled\",\n\t\n\t\t/* Striping classes */\n\t\t\"sStripeOdd\": \"odd\",\n\t\t\"sStripeEven\": \"even\",\n\t\n\t\t/* Empty row */\n\t\t\"sRowEmpty\": \"dataTables_empty\",\n\t\n\t\t/* Features */\n\t\t\"sWrapper\": \"dataTables_wrapper\",\n\t\t\"sFilter\": \"dataTables_filter\",\n\t\t\"sInfo\": \"dataTables_info\",\n\t\t\"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\n\t\t\"sLength\": \"dataTables_length\",\n\t\t\"sProcessing\": \"dataTables_processing\",\n\t\n\t\t/* Sorting */\n\t\t\"sSortAsc\": \"sorting_asc\",\n\t\t\"sSortDesc\": \"sorting_desc\",\n\t\t\"sSortable\": \"sorting\", /* Sortable in both directions */\n\t\t\"sSortableAsc\": \"sorting_asc_disabled\",\n\t\t\"sSortableDesc\": \"sorting_desc_disabled\",\n\t\t\"sSortableNone\": \"sorting_disabled\",\n\t\t\"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\n\t\n\t\t/* Filtering */\n\t\t\"sFilterInput\": \"\",\n\t\n\t\t/* Page length */\n\t\t\"sLengthSelect\": \"\",\n\t\n\t\t/* Scrolling */\n\t\t\"sScrollWrapper\": \"dataTables_scroll\",\n\t\t\"sScrollHead\": \"dataTables_scrollHead\",\n\t\t\"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n\t\t\"sScrollBody\": \"dataTables_scrollBody\",\n\t\t\"sScrollFoot\": \"dataTables_scrollFoot\",\n\t\t\"sScrollFootInner\": \"dataTables_scrollFootInner\",\n\t\n\t\t/* Misc */\n\t\t\"sHeaderTH\": \"\",\n\t\t\"sFooterTH\": \"\",\n\t\n\t\t// Deprecated\n\t\t\"sSortJUIAsc\": \"\",\n\t\t\"sSortJUIDesc\": \"\",\n\t\t\"sSortJUI\": \"\",\n\t\t\"sSortJUIAscAllowed\": \"\",\n\t\t\"sSortJUIDescAllowed\": \"\",\n\t\t\"sSortJUIWrapper\": \"\",\n\t\t\"sSortIcon\": \"\",\n\t\t\"sJUIHeader\": \"\",\n\t\t\"sJUIFooter\": \"\"\n\t} );\n\t\n\t\n\tvar extPagination = DataTable.ext.pager;\n\t\n\tfunction _numbers ( page, pages ) {\n\t\tvar\n\t\t\tnumbers = [],\n\t\t\tbuttons = extPagination.numbers_length,\n\t\t\thalf = Math.floor( buttons / 2 ),\n\t\t\ti = 1;\n\t\n\t\tif ( pages <= buttons ) {\n\t\t\tnumbers = _range( 0, pages );\n\t\t}\n\t\telse if ( page <= half ) {\n\t\t\tnumbers = _range( 0, buttons-2 );\n\t\t\tnumbers.push( 'ellipsis' );\n\t\t\tnumbers.push( pages-1 );\n\t\t}\n\t\telse if ( page >= pages - 1 - half ) {\n\t\t\tnumbers = _range( pages-(buttons-2), pages );\n\t\t\tnumbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6\n\t\t\tnumbers.splice( 0, 0, 0 );\n\t\t}\n\t\telse {\n\t\t\tnumbers = _range( page-half+2, page+half-1 );\n\t\t\tnumbers.push( 'ellipsis' );\n\t\t\tnumbers.push( pages-1 );\n\t\t\tnumbers.splice( 0, 0, 'ellipsis' );\n\t\t\tnumbers.splice( 0, 0, 0 );\n\t\t}\n\t\n\t\tnumbers.DT_el = 'span';\n\t\treturn numbers;\n\t}\n\t\n\t\n\t$.extend( extPagination, {\n\t\tsimple: function ( page, pages ) {\n\t\t\treturn [ 'previous', 'next' ];\n\t\t},\n\t\n\t\tfull: function ( page, pages ) {\n\t\t\treturn [  'first', 'previous', 'next', 'last' ];\n\t\t},\n\t\n\t\tnumbers: function ( page, pages ) {\n\t\t\treturn [ _numbers(page, pages) ];\n\t\t},\n\t\n\t\tsimple_numbers: function ( page, pages ) {\n\t\t\treturn [ 'previous', _numbers(page, pages), 'next' ];\n\t\t},\n\t\n\t\tfull_numbers: function ( page, pages ) {\n\t\t\treturn [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];\n\t\t},\n\t\t\n\t\tfirst_last_numbers: function (page, pages) {\n\t \t\treturn ['first', _numbers(page, pages), 'last'];\n\t \t},\n\t\n\t\t// For testing and plug-ins to use\n\t\t_numbers: _numbers,\n\t\n\t\t// Number of number buttons (including ellipsis) to show. _Must be odd!_\n\t\tnumbers_length: 7\n\t} );\n\t\n\t\n\t$.extend( true, DataTable.ext.renderer, {\n\t\tpageButton: {\n\t\t\t_: function ( settings, host, idx, buttons, page, pages ) {\n\t\t\t\tvar classes = settings.oClasses;\n\t\t\t\tvar lang = settings.oLanguage.oPaginate;\n\t\t\t\tvar aria = settings.oLanguage.oAria.paginate || {};\n\t\t\t\tvar btnDisplay, btnClass, counter=0;\n\t\n\t\t\t\tvar attach = function( container, buttons ) {\n\t\t\t\t\tvar i, ien, node, button;\n\t\t\t\t\tvar clickHandler = function ( e ) {\n\t\t\t\t\t\t_fnPageChange( settings, e.data.action, true );\n\t\t\t\t\t};\n\t\n\t\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\t\t\tbutton = buttons[i];\n\t\n\t\t\t\t\t\tif ( $.isArray( button ) ) {\n\t\t\t\t\t\t\tvar inner = $( '<'+(button.DT_el || 'div')+'/>' )\n\t\t\t\t\t\t\t\t.appendTo( container );\n\t\t\t\t\t\t\tattach( inner, button );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbtnDisplay = null;\n\t\t\t\t\t\t\tbtnClass = '';\n\t\n\t\t\t\t\t\t\tswitch ( button ) {\n\t\t\t\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\t\t\t\tcontainer.append('<span class=\"ellipsis\">&#x2026;</span>');\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'first':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'next':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'last':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tbtnDisplay = button + 1;\n\t\t\t\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t\t\t\tclasses.sPageButtonActive : '';\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif ( btnDisplay !== null ) {\n\t\t\t\t\t\t\t\tnode = $('<a>', {\n\t\t\t\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\n\t\t\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\n\t\t\t\t\t\t\t\t\t\t'data-dt-idx': counter,\n\t\t\t\t\t\t\t\t\t\t'tabindex': settings.iTabIndex,\n\t\t\t\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\n\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t.html( btnDisplay )\n\t\t\t\t\t\t\t\t\t.appendTo( container );\n\t\n\t\t\t\t\t\t\t\t_fnBindAction(\n\t\t\t\t\t\t\t\t\tnode, {action: button}, clickHandler\n\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame. Try / catch the error. Not good for\n\t\t\t\t// accessibility, but neither are frames.\n\t\t\t\tvar activeEl;\n\t\n\t\t\t\ttry {\n\t\t\t\t\t// Because this approach is destroying and recreating the paging\n\t\t\t\t\t// elements, focus is lost on the select button which is bad for\n\t\t\t\t\t// accessibility. So we want to restore focus once the draw has\n\t\t\t\t\t// completed\n\t\t\t\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\t\n\t\t\t\tattach( $(host).empty(), buttons );\n\t\n\t\t\t\tif ( activeEl !== undefined ) {\n\t\t\t\t\t$(host).find( '[data-dt-idx='+activeEl+']' ).focus();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t\n\t\n\t// Built in type detection. See model.ext.aTypes for information about\n\t// what is required from this methods.\n\t$.extend( DataTable.ext.type.detect, [\n\t\t// Plain numbers - first since V8 detects some plain numbers as dates\n\t\t// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal ) ? 'num'+decimal : null;\n\t\t},\n\t\n\t\t// Dates (only those recognised by the browser's Date.parse)\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\n\t\t\t// valid, so we need to use a regex to restrict date formats. Use a\n\t\t\t// plug-in for anything other than ISO8601 style strings\n\t\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar parsed = Date.parse(d);\n\t\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\n\t\t},\n\t\n\t\t// Formatted numbers\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;\n\t\t},\n\t\n\t\t// HTML numeric\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;\n\t\t},\n\t\n\t\t// HTML numeric, formatted\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;\n\t\t},\n\t\n\t\t// HTML (this is strict checking - there must be html)\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\n\t\t\t\t'html' : null;\n\t\t}\n\t] );\n\t\n\t\n\t\n\t// Filter formatting functions. See model.ext.ofnSearch for information about\n\t// what is required from these methods.\n\t// \n\t// Note that additional search methods are added for the html numbers and\n\t// html formatted numbers by `_addNumericSort()` when we know what the decimal\n\t// place is\n\t\n\t\n\t$.extend( DataTable.ext.type.search, {\n\t\thtml: function ( data ) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata\n\t\t\t\t\t\t.replace( _re_new_lines, \" \" )\n\t\t\t\t\t\t.replace( _re_html, \"\" ) :\n\t\t\t\t\t'';\n\t\t},\n\t\n\t\tstring: function ( data ) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata.replace( _re_new_lines, \" \" ) :\n\t\t\t\t\tdata;\n\t\t}\n\t} );\n\t\n\t\n\t\n\tvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\n\t\tif ( d !== 0 && (!d || d === '-') ) {\n\t\t\treturn -Infinity;\n\t\t}\n\t\n\t\t// If a decimal place other than `.` is used, it needs to be given to the\n\t\t// function so we can detect it and replace with a `.` which is the only\n\t\t// decimal place Javascript recognises - it is not locale aware.\n\t\tif ( decimalPlace ) {\n\t\t\td = _numToDecimal( d, decimalPlace );\n\t\t}\n\t\n\t\tif ( d.replace ) {\n\t\t\tif ( re1 ) {\n\t\t\t\td = d.replace( re1, '' );\n\t\t\t}\n\t\n\t\t\tif ( re2 ) {\n\t\t\t\td = d.replace( re2, '' );\n\t\t\t}\n\t\t}\n\t\n\t\treturn d * 1;\n\t};\n\t\n\t\n\t// Add the numeric 'deformatting' functions for sorting and search. This is done\n\t// in a function to provide an easy ability for the language options to add\n\t// additional methods if a non-period decimal place is used.\n\tfunction _addNumericSort ( decimalPlace ) {\n\t\t$.each(\n\t\t\t{\n\t\t\t\t// Plain numbers\n\t\t\t\t\"num\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace );\n\t\t\t\t},\n\t\n\t\t\t\t// Formatted numbers\n\t\t\t\t\"num-fmt\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_formatted_numeric );\n\t\t\t\t},\n\t\n\t\t\t\t// HTML numeric\n\t\t\t\t\"html-num\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html );\n\t\t\t\t},\n\t\n\t\t\t\t// HTML numeric, formatted\n\t\t\t\t\"html-num-fmt\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction ( key, fn ) {\n\t\t\t\t// Add the ordering method\n\t\t\t\t_ext.type.order[ key+decimalPlace+'-pre' ] = fn;\n\t\n\t\t\t\t// For HTML types add a search formatter that will strip the HTML\n\t\t\t\tif ( key.match(/^html\\-/) ) {\n\t\t\t\t\t_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\t\n\t\n\t// Default sort methods\n\t$.extend( _ext.type.order, {\n\t\t// Dates\n\t\t\"date-pre\": function ( d ) {\n\t\t\tvar ts = Date.parse( d );\n\t\t\treturn isNaN(ts) ? -Infinity : ts;\n\t\t},\n\t\n\t\t// html\n\t\t\"html-pre\": function ( a ) {\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ta.replace ?\n\t\t\t\t\ta.replace( /<.*?>/g, \"\" ).toLowerCase() :\n\t\t\t\t\ta+'';\n\t\t},\n\t\n\t\t// string\n\t\t\"string-pre\": function ( a ) {\n\t\t\t// This is a little complex, but faster than always calling toString,\n\t\t\t// http://jsperf.com/tostring-v-check\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ttypeof a === 'string' ?\n\t\t\t\t\ta.toLowerCase() :\n\t\t\t\t\t! a.toString ?\n\t\t\t\t\t\t'' :\n\t\t\t\t\t\ta.toString();\n\t\t},\n\t\n\t\t// string-asc and -desc are retained only for compatibility with the old\n\t\t// sort methods\n\t\t\"string-asc\": function ( x, y ) {\n\t\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t},\n\t\n\t\t\"string-desc\": function ( x, y ) {\n\t\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t}\n\t} );\n\t\n\t\n\t// Numeric sorting types - order doesn't matter here\n\t_addNumericSort( '' );\n\t\n\t\n\t$.extend( true, DataTable.ext.renderer, {\n\t\theader: {\n\t\t\t_: function ( settings, cell, column, classes ) {\n\t\t\t\t// No additional mark-up required\n\t\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t\t// listening for\n\t\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\n\t\t\t\t\t\treturn;               // table, not a nested one\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar colIdx = column.idx;\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tcolumn.sSortingClass +' '+\n\t\t\t\t\t\t\tclasses.sSortAsc +' '+\n\t\t\t\t\t\t\tclasses.sSortDesc\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t},\n\t\n\t\t\tjqueryui: function ( settings, cell, column, classes ) {\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.addClass( classes.sSortJUIWrapper )\n\t\t\t\t\t.append( cell.contents() )\n\t\t\t\t\t.append( $('<span/>')\n\t\t\t\t\t\t.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo( cell );\n\t\n\t\t\t\t// Attach a sort listener to update on sort\n\t\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar colIdx = column.idx;\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass( classes.sSortAsc +\" \"+classes.sSortDesc )\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.find( 'span.'+classes.sSortIcon )\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tclasses.sSortJUIAsc +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIDesc +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUI +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIAscAllowed +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIDescAllowed\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortJUIAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortJUIDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClassJUI\n\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t/*\n\t * Public helper functions. These aren't used internally by DataTables, or\n\t * called by any of the options passed into DataTables, but they can be used\n\t * externally by developers working with DataTables. They are helper functions\n\t * to make working with DataTables a little bit easier.\n\t */\n\t\n\tvar __htmlEscapeEntities = function ( d ) {\n\t\treturn typeof d === 'string' ?\n\t\t\td.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;') :\n\t\t\td;\n\t};\n\t\n\t/**\n\t * Helpers for `columns.render`.\n\t *\n\t * The options defined here can be used with the `columns.render` initialisation\n\t * option to provide a display renderer. The following functions are defined:\n\t *\n\t * * `number` - Will format numeric data (defined by `columns.data`) for\n\t *   display, retaining the original unformatted data for sorting and filtering.\n\t *   It takes 5 parameters:\n\t *   * `string` - Thousands grouping separator\n\t *   * `string` - Decimal point indicator\n\t *   * `integer` - Number of decimal points to show\n\t *   * `string` (optional) - Prefix.\n\t *   * `string` (optional) - Postfix (/suffix).\n\t * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n\t *   parameters.\n\t *\n\t * @example\n\t *   // Column definition using the number renderer\n\t *   {\n\t *     data: \"salary\",\n\t *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n\t *   }\n\t *\n\t * @namespace\n\t */\n\tDataTable.render = {\n\t\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\n\t\t\treturn {\n\t\t\t\tdisplay: function ( d ) {\n\t\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\t\t\t\treturn d;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\t\tvar flo = parseFloat( d );\n\t\n\t\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t\t// be a number after all)\n\t\t\t\t\tif ( isNaN( flo ) ) {\n\t\t\t\t\t\treturn __htmlEscapeEntities( d );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tflo = flo.toFixed( precision );\n\t\t\t\t\td = Math.abs( flo );\n\t\n\t\t\t\t\tvar intPart = parseInt( d, 10 );\n\t\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\n\t\t\t\t\t\t'';\n\t\n\t\t\t\t\treturn negative + (prefix||'') +\n\t\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t\t) +\n\t\t\t\t\t\tfloatPart +\n\t\t\t\t\t\t(postfix||'');\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\n\t\ttext: function () {\n\t\t\treturn {\n\t\t\t\tdisplay: __htmlEscapeEntities\n\t\t\t};\n\t\t}\n\t};\n\t\n\t\n\t/*\n\t * This is really a good bit rubbish this method of exposing the internal methods\n\t * publicly... - To be fixed in 2.0 using methods on the prototype\n\t */\n\t\n\t\n\t/**\n\t * Create a wrapper function for exporting an internal functions to an external API.\n\t *  @param {string} fn API function name\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#internal\n\t */\n\tfunction _fnExternApiFunc (fn)\n\t{\n\t\treturn function() {\n\t\t\tvar args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(\n\t\t\t\tArray.prototype.slice.call(arguments)\n\t\t\t);\n\t\t\treturn DataTable.ext.internal[fn].apply( this, args );\n\t\t};\n\t}\n\t\n\t\n\t/**\n\t * Reference to internal functions for use by plug-in developers. Note that\n\t * these methods are references to internal functions and are considered to be\n\t * private. If you use these methods, be aware that they are liable to change\n\t * between versions.\n\t *  @namespace\n\t */\n\t$.extend( DataTable.ext.internal, {\n\t\t_fnExternApiFunc: _fnExternApiFunc,\n\t\t_fnBuildAjax: _fnBuildAjax,\n\t\t_fnAjaxUpdate: _fnAjaxUpdate,\n\t\t_fnAjaxParameters: _fnAjaxParameters,\n\t\t_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n\t\t_fnAjaxDataSrc: _fnAjaxDataSrc,\n\t\t_fnAddColumn: _fnAddColumn,\n\t\t_fnColumnOptions: _fnColumnOptions,\n\t\t_fnAdjustColumnSizing: _fnAdjustColumnSizing,\n\t\t_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n\t\t_fnColumnIndexToVisible: _fnColumnIndexToVisible,\n\t\t_fnVisbleColumns: _fnVisbleColumns,\n\t\t_fnGetColumns: _fnGetColumns,\n\t\t_fnColumnTypes: _fnColumnTypes,\n\t\t_fnApplyColumnDefs: _fnApplyColumnDefs,\n\t\t_fnHungarianMap: _fnHungarianMap,\n\t\t_fnCamelToHungarian: _fnCamelToHungarian,\n\t\t_fnLanguageCompat: _fnLanguageCompat,\n\t\t_fnBrowserDetect: _fnBrowserDetect,\n\t\t_fnAddData: _fnAddData,\n\t\t_fnAddTr: _fnAddTr,\n\t\t_fnNodeToDataIndex: _fnNodeToDataIndex,\n\t\t_fnNodeToColumnIndex: _fnNodeToColumnIndex,\n\t\t_fnGetCellData: _fnGetCellData,\n\t\t_fnSetCellData: _fnSetCellData,\n\t\t_fnSplitObjNotation: _fnSplitObjNotation,\n\t\t_fnGetObjectDataFn: _fnGetObjectDataFn,\n\t\t_fnSetObjectDataFn: _fnSetObjectDataFn,\n\t\t_fnGetDataMaster: _fnGetDataMaster,\n\t\t_fnClearTable: _fnClearTable,\n\t\t_fnDeleteIndex: _fnDeleteIndex,\n\t\t_fnInvalidate: _fnInvalidate,\n\t\t_fnGetRowElements: _fnGetRowElements,\n\t\t_fnCreateTr: _fnCreateTr,\n\t\t_fnBuildHead: _fnBuildHead,\n\t\t_fnDrawHead: _fnDrawHead,\n\t\t_fnDraw: _fnDraw,\n\t\t_fnReDraw: _fnReDraw,\n\t\t_fnAddOptionsHtml: _fnAddOptionsHtml,\n\t\t_fnDetectHeader: _fnDetectHeader,\n\t\t_fnGetUniqueThs: _fnGetUniqueThs,\n\t\t_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n\t\t_fnFilterComplete: _fnFilterComplete,\n\t\t_fnFilterCustom: _fnFilterCustom,\n\t\t_fnFilterColumn: _fnFilterColumn,\n\t\t_fnFilter: _fnFilter,\n\t\t_fnFilterCreateSearch: _fnFilterCreateSearch,\n\t\t_fnEscapeRegex: _fnEscapeRegex,\n\t\t_fnFilterData: _fnFilterData,\n\t\t_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n\t\t_fnUpdateInfo: _fnUpdateInfo,\n\t\t_fnInfoMacros: _fnInfoMacros,\n\t\t_fnInitialise: _fnInitialise,\n\t\t_fnInitComplete: _fnInitComplete,\n\t\t_fnLengthChange: _fnLengthChange,\n\t\t_fnFeatureHtmlLength: _fnFeatureHtmlLength,\n\t\t_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n\t\t_fnPageChange: _fnPageChange,\n\t\t_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n\t\t_fnProcessingDisplay: _fnProcessingDisplay,\n\t\t_fnFeatureHtmlTable: _fnFeatureHtmlTable,\n\t\t_fnScrollDraw: _fnScrollDraw,\n\t\t_fnApplyToChildren: _fnApplyToChildren,\n\t\t_fnCalculateColumnWidths: _fnCalculateColumnWidths,\n\t\t_fnThrottle: _fnThrottle,\n\t\t_fnConvertToWidth: _fnConvertToWidth,\n\t\t_fnGetWidestNode: _fnGetWidestNode,\n\t\t_fnGetMaxLenString: _fnGetMaxLenString,\n\t\t_fnStringToCss: _fnStringToCss,\n\t\t_fnSortFlatten: _fnSortFlatten,\n\t\t_fnSort: _fnSort,\n\t\t_fnSortAria: _fnSortAria,\n\t\t_fnSortListener: _fnSortListener,\n\t\t_fnSortAttachListener: _fnSortAttachListener,\n\t\t_fnSortingClasses: _fnSortingClasses,\n\t\t_fnSortData: _fnSortData,\n\t\t_fnSaveState: _fnSaveState,\n\t\t_fnLoadState: _fnLoadState,\n\t\t_fnSettingsFromNode: _fnSettingsFromNode,\n\t\t_fnLog: _fnLog,\n\t\t_fnMap: _fnMap,\n\t\t_fnBindAction: _fnBindAction,\n\t\t_fnCallbackReg: _fnCallbackReg,\n\t\t_fnCallbackFire: _fnCallbackFire,\n\t\t_fnLengthOverflow: _fnLengthOverflow,\n\t\t_fnRenderer: _fnRenderer,\n\t\t_fnDataSource: _fnDataSource,\n\t\t_fnRowAttributes: _fnRowAttributes,\n\t\t_fnExtend: _fnExtend,\n\t\t_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\n\t\t                                // in 1.10, so this dead-end function is\n\t\t                                // added to prevent errors\n\t} );\n\t\n\n\t// jQuery access\n\t$.fn.dataTable = DataTable;\n\n\t// Provide access to the host jQuery object (circular reference)\n\tDataTable.$ = $;\n\n\t// Legacy aliases\n\t$.fn.dataTableSettings = DataTable.settings;\n\t$.fn.dataTableExt = DataTable.ext;\n\n\t// With a capital `D` we return a DataTables API instance rather than a\n\t// jQuery object\n\t$.fn.DataTable = function ( opts ) {\n\t\treturn $(this).dataTable( opts ).api();\n\t};\n\n\t// All properties that are available to $.fn.dataTable should also be\n\t// available on $.fn.DataTable\n\t$.each( DataTable, function ( prop, val ) {\n\t\t$.fn.DataTable[ prop ] = val;\n\t} );\n\n\n\t// Information about events fired by DataTables - for documentation.\n\t/**\n\t * Draw event, fired whenever the table is redrawn on the page, at the same\n\t * point as fnDrawCallback. This may be useful for binding events or\n\t * performing calculations when the table is altered at all.\n\t *  @name DataTable#draw.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Search event, fired when the searching applied to the table (using the\n\t * built-in global search, or column filters) is altered.\n\t *  @name DataTable#search.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Page change event, fired when the paging of the table is altered.\n\t *  @name DataTable#page.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Order event, fired when the ordering applied to the table is altered.\n\t *  @name DataTable#order.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * DataTables initialisation complete event, fired when the table is fully\n\t * drawn, including Ajax data loaded, if Ajax data is required.\n\t *  @name DataTable#init.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The JSON object request from the server - only\n\t *    present if client-side Ajax sourced data is used</li></ol>\n\t */\n\n\t/**\n\t * State save event, fired when the table has changed state a new state save\n\t * is required. This event allows modification of the state saving object\n\t * prior to actually doing the save, including addition or other state\n\t * properties (for plug-ins) or modification of a DataTables core property.\n\t *  @name DataTable#stateSaveParams.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The state information to be saved\n\t */\n\n\t/**\n\t * State load event, fired when the table is loading state from the stored\n\t * data, but prior to the settings object being modified by the saved state\n\t * - allowing modification of the saved state is required or loading of\n\t * state for a plug-in.\n\t *  @name DataTable#stateLoadParams.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The saved state information\n\t */\n\n\t/**\n\t * State loaded event, fired when state has been loaded from stored data and\n\t * the settings object has been modified by the loaded data.\n\t *  @name DataTable#stateLoaded.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The saved state information\n\t */\n\n\t/**\n\t * Processing event, fired when DataTables is doing some kind of processing\n\t * (be it, order, searcg or anything else). It can be used to indicate to\n\t * the end user that there is something happening, or that something has\n\t * finished.\n\t *  @name DataTable#processing.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {boolean} bShow Flag for if DataTables is doing processing or not\n\t */\n\n\t/**\n\t * Ajax (XHR) event, fired whenever an Ajax request is completed from a\n\t * request to made to the server for new data. This event is called before\n\t * DataTables processed the returned data, so it can also be used to pre-\n\t * process the data returned from the server, if needed.\n\t *\n\t * Note that this trigger is called in `fnServerData`, if you override\n\t * `fnServerData` and which to use this event, you need to trigger it in you\n\t * success function.\n\t *  @name DataTable#xhr.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {object} json JSON returned from the server\n\t *\n\t *  @example\n\t *     // Use a custom property returned from the server in another DOM element\n\t *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n\t *       $('#status').html( json.status );\n\t *     } );\n\t *\n\t *  @example\n\t *     // Pre-process the data returned from the server\n\t *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n\t *       for ( var i=0, ien=json.aaData.length ; i<ien ; i++ ) {\n\t *         json.aaData[i].sum = json.aaData[i].one + json.aaData[i].two;\n\t *       }\n\t *       // Note no return - manipulate the data directly in the JSON object.\n\t *     } );\n\t */\n\n\t/**\n\t * Destroy event, fired when the DataTable is destroyed by calling fnDestroy\n\t * or passing the bDestroy:true parameter in the initialisation object. This\n\t * can be used to remove bound events, added DOM nodes, etc.\n\t *  @name DataTable#destroy.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Page length change event, fired when number of records to show on each\n\t * page (the length) is changed.\n\t *  @name DataTable#length.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {integer} len New length\n\t */\n\n\t/**\n\t * Column sizing has changed.\n\t *  @name DataTable#column-sizing.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Column visibility has changed.\n\t *  @name DataTable#column-visibility.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {int} column Column index\n\t *  @param {bool} vis `false` if column now hidden, or `true` if visible\n\t */\n\n\treturn $.fn.dataTable;\n}));\n","/*!\n * jQuery JavaScript Library v3.3.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2018-01-20T17:24Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar document = window.document;\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n      // Support: Chrome <=57, Firefox <=52\n      // In some browsers, typeof returns \"function\" for HTML <object> elements\n      // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n      // We don't want to classify *any* DOM node as a function.\n      return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n  };\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, doc, node ) {\n\t\tdoc = doc || document;\n\n\t\tvar i,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\t\t\t\tif ( node[ i ] ) {\n\t\t\t\t\tscript[ i ] = node[ i ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.3.1\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android <=4.0 only\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && Array.isArray( src ) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\n\t\t/* eslint-disable no-unused-vars */\n\t\t// See https://github.com/eslint/eslint/issues/6125\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tDOMEval( code );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android <=4.0 only\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.3\n * https://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-08-08\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tdisabledAncestor = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && (\"form\" in elem || \"label\" in elem);\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\n\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\tnewContext = context;\n\t\t\t\t\tnewSelector = selector;\n\n\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t// Support: IE <=8\n\t\t\t\t// Exclude object elements\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = \"#\" + nid + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\tif ( newSelector ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement(\"fieldset\");\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\t\tdisabledAncestor( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( preferredDoc !== document &&\n\t\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( el ) {\n\t\tel.appendChild( document.createComment(\"\") );\n\t\treturn !el.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( (elem = elems[i++]) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( el ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll(\":enabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll(\":disabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( el ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!compilerCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn (sel + \"\").replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( (oldCache = uniqueCache[ key ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( el ) {\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement(\"fieldset\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( el ) {\n\treturn el.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n};\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n        if ( nodeName( elem, \"iframe\" ) ) {\n            return elem.contentDocument;\n        }\n\n        // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n        // Treat the template element as a regular one in browsers that\n        // don't support it.\n        if ( nodeName( elem, \"template\" ) ) {\n            elem = elem.content || elem;\n        }\n\n        return jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the master Deferred\n\t\t\tmaster = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( master.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn master.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\n\t\t}\n\n\t\treturn master.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (#9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tjQuery.contains( elem.ownerDocument, elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE <=9 only\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE <=9 only\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, contains, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( contains ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\nvar documentElement = document.documentElement;\n\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 only\n// See #13393 for more info\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tvar event = jQuery.event.fix( nativeEvent );\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\n\twhich: function( event ) {\n\t\tvar button = event.button;\n\n\t\t// Add which for key events\n\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\n\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\n\t\t}\n\n\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\n\t\t\tif ( button & 1 ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ( button & 2 ) {\n\t\t\t\treturn 3;\n\t\t\t}\n\n\t\t\tif ( button & 4 ) {\n\t\t\t\treturn 2;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn event.which;\n\t}\n}, jQuery.event.addProp );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t/* eslint-disable max-len */\n\n\t// See https://github.com/eslint/eslint/issues/3229\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\n\t/* eslint-enable */\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), doc, node );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = div.offsetWidth === 36 || \"absolute\";\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trcustomProp = /^--/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style;\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a property mapped along what jQuery.cssProps suggests or to\n// a vendor prefixed property.\nfunction finalPropName( name ) {\n\tvar ret = jQuery.cssProps[ name ];\n\tif ( !ret ) {\n\t\tret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;\n\t}\n\treturn ret;\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\t\t) );\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\t\tval = curCSS( elem, dimension, styles ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox;\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\t// Check for style in case a browser which returns unreliable values\n\t// for getComputedStyle silently falls back to the reliable elem.style\n\tvalueIsBorderBox = valueIsBorderBox &&\n\t\t( support.boxSizingReliable() || val === elem.style[ dimension ] );\n\n\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t// This happens for inline elements with no explicit setting (gh-3571)\n\t// Support: Android <=4.1 - 4.3 only\n\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\tif ( val === \"auto\" ||\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) {\n\n\t\tval = elem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ];\n\n\t\t// offsetWidth/offsetHeight provide border-box values\n\t\tvalueIsBorderBox = true;\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\tif ( type === \"number\" ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\t\t\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra && boxModelAdjustment(\n\t\t\t\t\telem,\n\t\t\t\t\tdimension,\n\t\t\t\t\textra,\n\t\t\t\t\tisBorderBox,\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && support.scrollboxSize() === styles.position ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = Date.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t// the overflowX value there.\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tresult.stop.bind( result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tisFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = Date.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = classesToArray( value );\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = Date.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available and should be processed, append data to url\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce++ ) + uncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t} ).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t}\n} );\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n"],"sourceRoot":""}