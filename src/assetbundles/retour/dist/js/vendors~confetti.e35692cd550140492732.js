(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendors~confetti"],{

/***/ "./node_modules/vue-confetti/dist/vue-confetti.js":
/*!********************************************************!*\
  !*** ./node_modules/vue-confetti/dist/vue-confetti.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

!function(t,i){ true?module.exports=i():undefined}(this,function(){return function(t){function i(n){if(e[n])return e[n].exports;var s=e[n]={i:n,l:!1,exports:{}};return t[n].call(s.exports,s,s.exports,i),s.l=!0,s.exports}var e={};return i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},i.p="",i(i.s=0)}([function(t,i,e){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var n=e(1);i.default={install:function(t,i){this.installed||(this.installed=!0,t.prototype.$confetti=new n.a(i))}}},function(t,i,e){"use strict";function n(t,i){if(!(t instanceof i))throw new TypeError("Cannot call a class as a function")}var s=e(2),a=function(){function t(t,i){for(var e=0;e<i.length;e++){var n=i[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(i,e,n){return e&&t(i.prototype,e),n&&t(i,n),i}}(),h=function(){function t(){n(this,t),this.initialize(),this.onResizeCallback=this.updateDimensions.bind(this)}return a(t,[{key:"initialize",value:function(){this.canvas=null,this.ctx=null,this.W=0,this.H=0,this.particles={},this.droppedCount=0,this.particlesPerFrame=1.5,this.wind=0,this.windSpeed=1,this.windSpeedMax=1,this.windChange=.01,this.windPosCoef=.002,this.maxParticlesPerFrame=2,this.animationId=null}},{key:"createParticles",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.particles=new s.a({ctx:this.ctx,W:this.W,H:this.H,wind:this.wind,windPosCoef:this.windPosCoef,windSpeedMax:this.windSpeedMax,count:0,shape:t.shape||"circle",colors:{opts:t.colors||["DodgerBlue","OliveDrab","Gold","pink","SlateBlue","lightblue","Violet","PaleGreen","SteelBlue","SandyBrown","Chocolate","Crimson"],idx:0,step:10,get color(){return this.opts[(this.idx++/this.step|0)%this.opts.length]}}})}},{key:"createContext",value:function(){this.canvas=document.createElement("canvas"),this.ctx=this.canvas.getContext("2d"),this.canvas.style.display="block",this.canvas.style.position="fixed",this.canvas.style.pointerEvents="none",this.canvas.style.top=0,this.canvas.style.width="100vw",this.canvas.style.height="100vh",this.canvas.id="confetti-canvas",document.querySelector("body").appendChild(this.canvas)}},{key:"start",value:function(t){this.ctx||this.createContext(),this.animationId&&cancelAnimationFrame(this.animationId),this.createParticles(t),this.updateDimensions(),this.particlesPerFrame=this.maxParticlesPerFrame,this.animationId=requestAnimationFrame(this.mainLoop.bind(this)),window.addEventListener("resize",this.onResizeCallback)}},{key:"stop",value:function(){this.particlesPerFrame=0,window.removeEventListener("resize",this.onResizeCallback)}},{key:"remove",value:function(){this.stop(),this.animationId&&cancelAnimationFrame(this.animationId),this.canvas&&document.body.removeChild(this.canvas),this.initialize()}},{key:"updateDimensions",value:function(){this.W===window.innerWidth&&this.H===window.innerHeight||(this.W=this.particles.opts.W=this.canvas.width=window.innerWidth,this.H=this.particles.opts.H=this.canvas.height=window.innerHeight)}},{key:"mainLoop",value:function(t){for(this.updateDimensions(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.clearRect(0,0,this.W,this.H),this.windSpeed=Math.sin(t/8e3)*this.windSpeedMax,this.wind=this.particles.opts.wind+=this.windChange;this.droppedCount<this.particlesPerFrame;)this.droppedCount+=1,this.particles.add();this.droppedCount-=this.particlesPerFrame,this.particles.update(),this.particles.draw(),this.particles.items.length&&(this.animationId=requestAnimationFrame(this.mainLoop.bind(this)))}}]),t}();i.a=h},function(t,i,e){"use strict";function n(t,i){if(!(t instanceof i))throw new TypeError("Cannot call a class as a function")}var s=e(3),a=function(){function t(t,i){for(var e=0;e<i.length;e++){var n=i[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(i,e,n){return e&&t(i.prototype,e),n&&t(i,n),i}}(),h=function(){function t(i){n(this,t),this.items=[],this.pool=[],this.opts=i}return a(t,[{key:"update",value:function(){for(var t=0;t<this.items.length;t++)!0===this.items[t].update()&&this.pool.push(this.items.splice(t--,1)[0])}},{key:"draw",value:function(){for(var t=0;t<this.items.length;t++)this.items[t].draw()}},{key:"add",value:function(){this.pool.length>0?this.items.push(this.pool.pop().setup(this.opts)):this.items.push((new s.a).setup(this.opts))}}]),t}();i.a=h},function(t,i,e){"use strict";function n(t,i){if(!(t instanceof i))throw new TypeError("Cannot call a class as a function")}var s=function(){function t(t,i){for(var e=0;e<i.length;e++){var n=i[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(i,e,n){return e&&t(i.prototype,e),n&&t(i,n),i}}(),a=function(){function t(){n(this,t)}return s(t,[{key:"setup",value:function(t){var i=t.ctx,e=t.W,n=t.H,s=t.colors,a=t.wind,h=t.windPosCoef,o=t.windSpeedMax,r=t.count,c=t.shape;return this.ctx=i,this.W=e,this.H=n,this.wind=a,this.shape=c,this.windPosCoef=h,this.windSpeedMax=o,this.x=this.rand(-35,e+35),this.y=this.rand(-30,-35),this.d=this.rand(150)+10,this.r=this.rand(10,30),this.color=s.color,this.tilt=this.randI(10),this.tiltAngleIncremental=(this.rand(.08)+.04)*(this.rand()<.5?-1:1),this.tiltAngle=0,this.angle=this.rand(2*Math.PI),this.count=r++,this}},{key:"randI",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t+(t=0);return Math.random()*(i-t)+t|0}},{key:"rand",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t+(t=0);return Math.random()*(i-t)+t}},{key:"update",value:function(){return this.tiltAngle+=this.tiltAngleIncremental*(.2*Math.cos(this.wind+(this.d+this.x+this.y)*this.windPosCoef)+1),this.y+=(Math.cos(this.angle+this.d)+3+this.r/2)/2,this.x+=Math.sin(this.angle),this.x+=Math.cos(this.wind+(this.d+this.x+this.y)*this.windPosCoef)*this.windSpeedMax,this.y+=Math.sin(this.wind+(this.d+this.x+this.y)*this.windPosCoef)*this.windSpeedMax,this.tilt=15*Math.sin(this.tiltAngle-this.count/3),this.y>this.H}},{key:"drawCircle",value:function(){this.ctx.arc(0,0,this.r/2,0,2*Math.PI,!1),this.ctx.fill()}},{key:"drawRect",value:function(){this.ctx.fillRect(0,0,this.r,this.r/2)}},{key:"drawHeart",value:function(){var t=this,i=function(i,e,n,s,a,h){t.ctx.bezierCurveTo(i/t.r*2,e/t.r*2,n/t.r*2,s/t.r*2,a/t.r*2,h/t.r*2)};this.ctx.moveTo(37.5/this.r,20/this.r),i(75,37,70,25,50,25),i(20,25,20,62.5,20,62.5),i(20,80,40,102,75,120),i(110,102,130,80,130,62.5),i(130,62.5,130,25,100,25),i(85,25,75,37,75,40),this.ctx.fill()}},{key:"draw",value:function(){this.ctx.fillStyle=this.color,this.ctx.beginPath(),this.ctx.setTransform(Math.cos(this.tiltAngle),Math.sin(this.tiltAngle),0,1,this.x,this.y),"circle"===this.shape?this.drawCircle():"rect"===this.shape?this.drawRect():"heart"===this.shape&&this.drawHeart()}}]),t}();i.a=a}])});

/***/ }),

/***/ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js":
/*!********************************************************************!*\
  !*** ./node_modules/vue-loader/lib/runtime/componentNormalizer.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdnVlLWNvbmZldHRpL2Rpc3QvdnVlLWNvbmZldHRpLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsZUFBZSxtQ0FBbU0saUJBQWlCLG1CQUFtQixjQUFjLDRCQUE0QixZQUFZLHFCQUFxQiwyREFBMkQsU0FBUyx1Q0FBdUMscUNBQXFDLG9DQUFvQyxFQUFFLGlCQUFpQixpQ0FBaUMsaUJBQWlCLFlBQVksVUFBVSxzQkFBc0IsbUJBQW1CLGlEQUFpRCxpQkFBaUIsa0JBQWtCLGFBQWEsc0NBQXNDLFNBQVMsRUFBRSxXQUFXLFdBQVcsc0JBQXNCLHVFQUF1RSxpQkFBaUIsYUFBYSxnQkFBZ0IsOEVBQThFLHdCQUF3QixnQkFBZ0IsWUFBWSxXQUFXLEtBQUssV0FBVywrR0FBK0csdUJBQXVCLHdDQUF3QyxnQkFBZ0IsYUFBYSxtRkFBbUYsYUFBYSxrQ0FBa0Msa0VBQWtFLDhMQUE4TCxFQUFFLHVDQUF1QyxnRUFBZ0Usd0JBQXdCLGtKQUFrSiw4S0FBOEssOERBQThELEdBQUcsRUFBRSxxQ0FBcUMsa1hBQWtYLEVBQUUsOEJBQThCLG1UQUFtVCxFQUFFLDRCQUE0QixxRkFBcUYsRUFBRSw4QkFBOEIsNElBQTRJLEVBQUUsd0NBQXdDLGdNQUFnTSxFQUFFLGlDQUFpQywwTUFBME0seUNBQXlDLDJDQUEyQyx5TEFBeUwsS0FBSyxHQUFHLE1BQU0saUJBQWlCLGFBQWEsZ0JBQWdCLDhFQUE4RSx3QkFBd0IsZ0JBQWdCLFlBQVksV0FBVyxLQUFLLFdBQVcsK0dBQStHLHVCQUF1Qix3Q0FBd0MsZ0JBQWdCLGNBQWMsaURBQWlELGFBQWEsOEJBQThCLFlBQVksb0JBQW9CLDhFQUE4RSxFQUFFLDRCQUE0QixZQUFZLG9CQUFvQiwwQkFBMEIsRUFBRSwyQkFBMkIsa0hBQWtILEtBQUssR0FBRyxNQUFNLGlCQUFpQixhQUFhLGdCQUFnQiw4RUFBOEUsaUJBQWlCLGdCQUFnQixZQUFZLFdBQVcsS0FBSyxXQUFXLCtHQUErRyx1QkFBdUIsd0NBQXdDLGdCQUFnQixhQUFhLFVBQVUsYUFBYSw4QkFBOEIsaUdBQWlHLGlZQUFpWSxFQUFFLDhCQUE4QixxRUFBcUUsZ0NBQWdDLEVBQUUsNEJBQTRCLGdJQUFnSSw4QkFBOEIsRUFBRSw4QkFBOEIsa2JBQWtiLEVBQUUsa0NBQWtDLDJEQUEyRCxFQUFFLGdDQUFnQyx3Q0FBd0MsRUFBRSxpQ0FBaUMsbUNBQW1DLHNFQUFzRSx1TUFBdU0sRUFBRSw0QkFBNEIsa1FBQWtRLEtBQUssR0FBRyxNQUFNLEdBQUcsRTs7Ozs7Ozs7Ozs7OztBQ0FqdE87QUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoianMvdmVuZG9yc35jb25mZXR0aS5lMzU2OTJjZDU1MDE0MDQ5MjczMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiFmdW5jdGlvbih0LGkpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPWkoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtdLGkpOlwib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzP2V4cG9ydHNbXCJ2dWUtY29uZmV0dGlcIl09aSgpOnRbXCJ2dWUtY29uZmV0dGlcIl09aSgpfSh0aGlzLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGkobil7aWYoZVtuXSlyZXR1cm4gZVtuXS5leHBvcnRzO3ZhciBzPWVbbl09e2k6bixsOiExLGV4cG9ydHM6e319O3JldHVybiB0W25dLmNhbGwocy5leHBvcnRzLHMscy5leHBvcnRzLGkpLHMubD0hMCxzLmV4cG9ydHN9dmFyIGU9e307cmV0dXJuIGkubT10LGkuYz1lLGkuZD1mdW5jdGlvbih0LGUsbil7aS5vKHQsZSl8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse2NvbmZpZ3VyYWJsZTohMSxlbnVtZXJhYmxlOiEwLGdldDpufSl9LGkubj1mdW5jdGlvbih0KXt2YXIgZT10JiZ0Ll9fZXNNb2R1bGU/ZnVuY3Rpb24oKXtyZXR1cm4gdC5kZWZhdWx0fTpmdW5jdGlvbigpe3JldHVybiB0fTtyZXR1cm4gaS5kKGUsXCJhXCIsZSksZX0saS5vPWZ1bmN0aW9uKHQsaSl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGkpfSxpLnA9XCJcIixpKGkucz0wKX0oW2Z1bmN0aW9uKHQsaSxlKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkoaSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgbj1lKDEpO2kuZGVmYXVsdD17aW5zdGFsbDpmdW5jdGlvbih0LGkpe3RoaXMuaW5zdGFsbGVkfHwodGhpcy5pbnN0YWxsZWQ9ITAsdC5wcm90b3R5cGUuJGNvbmZldHRpPW5ldyBuLmEoaSkpfX19LGZ1bmN0aW9uKHQsaSxlKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBuKHQsaSl7aWYoISh0IGluc3RhbmNlb2YgaSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX12YXIgcz1lKDIpLGE9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsaSl7Zm9yKHZhciBlPTA7ZTxpLmxlbmd0aDtlKyspe3ZhciBuPWlbZV07bi5lbnVtZXJhYmxlPW4uZW51bWVyYWJsZXx8ITEsbi5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbiYmKG4ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG4ua2V5LG4pfX1yZXR1cm4gZnVuY3Rpb24oaSxlLG4pe3JldHVybiBlJiZ0KGkucHJvdG90eXBlLGUpLG4mJnQoaSxuKSxpfX0oKSxoPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe24odGhpcyx0KSx0aGlzLmluaXRpYWxpemUoKSx0aGlzLm9uUmVzaXplQ2FsbGJhY2s9dGhpcy51cGRhdGVEaW1lbnNpb25zLmJpbmQodGhpcyl9cmV0dXJuIGEodCxbe2tleTpcImluaXRpYWxpemVcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuY2FudmFzPW51bGwsdGhpcy5jdHg9bnVsbCx0aGlzLlc9MCx0aGlzLkg9MCx0aGlzLnBhcnRpY2xlcz17fSx0aGlzLmRyb3BwZWRDb3VudD0wLHRoaXMucGFydGljbGVzUGVyRnJhbWU9MS41LHRoaXMud2luZD0wLHRoaXMud2luZFNwZWVkPTEsdGhpcy53aW5kU3BlZWRNYXg9MSx0aGlzLndpbmRDaGFuZ2U9LjAxLHRoaXMud2luZFBvc0NvZWY9LjAwMix0aGlzLm1heFBhcnRpY2xlc1BlckZyYW1lPTIsdGhpcy5hbmltYXRpb25JZD1udWxsfX0se2tleTpcImNyZWF0ZVBhcnRpY2xlc1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9O3RoaXMucGFydGljbGVzPW5ldyBzLmEoe2N0eDp0aGlzLmN0eCxXOnRoaXMuVyxIOnRoaXMuSCx3aW5kOnRoaXMud2luZCx3aW5kUG9zQ29lZjp0aGlzLndpbmRQb3NDb2VmLHdpbmRTcGVlZE1heDp0aGlzLndpbmRTcGVlZE1heCxjb3VudDowLHNoYXBlOnQuc2hhcGV8fFwiY2lyY2xlXCIsY29sb3JzOntvcHRzOnQuY29sb3JzfHxbXCJEb2RnZXJCbHVlXCIsXCJPbGl2ZURyYWJcIixcIkdvbGRcIixcInBpbmtcIixcIlNsYXRlQmx1ZVwiLFwibGlnaHRibHVlXCIsXCJWaW9sZXRcIixcIlBhbGVHcmVlblwiLFwiU3RlZWxCbHVlXCIsXCJTYW5keUJyb3duXCIsXCJDaG9jb2xhdGVcIixcIkNyaW1zb25cIl0saWR4OjAsc3RlcDoxMCxnZXQgY29sb3IoKXtyZXR1cm4gdGhpcy5vcHRzWyh0aGlzLmlkeCsrL3RoaXMuc3RlcHwwKSV0aGlzLm9wdHMubGVuZ3RoXX19fSl9fSx7a2V5OlwiY3JlYXRlQ29udGV4dFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5jYW52YXM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKSx0aGlzLmN0eD10aGlzLmNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIiksdGhpcy5jYW52YXMuc3R5bGUuZGlzcGxheT1cImJsb2NrXCIsdGhpcy5jYW52YXMuc3R5bGUucG9zaXRpb249XCJmaXhlZFwiLHRoaXMuY2FudmFzLnN0eWxlLnBvaW50ZXJFdmVudHM9XCJub25lXCIsdGhpcy5jYW52YXMuc3R5bGUudG9wPTAsdGhpcy5jYW52YXMuc3R5bGUud2lkdGg9XCIxMDB2d1wiLHRoaXMuY2FudmFzLnN0eWxlLmhlaWdodD1cIjEwMHZoXCIsdGhpcy5jYW52YXMuaWQ9XCJjb25mZXR0aS1jYW52YXNcIixkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiYm9keVwiKS5hcHBlbmRDaGlsZCh0aGlzLmNhbnZhcyl9fSx7a2V5Olwic3RhcnRcIix2YWx1ZTpmdW5jdGlvbih0KXt0aGlzLmN0eHx8dGhpcy5jcmVhdGVDb250ZXh0KCksdGhpcy5hbmltYXRpb25JZCYmY2FuY2VsQW5pbWF0aW9uRnJhbWUodGhpcy5hbmltYXRpb25JZCksdGhpcy5jcmVhdGVQYXJ0aWNsZXModCksdGhpcy51cGRhdGVEaW1lbnNpb25zKCksdGhpcy5wYXJ0aWNsZXNQZXJGcmFtZT10aGlzLm1heFBhcnRpY2xlc1BlckZyYW1lLHRoaXMuYW5pbWF0aW9uSWQ9cmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMubWFpbkxvb3AuYmluZCh0aGlzKSksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIix0aGlzLm9uUmVzaXplQ2FsbGJhY2spfX0se2tleTpcInN0b3BcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMucGFydGljbGVzUGVyRnJhbWU9MCx3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLHRoaXMub25SZXNpemVDYWxsYmFjayl9fSx7a2V5OlwicmVtb3ZlXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLnN0b3AoKSx0aGlzLmFuaW1hdGlvbklkJiZjYW5jZWxBbmltYXRpb25GcmFtZSh0aGlzLmFuaW1hdGlvbklkKSx0aGlzLmNhbnZhcyYmZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0aGlzLmNhbnZhcyksdGhpcy5pbml0aWFsaXplKCl9fSx7a2V5OlwidXBkYXRlRGltZW5zaW9uc1wiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5XPT09d2luZG93LmlubmVyV2lkdGgmJnRoaXMuSD09PXdpbmRvdy5pbm5lckhlaWdodHx8KHRoaXMuVz10aGlzLnBhcnRpY2xlcy5vcHRzLlc9dGhpcy5jYW52YXMud2lkdGg9d2luZG93LmlubmVyV2lkdGgsdGhpcy5IPXRoaXMucGFydGljbGVzLm9wdHMuSD10aGlzLmNhbnZhcy5oZWlnaHQ9d2luZG93LmlubmVySGVpZ2h0KX19LHtrZXk6XCJtYWluTG9vcFwiLHZhbHVlOmZ1bmN0aW9uKHQpe2Zvcih0aGlzLnVwZGF0ZURpbWVuc2lvbnMoKSx0aGlzLmN0eC5zZXRUcmFuc2Zvcm0oMSwwLDAsMSwwLDApLHRoaXMuY3R4LmNsZWFyUmVjdCgwLDAsdGhpcy5XLHRoaXMuSCksdGhpcy53aW5kU3BlZWQ9TWF0aC5zaW4odC84ZTMpKnRoaXMud2luZFNwZWVkTWF4LHRoaXMud2luZD10aGlzLnBhcnRpY2xlcy5vcHRzLndpbmQrPXRoaXMud2luZENoYW5nZTt0aGlzLmRyb3BwZWRDb3VudDx0aGlzLnBhcnRpY2xlc1BlckZyYW1lOyl0aGlzLmRyb3BwZWRDb3VudCs9MSx0aGlzLnBhcnRpY2xlcy5hZGQoKTt0aGlzLmRyb3BwZWRDb3VudC09dGhpcy5wYXJ0aWNsZXNQZXJGcmFtZSx0aGlzLnBhcnRpY2xlcy51cGRhdGUoKSx0aGlzLnBhcnRpY2xlcy5kcmF3KCksdGhpcy5wYXJ0aWNsZXMuaXRlbXMubGVuZ3RoJiYodGhpcy5hbmltYXRpb25JZD1yZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5tYWluTG9vcC5iaW5kKHRoaXMpKSl9fV0pLHR9KCk7aS5hPWh9LGZ1bmN0aW9uKHQsaSxlKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBuKHQsaSl7aWYoISh0IGluc3RhbmNlb2YgaSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX12YXIgcz1lKDMpLGE9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsaSl7Zm9yKHZhciBlPTA7ZTxpLmxlbmd0aDtlKyspe3ZhciBuPWlbZV07bi5lbnVtZXJhYmxlPW4uZW51bWVyYWJsZXx8ITEsbi5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbiYmKG4ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG4ua2V5LG4pfX1yZXR1cm4gZnVuY3Rpb24oaSxlLG4pe3JldHVybiBlJiZ0KGkucHJvdG90eXBlLGUpLG4mJnQoaSxuKSxpfX0oKSxoPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdChpKXtuKHRoaXMsdCksdGhpcy5pdGVtcz1bXSx0aGlzLnBvb2w9W10sdGhpcy5vcHRzPWl9cmV0dXJuIGEodCxbe2tleTpcInVwZGF0ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PTA7dDx0aGlzLml0ZW1zLmxlbmd0aDt0KyspITA9PT10aGlzLml0ZW1zW3RdLnVwZGF0ZSgpJiZ0aGlzLnBvb2wucHVzaCh0aGlzLml0ZW1zLnNwbGljZSh0LS0sMSlbMF0pfX0se2tleTpcImRyYXdcIix2YWx1ZTpmdW5jdGlvbigpe2Zvcih2YXIgdD0wO3Q8dGhpcy5pdGVtcy5sZW5ndGg7dCsrKXRoaXMuaXRlbXNbdF0uZHJhdygpfX0se2tleTpcImFkZFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5wb29sLmxlbmd0aD4wP3RoaXMuaXRlbXMucHVzaCh0aGlzLnBvb2wucG9wKCkuc2V0dXAodGhpcy5vcHRzKSk6dGhpcy5pdGVtcy5wdXNoKChuZXcgcy5hKS5zZXR1cCh0aGlzLm9wdHMpKX19XSksdH0oKTtpLmE9aH0sZnVuY3Rpb24odCxpLGUpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIG4odCxpKXtpZighKHQgaW5zdGFuY2VvZiBpKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfXZhciBzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGkpe2Zvcih2YXIgZT0wO2U8aS5sZW5ndGg7ZSsrKXt2YXIgbj1pW2VdO24uZW51bWVyYWJsZT1uLmVudW1lcmFibGV8fCExLG4uY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIG4mJihuLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxuLmtleSxuKX19cmV0dXJuIGZ1bmN0aW9uKGksZSxuKXtyZXR1cm4gZSYmdChpLnByb3RvdHlwZSxlKSxuJiZ0KGksbiksaX19KCksYT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXtuKHRoaXMsdCl9cmV0dXJuIHModCxbe2tleTpcInNldHVwXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGk9dC5jdHgsZT10Llcsbj10Lkgscz10LmNvbG9ycyxhPXQud2luZCxoPXQud2luZFBvc0NvZWYsbz10LndpbmRTcGVlZE1heCxyPXQuY291bnQsYz10LnNoYXBlO3JldHVybiB0aGlzLmN0eD1pLHRoaXMuVz1lLHRoaXMuSD1uLHRoaXMud2luZD1hLHRoaXMuc2hhcGU9Yyx0aGlzLndpbmRQb3NDb2VmPWgsdGhpcy53aW5kU3BlZWRNYXg9byx0aGlzLng9dGhpcy5yYW5kKC0zNSxlKzM1KSx0aGlzLnk9dGhpcy5yYW5kKC0zMCwtMzUpLHRoaXMuZD10aGlzLnJhbmQoMTUwKSsxMCx0aGlzLnI9dGhpcy5yYW5kKDEwLDMwKSx0aGlzLmNvbG9yPXMuY29sb3IsdGhpcy50aWx0PXRoaXMucmFuZEkoMTApLHRoaXMudGlsdEFuZ2xlSW5jcmVtZW50YWw9KHRoaXMucmFuZCguMDgpKy4wNCkqKHRoaXMucmFuZCgpPC41Py0xOjEpLHRoaXMudGlsdEFuZ2xlPTAsdGhpcy5hbmdsZT10aGlzLnJhbmQoMipNYXRoLlBJKSx0aGlzLmNvdW50PXIrKyx0aGlzfX0se2tleTpcInJhbmRJXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGk9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnQrKHQ9MCk7cmV0dXJuIE1hdGgucmFuZG9tKCkqKGktdCkrdHwwfX0se2tleTpcInJhbmRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXToxLGk9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnQrKHQ9MCk7cmV0dXJuIE1hdGgucmFuZG9tKCkqKGktdCkrdH19LHtrZXk6XCJ1cGRhdGVcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnRpbHRBbmdsZSs9dGhpcy50aWx0QW5nbGVJbmNyZW1lbnRhbCooLjIqTWF0aC5jb3ModGhpcy53aW5kKyh0aGlzLmQrdGhpcy54K3RoaXMueSkqdGhpcy53aW5kUG9zQ29lZikrMSksdGhpcy55Kz0oTWF0aC5jb3ModGhpcy5hbmdsZSt0aGlzLmQpKzMrdGhpcy5yLzIpLzIsdGhpcy54Kz1NYXRoLnNpbih0aGlzLmFuZ2xlKSx0aGlzLngrPU1hdGguY29zKHRoaXMud2luZCsodGhpcy5kK3RoaXMueCt0aGlzLnkpKnRoaXMud2luZFBvc0NvZWYpKnRoaXMud2luZFNwZWVkTWF4LHRoaXMueSs9TWF0aC5zaW4odGhpcy53aW5kKyh0aGlzLmQrdGhpcy54K3RoaXMueSkqdGhpcy53aW5kUG9zQ29lZikqdGhpcy53aW5kU3BlZWRNYXgsdGhpcy50aWx0PTE1Kk1hdGguc2luKHRoaXMudGlsdEFuZ2xlLXRoaXMuY291bnQvMyksdGhpcy55PnRoaXMuSH19LHtrZXk6XCJkcmF3Q2lyY2xlXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLmN0eC5hcmMoMCwwLHRoaXMuci8yLDAsMipNYXRoLlBJLCExKSx0aGlzLmN0eC5maWxsKCl9fSx7a2V5OlwiZHJhd1JlY3RcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuY3R4LmZpbGxSZWN0KDAsMCx0aGlzLnIsdGhpcy5yLzIpfX0se2tleTpcImRyYXdIZWFydFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxpPWZ1bmN0aW9uKGksZSxuLHMsYSxoKXt0LmN0eC5iZXppZXJDdXJ2ZVRvKGkvdC5yKjIsZS90LnIqMixuL3QucioyLHMvdC5yKjIsYS90LnIqMixoL3QucioyKX07dGhpcy5jdHgubW92ZVRvKDM3LjUvdGhpcy5yLDIwL3RoaXMuciksaSg3NSwzNyw3MCwyNSw1MCwyNSksaSgyMCwyNSwyMCw2Mi41LDIwLDYyLjUpLGkoMjAsODAsNDAsMTAyLDc1LDEyMCksaSgxMTAsMTAyLDEzMCw4MCwxMzAsNjIuNSksaSgxMzAsNjIuNSwxMzAsMjUsMTAwLDI1KSxpKDg1LDI1LDc1LDM3LDc1LDQwKSx0aGlzLmN0eC5maWxsKCl9fSx7a2V5OlwiZHJhd1wiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5jdHguZmlsbFN0eWxlPXRoaXMuY29sb3IsdGhpcy5jdHguYmVnaW5QYXRoKCksdGhpcy5jdHguc2V0VHJhbnNmb3JtKE1hdGguY29zKHRoaXMudGlsdEFuZ2xlKSxNYXRoLnNpbih0aGlzLnRpbHRBbmdsZSksMCwxLHRoaXMueCx0aGlzLnkpLFwiY2lyY2xlXCI9PT10aGlzLnNoYXBlP3RoaXMuZHJhd0NpcmNsZSgpOlwicmVjdFwiPT09dGhpcy5zaGFwZT90aGlzLmRyYXdSZWN0KCk6XCJoZWFydFwiPT09dGhpcy5zaGFwZSYmdGhpcy5kcmF3SGVhcnQoKX19XSksdH0oKTtpLmE9YX1dKX0pOyIsIi8qIGdsb2JhbHMgX19WVUVfU1NSX0NPTlRFWFRfXyAqL1xuXG4vLyBJTVBPUlRBTlQ6IERvIE5PVCB1c2UgRVMyMDE1IGZlYXR1cmVzIGluIHRoaXMgZmlsZSAoZXhjZXB0IGZvciBtb2R1bGVzKS5cbi8vIFRoaXMgbW9kdWxlIGlzIGEgcnVudGltZSB1dGlsaXR5IGZvciBjbGVhbmVyIGNvbXBvbmVudCBtb2R1bGUgb3V0cHV0IGFuZCB3aWxsXG4vLyBiZSBpbmNsdWRlZCBpbiB0aGUgZmluYWwgd2VicGFjayB1c2VyIGJ1bmRsZS5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbm9ybWFsaXplQ29tcG9uZW50IChcbiAgc2NyaXB0RXhwb3J0cyxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZ1bmN0aW9uYWxUZW1wbGF0ZSxcbiAgaW5qZWN0U3R5bGVzLFxuICBzY29wZUlkLFxuICBtb2R1bGVJZGVudGlmaWVyLCAvKiBzZXJ2ZXIgb25seSAqL1xuICBzaGFkb3dNb2RlIC8qIHZ1ZS1jbGkgb25seSAqL1xuKSB7XG4gIC8vIFZ1ZS5leHRlbmQgY29uc3RydWN0b3IgZXhwb3J0IGludGVyb3BcbiAgdmFyIG9wdGlvbnMgPSB0eXBlb2Ygc2NyaXB0RXhwb3J0cyA9PT0gJ2Z1bmN0aW9uJ1xuICAgID8gc2NyaXB0RXhwb3J0cy5vcHRpb25zXG4gICAgOiBzY3JpcHRFeHBvcnRzXG5cbiAgLy8gcmVuZGVyIGZ1bmN0aW9uc1xuICBpZiAocmVuZGVyKSB7XG4gICAgb3B0aW9ucy5yZW5kZXIgPSByZW5kZXJcbiAgICBvcHRpb25zLnN0YXRpY1JlbmRlckZucyA9IHN0YXRpY1JlbmRlckZuc1xuICAgIG9wdGlvbnMuX2NvbXBpbGVkID0gdHJ1ZVxuICB9XG5cbiAgLy8gZnVuY3Rpb25hbCB0ZW1wbGF0ZVxuICBpZiAoZnVuY3Rpb25hbFRlbXBsYXRlKSB7XG4gICAgb3B0aW9ucy5mdW5jdGlvbmFsID0gdHJ1ZVxuICB9XG5cbiAgLy8gc2NvcGVkSWRcbiAgaWYgKHNjb3BlSWQpIHtcbiAgICBvcHRpb25zLl9zY29wZUlkID0gJ2RhdGEtdi0nICsgc2NvcGVJZFxuICB9XG5cbiAgdmFyIGhvb2tcbiAgaWYgKG1vZHVsZUlkZW50aWZpZXIpIHsgLy8gc2VydmVyIGJ1aWxkXG4gICAgaG9vayA9IGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAvLyAyLjMgaW5qZWN0aW9uXG4gICAgICBjb250ZXh0ID1cbiAgICAgICAgY29udGV4dCB8fCAvLyBjYWNoZWQgY2FsbFxuICAgICAgICAodGhpcy4kdm5vZGUgJiYgdGhpcy4kdm5vZGUuc3NyQ29udGV4dCkgfHwgLy8gc3RhdGVmdWxcbiAgICAgICAgKHRoaXMucGFyZW50ICYmIHRoaXMucGFyZW50LiR2bm9kZSAmJiB0aGlzLnBhcmVudC4kdm5vZGUuc3NyQ29udGV4dCkgLy8gZnVuY3Rpb25hbFxuICAgICAgLy8gMi4yIHdpdGggcnVuSW5OZXdDb250ZXh0OiB0cnVlXG4gICAgICBpZiAoIWNvbnRleHQgJiYgdHlwZW9mIF9fVlVFX1NTUl9DT05URVhUX18gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnRleHQgPSBfX1ZVRV9TU1JfQ09OVEVYVF9fXG4gICAgICB9XG4gICAgICAvLyBpbmplY3QgY29tcG9uZW50IHN0eWxlc1xuICAgICAgaWYgKGluamVjdFN0eWxlcykge1xuICAgICAgICBpbmplY3RTdHlsZXMuY2FsbCh0aGlzLCBjb250ZXh0KVxuICAgICAgfVxuICAgICAgLy8gcmVnaXN0ZXIgY29tcG9uZW50IG1vZHVsZSBpZGVudGlmaWVyIGZvciBhc3luYyBjaHVuayBpbmZlcnJlbmNlXG4gICAgICBpZiAoY29udGV4dCAmJiBjb250ZXh0Ll9yZWdpc3RlcmVkQ29tcG9uZW50cykge1xuICAgICAgICBjb250ZXh0Ll9yZWdpc3RlcmVkQ29tcG9uZW50cy5hZGQobW9kdWxlSWRlbnRpZmllcilcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gdXNlZCBieSBzc3IgaW4gY2FzZSBjb21wb25lbnQgaXMgY2FjaGVkIGFuZCBiZWZvcmVDcmVhdGVcbiAgICAvLyBuZXZlciBnZXRzIGNhbGxlZFxuICAgIG9wdGlvbnMuX3NzclJlZ2lzdGVyID0gaG9va1xuICB9IGVsc2UgaWYgKGluamVjdFN0eWxlcykge1xuICAgIGhvb2sgPSBzaGFkb3dNb2RlXG4gICAgICA/IGZ1bmN0aW9uICgpIHsgaW5qZWN0U3R5bGVzLmNhbGwodGhpcywgdGhpcy4kcm9vdC4kb3B0aW9ucy5zaGFkb3dSb290KSB9XG4gICAgICA6IGluamVjdFN0eWxlc1xuICB9XG5cbiAgaWYgKGhvb2spIHtcbiAgICBpZiAob3B0aW9ucy5mdW5jdGlvbmFsKSB7XG4gICAgICAvLyBmb3IgdGVtcGxhdGUtb25seSBob3QtcmVsb2FkIGJlY2F1c2UgaW4gdGhhdCBjYXNlIHRoZSByZW5kZXIgZm4gZG9lc24ndFxuICAgICAgLy8gZ28gdGhyb3VnaCB0aGUgbm9ybWFsaXplclxuICAgICAgb3B0aW9ucy5faW5qZWN0U3R5bGVzID0gaG9va1xuICAgICAgLy8gcmVnaXN0ZXIgZm9yIGZ1bmN0aW9hbCBjb21wb25lbnQgaW4gdnVlIGZpbGVcbiAgICAgIHZhciBvcmlnaW5hbFJlbmRlciA9IG9wdGlvbnMucmVuZGVyXG4gICAgICBvcHRpb25zLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcldpdGhTdHlsZUluamVjdGlvbiAoaCwgY29udGV4dCkge1xuICAgICAgICBob29rLmNhbGwoY29udGV4dClcbiAgICAgICAgcmV0dXJuIG9yaWdpbmFsUmVuZGVyKGgsIGNvbnRleHQpXG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGluamVjdCBjb21wb25lbnQgcmVnaXN0cmF0aW9uIGFzIGJlZm9yZUNyZWF0ZSBob29rXG4gICAgICB2YXIgZXhpc3RpbmcgPSBvcHRpb25zLmJlZm9yZUNyZWF0ZVxuICAgICAgb3B0aW9ucy5iZWZvcmVDcmVhdGUgPSBleGlzdGluZ1xuICAgICAgICA/IFtdLmNvbmNhdChleGlzdGluZywgaG9vaylcbiAgICAgICAgOiBbaG9va11cbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGV4cG9ydHM6IHNjcmlwdEV4cG9ydHMsXG4gICAgb3B0aW9uczogb3B0aW9uc1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9